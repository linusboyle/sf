DIGEST bf873ab77d5bc887940c775641132c85
FPLF.Equiv
R107:110 PLF.Maps <> <> lib
R137:145 Coq.Bool.Bool <> <> lib
R172:182 Coq.Arith.Arith <> <> lib
R209:216 Coq.Init.Nat <> <> lib
R243:256 Coq.Arith.PeanoNat <> <> lib
R295:305 Coq.Arith.EqNat <> <> lib
R332:342 Coq.omega.Omega <> <> lib
R369:378 Coq.Lists.List <> <> lib
R405:434 Coq.Logic.FunctionalExtensionality <> <> lib
R483:485 PLF.Imp <> <> lib
def 2695:2700 <> aequiv
R2711:2714 PLF.Imp <> aexp ind
R2742:2746 PLF.Imp <> state def
R2765:2767 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2754:2758 PLF.Imp <> aeval def
R2763:2764 PLF.Equiv <> a1 var
R2760:2761 PLF.Equiv <> st var
R2768:2772 PLF.Imp <> aeval def
R2777:2778 PLF.Equiv <> a2 var
R2774:2775 PLF.Equiv <> st var
def 2793:2798 <> bequiv
R2809:2812 PLF.Imp <> bexp ind
R2840:2844 PLF.Imp <> state def
R2863:2865 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2852:2856 PLF.Imp <> beval def
R2861:2862 PLF.Equiv <> b1 var
R2858:2859 PLF.Equiv <> st var
R2866:2870 PLF.Imp <> beval def
R2875:2876 PLF.Equiv <> b2 var
R2872:2873 PLF.Equiv <> st var
prf 2985:2998 <> aequiv_example
R3001:3006 PLF.Equiv <> aequiv def
R3010:3012 PLF.Imp <> ::imp_scope:x_'-'_x not
R3009:3009 PLF.Imp <> X def
R3013:3013 PLF.Imp <> X def
prf 3067:3080 <> bequiv_example
R3083:3088 PLF.Equiv <> bequiv def
R3106:3109 Coq.Init.Datatypes <> true constr
R3096:3098 PLF.Imp <> ::imp_scope:x_'='_x not
R3092:3094 PLF.Imp <> ::imp_scope:x_'-'_x not
R3091:3091 PLF.Imp <> X def
R3095:3095 PLF.Imp <> X def
R3139:3143 PLF.Imp <> beval def
R3156:3169 PLF.Equiv <> aequiv_example thm
R3156:3169 PLF.Equiv <> aequiv_example thm
R3156:3169 PLF.Equiv <> aequiv_example thm
def 3867:3872 <> cequiv
R3883:3885 PLF.Imp <> com ind
R3917:3921 PLF.Imp <> state def
R3929:3929 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R3946:3952 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R3969:3969 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R3932:3935 PLF.Imp <> :::x_'=['_x_']=>'_x not
R3938:3942 PLF.Imp <> :::x_'=['_x_']=>'_x not
R3936:3937 PLF.Equiv <> c1 var
R3930:3931 PLF.Equiv <> st var
R3943:3945 PLF.Equiv <> st' var
R3955:3958 PLF.Imp <> :::x_'=['_x_']=>'_x not
R3961:3965 PLF.Imp <> :::x_'=['_x_']=>'_x not
R3959:3960 PLF.Equiv <> c2 var
R3953:3954 PLF.Equiv <> st var
R3966:3968 PLF.Equiv <> st' var
prf 4210:4218 <> skip_left
R4234:4239 PLF.Equiv <> cequiv def
R4260:4260 PLF.Equiv <> c var
R4250:4252 PLF.Imp <> ::imp_scope:x_';;'_x not
R4246:4249 PLF.Imp <> ::imp_scope:'SKIP' not
R4253:4253 PLF.Equiv <> c var
R4433:4437 PLF.Imp <> E_Seq constr
R4433:4437 PLF.Imp <> E_Seq constr
R4458:4463 PLF.Imp <> E_Skip constr
R4458:4463 PLF.Imp <> E_Skip constr
prf 4637:4646 <> skip_right
R4662:4667 PLF.Equiv <> cequiv def
R4689:4689 PLF.Equiv <> c var
R4675:4678 PLF.Imp <> ::imp_scope:x_';;'_x not
R4674:4674 PLF.Equiv <> c var
R4679:4682 PLF.Imp <> ::imp_scope:'SKIP' not
R4805:4809 PLF.Imp <> E_Seq constr
R4805:4809 PLF.Imp <> E_Seq constr
R4847:4852 PLF.Imp <> E_Skip constr
R4847:4852 PLF.Imp <> E_Skip constr
prf 4966:4981 <> TEST_true_simple
R5001:5006 PLF.Equiv <> cequiv def
R5047:5048 PLF.Equiv <> c1 var
R5013:5017 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R5022:5027 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R5030:5035 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R5038:5040 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R5018:5021 Coq.Init.Datatypes <> true constr
R5028:5029 PLF.Equiv <> c1 var
R5036:5037 PLF.Equiv <> c2 var
R5179:5186 PLF.Imp <> E_IfTrue constr
R5179:5186 PLF.Imp <> E_IfTrue constr
prf 7110:7118 <> TEST_true
R7153:7159 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7160:7165 PLF.Equiv <> cequiv def
R7203:7204 PLF.Equiv <> c1 var
R7172:7176 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R7178:7183 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R7186:7191 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R7194:7196 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R7177:7177 PLF.Equiv <> b var
R7184:7185 PLF.Equiv <> c1 var
R7192:7193 PLF.Equiv <> c2 var
R7139:7144 PLF.Equiv <> bequiv def
R7148:7152 PLF.Imp <> BTrue constr
R7146:7146 PLF.Equiv <> b var
R7403:7408 PLF.Equiv <> bequiv def
R7497:7504 PLF.Imp <> E_IfTrue constr
R7497:7504 PLF.Imp <> E_IfTrue constr
R7534:7539 PLF.Equiv <> bequiv def
prf 7672:7681 <> TEST_false
R7718:7723 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7724:7729 PLF.Equiv <> cequiv def
R7767:7768 PLF.Equiv <> c2 var
R7736:7740 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R7742:7747 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R7750:7755 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R7758:7760 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R7741:7741 PLF.Equiv <> b var
R7748:7749 PLF.Equiv <> c1 var
R7756:7757 PLF.Equiv <> c2 var
R7703:7708 PLF.Equiv <> bequiv def
R7712:7717 PLF.Imp <> BFalse constr
R7710:7710 PLF.Equiv <> b var
R7862:7867 PLF.Equiv <> bequiv def
R7946:7954 PLF.Imp <> E_IfFalse constr
R7946:7954 PLF.Imp <> E_IfFalse constr
prf 8161:8176 <> swap_if_branches
R8198:8203 PLF.Equiv <> cequiv def
R8242:8246 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R8253:8258 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R8261:8266 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R8269:8271 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R8247:8250 PLF.Imp <> BNot constr
R8252:8252 PLF.Equiv <> b var
R8259:8260 PLF.Equiv <> e2 var
R8267:8268 PLF.Equiv <> e1 var
R8210:8214 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R8216:8221 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R8224:8229 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R8232:8234 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R8215:8215 PLF.Equiv <> b var
R8222:8223 PLF.Equiv <> e1 var
R8230:8231 PLF.Equiv <> e2 var
R8360:8368 PLF.Imp <> E_IfFalse constr
R8360:8368 PLF.Imp <> E_IfFalse constr
R8444:8451 PLF.Imp <> E_IfTrue constr
R8444:8451 PLF.Imp <> E_IfTrue constr
R8550:8558 PLF.Imp <> E_IfFalse constr
R8550:8558 PLF.Imp <> E_IfFalse constr
R8592:8596 PLF.Imp <> beval def
R8592:8596 PLF.Imp <> beval def
R8668:8675 PLF.Imp <> E_IfTrue constr
R8668:8675 PLF.Imp <> E_IfTrue constr
R8709:8713 PLF.Imp <> beval def
R8709:8713 PLF.Imp <> beval def
prf 9118:9128 <> WHILE_false
R9161:9166 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9167:9172 PLF.Equiv <> cequiv def
R9201:9204 PLF.Imp <> ::imp_scope:'SKIP' not
R9179:9184 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R9186:9189 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R9191:9194 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R9185:9185 PLF.Equiv <> b var
R9190:9190 PLF.Equiv <> c var
R9146:9151 PLF.Equiv <> bequiv def
R9155:9160 PLF.Imp <> BFalse constr
R9153:9153 PLF.Equiv <> b var
R9322:9327 PLF.Imp <> E_Skip constr
R9322:9327 PLF.Imp <> E_Skip constr
R9439:9450 PLF.Imp <> E_WhileFalse constr
R9439:9450 PLF.Imp <> E_WhileFalse constr
prf 10857:10874 <> WHILE_true_nonterm
R10913:10918 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10919:10921 Coq.Init.Logic <> ::type_scope:'~'_x not
R10952:10953 Coq.Init.Logic <> ::type_scope:'~'_x not
R10924:10927 PLF.Imp <> :::x_'=['_x_']=>'_x not
R10944:10948 PLF.Imp <> :::x_'=['_x_']=>'_x not
R10928:10933 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R10935:10938 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R10940:10943 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R10934:10934 PLF.Equiv <> b var
R10939:10939 PLF.Equiv <> c var
R10922:10923 PLF.Equiv <> st var
R10949:10951 PLF.Equiv <> st' var
R10899:10904 PLF.Equiv <> bequiv def
R10908:10912 PLF.Imp <> BTrue constr
R10906:10906 PLF.Equiv <> b var
R11035:11040 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R11042:11045 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R11047:11050 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R11035:11040 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R11042:11045 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R11047:11050 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R11330:11335 PLF.Equiv <> bequiv def
prf 11881:11890 <> WHILE_true
R11921:11927 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11928:11933 PLF.Equiv <> cequiv def
R11963:11968 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R11973:11976 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R11981:11984 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R11969:11972 Coq.Init.Datatypes <> true constr
R11977:11980 PLF.Imp <> ::imp_scope:'SKIP' not
R11940:11945 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R11947:11950 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R11952:11955 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R11946:11946 PLF.Equiv <> b var
R11951:11951 PLF.Equiv <> c var
R11908:11913 PLF.Equiv <> bequiv def
R11917:11920 Coq.Init.Datatypes <> true constr
R11915:11915 PLF.Equiv <> b var
R12049:12066 PLF.Equiv <> WHILE_true_nonterm thm
R12049:12066 PLF.Equiv <> WHILE_true_nonterm thm
R12158:12163 PLF.Equiv <> bequiv def
R12170:12173 Coq.Init.Datatypes <> true constr
R12165:12168 Coq.Init.Datatypes <> true constr
R12158:12163 PLF.Equiv <> bequiv def
R12170:12173 Coq.Init.Datatypes <> true constr
R12165:12168 Coq.Init.Datatypes <> true constr
R12190:12195 PLF.Equiv <> bequiv def
R12279:12282 PLF.Imp <> ::imp_scope:'SKIP' not
R12250:12267 PLF.Equiv <> WHILE_true_nonterm thm
R12279:12282 PLF.Imp <> ::imp_scope:'SKIP' not
R12250:12267 PLF.Equiv <> WHILE_true_nonterm thm
prf 12585:12598 <> loop_unrolling
R12616:12621 PLF.Equiv <> cequiv def
R12651:12655 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R12657:12663 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R12685:12691 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R12696:12698 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R12656:12656 PLF.Equiv <> b var
R12665:12668 PLF.Imp <> ::imp_scope:x_';;'_x not
R12664:12664 PLF.Equiv <> c var
R12669:12674 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R12676:12679 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R12681:12684 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R12675:12675 PLF.Equiv <> b var
R12680:12680 PLF.Equiv <> c var
R12692:12695 PLF.Imp <> ::imp_scope:'SKIP' not
R12628:12633 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R12635:12638 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R12640:12643 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R12634:12634 PLF.Equiv <> b var
R12639:12639 PLF.Equiv <> c var
R12855:12863 PLF.Imp <> E_IfFalse constr
R12855:12863 PLF.Imp <> E_IfFalse constr
R12884:12889 PLF.Imp <> E_Skip constr
R12884:12889 PLF.Imp <> E_Skip constr
R12926:12933 PLF.Imp <> E_IfTrue constr
R12926:12933 PLF.Imp <> E_IfTrue constr
R12960:12964 PLF.Imp <> E_Seq constr
R12960:12964 PLF.Imp <> E_Seq constr
R13110:13120 PLF.Imp <> E_WhileTrue constr
R13110:13120 PLF.Imp <> E_WhileTrue constr
R13246:13257 PLF.Imp <> E_WhileFalse constr
R13246:13257 PLF.Imp <> E_WhileFalse constr
prf 13350:13358 <> seq_assoc
R13381:13386 PLF.Equiv <> cequiv def
R13406:13408 PLF.Imp <> ::imp_scope:x_';;'_x not
R13415:13415 PLF.Imp <> ::imp_scope:x_';;'_x not
R13404:13405 PLF.Equiv <> c1 var
R13411:13412 PLF.Imp <> ::imp_scope:x_';;'_x not
R13409:13410 PLF.Equiv <> c2 var
R13413:13414 PLF.Equiv <> c3 var
R13389:13389 PLF.Imp <> ::imp_scope:x_';;'_x not
R13396:13398 PLF.Imp <> ::imp_scope:x_';;'_x not
R13392:13393 PLF.Imp <> ::imp_scope:x_';;'_x not
R13390:13391 PLF.Equiv <> c1 var
R13394:13395 PLF.Equiv <> c2 var
R13399:13400 PLF.Equiv <> c3 var
R13530:13534 PLF.Imp <> E_Seq constr
R13530:13534 PLF.Imp <> E_Seq constr
R13578:13582 PLF.Imp <> E_Seq constr
R13578:13582 PLF.Imp <> E_Seq constr
R13687:13691 PLF.Imp <> E_Seq constr
R13687:13691 PLF.Imp <> E_Seq constr
R13723:13727 PLF.Imp <> E_Seq constr
R13723:13727 PLF.Imp <> E_Seq constr
prf 14027:14045 <> identity_assignment
R14061:14066 PLF.Equiv <> cequiv def
R14086:14089 PLF.Imp <> ::imp_scope:'SKIP' not
R14074:14078 PLF.Imp <> ::imp_scope:x_'::='_x not
R14073:14073 PLF.Equiv <> x var
R14079:14079 PLF.Equiv <> x var
R14172:14184 PLF.Maps <> t_update_same prfax
R14172:14184 PLF.Maps <> t_update_same prfax
R14172:14184 PLF.Maps <> t_update_same prfax
R14197:14202 PLF.Imp <> E_Skip constr
R14197:14202 PLF.Imp <> E_Skip constr
R14238:14241 PLF.Imp <> :::x_'=['_x_']=>'_x not
R14249:14254 PLF.Imp <> :::x_'=['_x_']=>'_x not
R14272:14272 PLF.Imp <> :::x_'=['_x_']=>'_x not
R14243:14247 PLF.Imp <> ::imp_scope:x_'::='_x not
R14256:14260 PLF.Maps <> :::x_'!->'_x_';'_x not
R14266:14268 PLF.Maps <> :::x_'!->'_x_';'_x not
R14238:14241 PLF.Imp <> :::x_'=['_x_']=>'_x not
R14249:14254 PLF.Imp <> :::x_'=['_x_']=>'_x not
R14272:14272 PLF.Imp <> :::x_'=['_x_']=>'_x not
R14243:14247 PLF.Imp <> ::imp_scope:x_'::='_x not
R14256:14260 PLF.Maps <> :::x_'!->'_x_';'_x not
R14266:14268 PLF.Maps <> :::x_'!->'_x_';'_x not
R14288:14292 PLF.Imp <> E_Ass constr
R14288:14292 PLF.Imp <> E_Ass constr
R14322:14334 PLF.Maps <> t_update_same prfax
R14322:14334 PLF.Maps <> t_update_same prfax
R14322:14334 PLF.Maps <> t_update_same prfax
prf 14441:14453 <> assign_aequiv
R14469:14474 Coq.Strings.String <> string ind
R14492:14497 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14498:14503 PLF.Equiv <> cequiv def
R14512:14516 PLF.Imp <> ::imp_scope:x_'::='_x not
R14511:14511 PLF.Equiv <> x var
R14517:14517 PLF.Equiv <> e var
R14505:14508 PLF.Imp <> ::imp_scope:'SKIP' not
R14482:14487 PLF.Equiv <> aequiv def
R14491:14491 PLF.Equiv <> e var
R14489:14489 PLF.Equiv <> x var
R14612:14615 PLF.Imp <> :::x_'=['_x_']=>'_x not
R14623:14628 PLF.Imp <> :::x_'=['_x_']=>'_x not
R14652:14652 PLF.Imp <> :::x_'=['_x_']=>'_x not
R14617:14621 PLF.Imp <> ::imp_scope:x_'::='_x not
R14630:14634 PLF.Maps <> :::x_'!->'_x_';'_x not
R14646:14648 PLF.Maps <> :::x_'!->'_x_';'_x not
R14635:14639 PLF.Imp <> aeval def
R14612:14615 PLF.Imp <> :::x_'=['_x_']=>'_x not
R14623:14628 PLF.Imp <> :::x_'=['_x_']=>'_x not
R14652:14652 PLF.Imp <> :::x_'=['_x_']=>'_x not
R14617:14621 PLF.Imp <> ::imp_scope:x_'::='_x not
R14630:14634 PLF.Maps <> :::x_'!->'_x_';'_x not
R14646:14648 PLF.Maps <> :::x_'!->'_x_';'_x not
R14635:14639 PLF.Imp <> aeval def
R14663:14667 PLF.Imp <> E_Ass constr
R14663:14667 PLF.Imp <> E_Ass constr
R14712:14714 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14701:14705 PLF.Imp <> aeval def
R14712:14714 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14701:14705 PLF.Imp <> aeval def
R14801:14813 PLF.Maps <> t_update_same prfax
R14801:14813 PLF.Maps <> t_update_same prfax
R14801:14813 PLF.Maps <> t_update_same prfax
R14869:14871 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14859:14863 PLF.Imp <> aeval def
R14869:14871 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14859:14863 PLF.Imp <> aeval def
R14947:14959 PLF.Maps <> t_update_same prfax
R14947:14959 PLF.Maps <> t_update_same prfax
R14947:14959 PLF.Maps <> t_update_same prfax
R14972:14977 PLF.Imp <> E_Skip constr
R14972:14977 PLF.Imp <> E_Skip constr
def 15581:15586 <> prog_a
R15590:15592 PLF.Imp <> com ind
R15600:15605 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R15615:15622 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R15634:15639 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R15606:15607 PLF.Imp <> ::imp_scope:'~'_x not
R15614:15614 PLF.Imp <> ::imp_scope:'~'_x not
R15609:15612 PLF.Imp <> ::imp_scope:x_'<='_x not
R15608:15608 PLF.Imp <> X def
R15624:15628 PLF.Imp <> ::imp_scope:x_'::='_x not
R15623:15623 PLF.Imp <> X def
R15630:15632 PLF.Imp <> ::imp_scope:x_'+'_x not
R15629:15629 PLF.Imp <> X def
def 15659:15664 <> prog_b
R15668:15670 PLF.Imp <> com ind
R15747:15751 PLF.Imp <> ::imp_scope:x_';;'_x not
R15678:15682 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R15688:15697 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R15723:15734 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R15742:15746 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R15684:15686 PLF.Imp <> ::imp_scope:x_'='_x not
R15683:15683 PLF.Imp <> X def
R15709:15715 PLF.Imp <> ::imp_scope:x_';;'_x not
R15699:15703 PLF.Imp <> ::imp_scope:x_'::='_x not
R15698:15698 PLF.Imp <> X def
R15705:15707 PLF.Imp <> ::imp_scope:x_'+'_x not
R15704:15704 PLF.Imp <> X def
R15717:15721 PLF.Imp <> ::imp_scope:x_'::='_x not
R15716:15716 PLF.Imp <> Y def
R15736:15740 PLF.Imp <> ::imp_scope:x_'::='_x not
R15735:15735 PLF.Imp <> Y def
R15763:15767 PLF.Imp <> ::imp_scope:x_';;'_x not
R15753:15757 PLF.Imp <> ::imp_scope:x_'::='_x not
R15752:15752 PLF.Imp <> X def
R15759:15761 PLF.Imp <> ::imp_scope:x_'-'_x not
R15758:15758 PLF.Imp <> X def
R15762:15762 PLF.Imp <> Y def
R15769:15773 PLF.Imp <> ::imp_scope:x_'::='_x not
R15768:15768 PLF.Imp <> Y def
def 15794:15799 <> prog_c
R15803:15805 PLF.Imp <> com ind
R15812:15815 PLF.Imp <> ::imp_scope:'SKIP' not
def 15834:15839 <> prog_d
R15843:15845 PLF.Imp <> com ind
R15853:15858 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R15867:15874 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R15892:15897 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R15859:15860 PLF.Imp <> ::imp_scope:'~'_x not
R15866:15866 PLF.Imp <> ::imp_scope:'~'_x not
R15862:15864 PLF.Imp <> ::imp_scope:x_'='_x not
R15861:15861 PLF.Imp <> X def
R15876:15880 PLF.Imp <> ::imp_scope:x_'::='_x not
R15875:15875 PLF.Imp <> X def
R15881:15881 PLF.Imp <> ::imp_scope:x_'+'_x not
R15887:15890 PLF.Imp <> ::imp_scope:x_'+'_x not
R15883:15885 PLF.Imp <> ::imp_scope:x_'*'_x not
R15882:15882 PLF.Imp <> X def
R15886:15886 PLF.Imp <> Y def
def 15917:15922 <> prog_e
R15926:15928 PLF.Imp <> com ind
R15937:15941 PLF.Imp <> ::imp_scope:x_'::='_x not
R15936:15936 PLF.Imp <> Y def
def 15962:15967 <> prog_f
R15971:15973 PLF.Imp <> com ind
R15992:15996 PLF.Imp <> ::imp_scope:x_';;'_x not
R15982:15986 PLF.Imp <> ::imp_scope:x_'::='_x not
R15981:15981 PLF.Imp <> Y def
R15988:15990 PLF.Imp <> ::imp_scope:x_'+'_x not
R15987:15987 PLF.Imp <> X def
R15997:16002 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R16011:16018 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R16030:16035 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R16003:16004 PLF.Imp <> ::imp_scope:'~'_x not
R16010:16010 PLF.Imp <> ::imp_scope:'~'_x not
R16006:16008 PLF.Imp <> ::imp_scope:x_'='_x not
R16005:16005 PLF.Imp <> X def
R16009:16009 PLF.Imp <> Y def
R16020:16024 PLF.Imp <> ::imp_scope:x_'::='_x not
R16019:16019 PLF.Imp <> Y def
R16026:16028 PLF.Imp <> ::imp_scope:x_'+'_x not
R16025:16025 PLF.Imp <> X def
def 16055:16060 <> prog_g
R16064:16066 PLF.Imp <> com ind
R16074:16079 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R16084:16091 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R16096:16101 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R16080:16083 Coq.Init.Datatypes <> true constr
R16092:16095 PLF.Imp <> ::imp_scope:'SKIP' not
def 16121:16126 <> prog_h
R16130:16132 PLF.Imp <> com ind
R16140:16145 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R16154:16161 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R16173:16178 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R16146:16147 PLF.Imp <> ::imp_scope:'~'_x not
R16153:16153 PLF.Imp <> ::imp_scope:'~'_x not
R16149:16151 PLF.Imp <> ::imp_scope:x_'='_x not
R16148:16148 PLF.Imp <> X def
R16152:16152 PLF.Imp <> X def
R16163:16167 PLF.Imp <> ::imp_scope:x_'::='_x not
R16162:16162 PLF.Imp <> X def
R16169:16171 PLF.Imp <> ::imp_scope:x_'+'_x not
R16168:16168 PLF.Imp <> X def
def 16198:16203 <> prog_i
R16207:16209 PLF.Imp <> com ind
R16217:16222 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R16231:16238 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R16250:16255 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R16223:16224 PLF.Imp <> ::imp_scope:'~'_x not
R16230:16230 PLF.Imp <> ::imp_scope:'~'_x not
R16226:16228 PLF.Imp <> ::imp_scope:x_'='_x not
R16225:16225 PLF.Imp <> X def
R16229:16229 PLF.Imp <> Y def
R16240:16244 PLF.Imp <> ::imp_scope:x_'::='_x not
R16239:16239 PLF.Imp <> X def
R16246:16248 PLF.Imp <> ::imp_scope:x_'+'_x not
R16245:16245 PLF.Imp <> Y def
def 16275:16287 <> equiv_classes
R16291:16294 Coq.Init.Datatypes <> list ind
R16297:16300 Coq.Init.Datatypes <> list ind
R16302:16304 PLF.Imp <> com ind
def 16426:16455 <> manual_grade_for_equiv_classes
R16459:16464 Coq.Init.Datatypes <> option ind
R16470:16470 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R16467:16469 Coq.Init.Datatypes <> nat ind
R16471:16476 Coq.Strings.String <> string ind
R16482:16485 Coq.Init.Datatypes <> None constr
prf 17029:17039 <> refl_aequiv
R17055:17058 PLF.Imp <> aexp ind
R17062:17067 PLF.Equiv <> aequiv def
R17071:17071 PLF.Equiv <> a var
R17069:17069 PLF.Equiv <> a var
prf 17122:17131 <> sym_aequiv
R17151:17154 PLF.Imp <> aexp ind
R17172:17175 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17176:17181 PLF.Equiv <> aequiv def
R17186:17187 PLF.Equiv <> a1 var
R17183:17184 PLF.Equiv <> a2 var
R17160:17165 PLF.Equiv <> aequiv def
R17170:17171 PLF.Equiv <> a2 var
R17167:17168 PLF.Equiv <> a1 var
prf 17258:17269 <> trans_aequiv
R17292:17295 PLF.Imp <> aexp ind
R17313:17316 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17329:17332 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17333:17338 PLF.Equiv <> aequiv def
R17343:17344 PLF.Equiv <> a3 var
R17340:17341 PLF.Equiv <> a1 var
R17317:17322 PLF.Equiv <> aequiv def
R17327:17328 PLF.Equiv <> a3 var
R17324:17325 PLF.Equiv <> a2 var
R17301:17306 PLF.Equiv <> aequiv def
R17311:17312 PLF.Equiv <> a2 var
R17308:17309 PLF.Equiv <> a1 var
R17363:17368 PLF.Equiv <> aequiv def
prf 17463:17473 <> refl_bequiv
R17489:17492 PLF.Imp <> bexp ind
R17496:17501 PLF.Equiv <> bequiv def
R17505:17505 PLF.Equiv <> b var
R17503:17503 PLF.Equiv <> b var
R17524:17529 PLF.Equiv <> bequiv def
prf 17571:17580 <> sym_bequiv
R17600:17603 PLF.Imp <> bexp ind
R17621:17624 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17625:17630 PLF.Equiv <> bequiv def
R17635:17636 PLF.Equiv <> b1 var
R17632:17633 PLF.Equiv <> b2 var
R17609:17614 PLF.Equiv <> bequiv def
R17619:17620 PLF.Equiv <> b2 var
R17616:17617 PLF.Equiv <> b1 var
R17655:17660 PLF.Equiv <> bequiv def
prf 17722:17733 <> trans_bequiv
R17756:17759 PLF.Imp <> bexp ind
R17777:17780 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17793:17796 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17797:17802 PLF.Equiv <> bequiv def
R17807:17808 PLF.Equiv <> b3 var
R17804:17805 PLF.Equiv <> b1 var
R17781:17786 PLF.Equiv <> bequiv def
R17791:17792 PLF.Equiv <> b3 var
R17788:17789 PLF.Equiv <> b2 var
R17765:17770 PLF.Equiv <> bequiv def
R17775:17776 PLF.Equiv <> b2 var
R17772:17773 PLF.Equiv <> b1 var
R17827:17832 PLF.Equiv <> bequiv def
prf 17927:17937 <> refl_cequiv
R17953:17955 PLF.Imp <> com ind
R17959:17964 PLF.Equiv <> cequiv def
R17968:17968 PLF.Equiv <> c var
R17966:17966 PLF.Equiv <> c var
R17987:17992 PLF.Equiv <> cequiv def
R18018:18025 Coq.Init.Logic <> iff_refl thm
R18018:18025 Coq.Init.Logic <> iff_refl thm
prf 18041:18050 <> sym_cequiv
R18070:18072 PLF.Imp <> com ind
R18090:18093 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18094:18099 PLF.Equiv <> cequiv def
R18104:18105 PLF.Equiv <> c1 var
R18101:18102 PLF.Equiv <> c2 var
R18078:18083 PLF.Equiv <> cequiv def
R18088:18089 PLF.Equiv <> c2 var
R18085:18086 PLF.Equiv <> c1 var
R18124:18129 PLF.Equiv <> cequiv def
R18163:18169 Coq.Init.Logic <> iff_sym thm
R18163:18169 Coq.Init.Logic <> iff_sym thm
prf 18193:18201 <> iff_trans
R18233:18233 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18243:18247 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18248:18248 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18258:18263 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18273:18273 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18266:18270 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R18264:18265 PLF.Equiv <> P1 var
R18271:18272 PLF.Equiv <> P3 var
R18251:18255 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R18249:18250 PLF.Equiv <> P2 var
R18256:18257 PLF.Equiv <> P3 var
R18236:18240 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R18234:18235 PLF.Equiv <> P1 var
R18241:18242 PLF.Equiv <> P2 var
prf 18439:18450 <> trans_cequiv
R18473:18475 PLF.Imp <> com ind
R18493:18496 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18509:18512 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18513:18518 PLF.Equiv <> cequiv def
R18523:18524 PLF.Equiv <> c3 var
R18520:18521 PLF.Equiv <> c1 var
R18497:18502 PLF.Equiv <> cequiv def
R18507:18508 PLF.Equiv <> c3 var
R18504:18505 PLF.Equiv <> c2 var
R18481:18486 PLF.Equiv <> cequiv def
R18491:18492 PLF.Equiv <> c2 var
R18488:18489 PLF.Equiv <> c1 var
R18543:18548 PLF.Equiv <> cequiv def
R18609:18612 PLF.Imp <> :::x_'=['_x_']=>'_x not
R18615:18619 PLF.Imp <> :::x_'=['_x_']=>'_x not
R18591:18599 PLF.Equiv <> iff_trans thm
R18609:18612 PLF.Imp <> :::x_'=['_x_']=>'_x not
R18615:18619 PLF.Imp <> :::x_'=['_x_']=>'_x not
R18591:18599 PLF.Equiv <> iff_trans thm
prf 20019:20033 <> CAss_congruence
R20069:20074 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20075:20080 PLF.Equiv <> cequiv def
R20095:20098 PLF.Imp <> CAss constr
R20102:20104 PLF.Equiv <> a1' var
R20100:20100 PLF.Equiv <> x var
R20083:20086 PLF.Imp <> CAss constr
R20090:20091 PLF.Equiv <> a1 var
R20088:20088 PLF.Equiv <> x var
R20056:20061 PLF.Equiv <> aequiv def
R20066:20068 PLF.Equiv <> a1' var
R20063:20064 PLF.Equiv <> a1 var
R20217:20221 PLF.Imp <> E_Ass constr
R20217:20221 PLF.Imp <> E_Ass constr
R20303:20307 PLF.Imp <> E_Ass constr
R20303:20307 PLF.Imp <> E_Ass constr
prf 22187:22203 <> CWhile_congruence
R22244:22247 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22261:22266 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22267:22272 PLF.Equiv <> cequiv def
R22296:22301 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R22305:22308 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R22312:22315 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R22302:22304 PLF.Equiv <> b1' var
R22309:22311 PLF.Equiv <> c1' var
R22275:22280 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R22283:22286 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R22289:22292 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R22281:22282 PLF.Equiv <> b1 var
R22287:22288 PLF.Equiv <> c1 var
R22248:22253 PLF.Equiv <> cequiv def
R22258:22260 PLF.Equiv <> c1' var
R22255:22256 PLF.Equiv <> c1 var
R22231:22236 PLF.Equiv <> bequiv def
R22241:22243 PLF.Equiv <> b1' var
R22238:22239 PLF.Equiv <> b1 var
R22359:22364 PLF.Equiv <> bequiv def
R22366:22371 PLF.Equiv <> cequiv def
R22463:22468 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R22471:22474 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R22477:22480 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R22463:22468 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R22471:22474 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R22477:22480 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R22602:22613 PLF.Imp <> E_WhileFalse constr
R22602:22613 PLF.Imp <> E_WhileFalse constr
R22678:22688 PLF.Imp <> E_WhileTrue constr
R22678:22688 PLF.Imp <> E_WhileTrue constr
R22937:22942 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R22946:22949 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R22953:22956 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R22937:22942 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R22946:22949 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R22953:22956 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R23081:23092 PLF.Imp <> E_WhileFalse constr
R23081:23092 PLF.Imp <> E_WhileFalse constr
R23157:23167 PLF.Imp <> E_WhileTrue constr
R23157:23167 PLF.Imp <> E_WhileTrue constr
prf 23473:23487 <> CSeq_congruence
R23528:23531 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23545:23550 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23551:23556 PLF.Equiv <> cequiv def
R23571:23572 PLF.Imp <> ::imp_scope:x_';;'_x not
R23568:23570 PLF.Equiv <> c1' var
R23573:23575 PLF.Equiv <> c2' var
R23561:23562 PLF.Imp <> ::imp_scope:x_';;'_x not
R23559:23560 PLF.Equiv <> c1 var
R23563:23564 PLF.Equiv <> c2 var
R23532:23537 PLF.Equiv <> cequiv def
R23542:23544 PLF.Equiv <> c2' var
R23539:23540 PLF.Equiv <> c2 var
R23515:23520 PLF.Equiv <> cequiv def
R23525:23527 PLF.Equiv <> c1' var
R23522:23523 PLF.Equiv <> c1 var
R23595:23600 PLF.Equiv <> cequiv def
R23697:23701 PLF.Imp <> E_Seq constr
R23697:23701 PLF.Imp <> E_Seq constr
R23832:23836 PLF.Imp <> E_Seq constr
R23832:23836 PLF.Imp <> E_Seq constr
prf 24016:24029 <> CIf_congruence
R24073:24076 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24090:24093 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24107:24112 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24113:24118 PLF.Equiv <> cequiv def
R24158:24162 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R24165:24170 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R24174:24179 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R24183:24185 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R24163:24164 PLF.Equiv <> b' var
R24171:24173 PLF.Equiv <> c1' var
R24180:24182 PLF.Equiv <> c2' var
R24121:24125 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R24127:24132 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R24135:24140 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R24143:24145 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R24126:24126 PLF.Equiv <> b var
R24133:24134 PLF.Equiv <> c1 var
R24141:24142 PLF.Equiv <> c2 var
R24094:24099 PLF.Equiv <> cequiv def
R24104:24106 PLF.Equiv <> c2' var
R24101:24102 PLF.Equiv <> c2 var
R24077:24082 PLF.Equiv <> cequiv def
R24087:24089 PLF.Equiv <> c1' var
R24084:24085 PLF.Equiv <> c1 var
R24062:24067 PLF.Equiv <> bequiv def
R24071:24072 PLF.Equiv <> b' var
R24069:24069 PLF.Equiv <> b var
R24205:24210 PLF.Equiv <> cequiv def
R24319:24326 PLF.Imp <> E_IfTrue constr
R24319:24326 PLF.Imp <> E_IfTrue constr
R24418:24426 PLF.Imp <> E_IfFalse constr
R24418:24426 PLF.Imp <> E_IfFalse constr
R24541:24548 PLF.Imp <> E_IfTrue constr
R24541:24548 PLF.Imp <> E_IfTrue constr
R24637:24645 PLF.Imp <> E_IfFalse constr
R24637:24645 PLF.Imp <> E_IfFalse constr
def 24840:24857 <> congruence_example
R24862:24867 PLF.Equiv <> cequiv def
R25014:25021 PLF.Imp <> ::imp_scope:x_';;'_x not
R25008:25012 PLF.Imp <> ::imp_scope:x_'::='_x not
R25007:25007 PLF.Imp <> X def
R25022:25026 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R25032:25049 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R25061:25104 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R25113:25120 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R25028:25030 PLF.Imp <> ::imp_scope:x_'='_x not
R25027:25027 PLF.Imp <> X def
R25051:25055 PLF.Imp <> ::imp_scope:x_'::='_x not
R25050:25050 PLF.Imp <> Y def
R25057:25059 PLF.Imp <> ::imp_scope:x_'-'_x not
R25056:25056 PLF.Imp <> X def
R25060:25060 PLF.Imp <> X def
R25106:25110 PLF.Imp <> ::imp_scope:x_'::='_x not
R25105:25105 PLF.Imp <> Y def
R24902:24909 PLF.Imp <> ::imp_scope:x_';;'_x not
R24896:24900 PLF.Imp <> ::imp_scope:x_'::='_x not
R24895:24895 PLF.Imp <> X def
R24910:24914 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R24920:24937 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R24945:24962 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R24971:24978 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R24916:24918 PLF.Imp <> ::imp_scope:x_'='_x not
R24915:24915 PLF.Imp <> X def
R24939:24943 PLF.Imp <> ::imp_scope:x_'::='_x not
R24938:24938 PLF.Imp <> Y def
R24964:24968 PLF.Imp <> ::imp_scope:x_'::='_x not
R24963:24963 PLF.Imp <> Y def
R25139:25153 PLF.Equiv <> CSeq_congruence thm
R25139:25153 PLF.Equiv <> CSeq_congruence thm
R25166:25176 PLF.Equiv <> refl_cequiv thm
R25166:25176 PLF.Equiv <> refl_cequiv thm
R25189:25202 PLF.Equiv <> CIf_congruence thm
R25189:25202 PLF.Equiv <> CIf_congruence thm
R25217:25227 PLF.Equiv <> refl_bequiv thm
R25217:25227 PLF.Equiv <> refl_bequiv thm
R25242:25256 PLF.Equiv <> CAss_congruence thm
R25242:25256 PLF.Equiv <> CAss_congruence thm
R25266:25271 PLF.Equiv <> aequiv def
R25303:25312 Coq.Arith.Minus <> minus_diag syndef
R25303:25312 Coq.Arith.Minus <> minus_diag syndef
R25327:25337 PLF.Equiv <> refl_cequiv thm
R25327:25337 PLF.Equiv <> refl_cequiv thm
def 26095:26106 <> atrans_sound
R26122:26125 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26126:26129 PLF.Imp <> aexp ind
R26118:26121 PLF.Imp <> aexp ind
R26156:26159 PLF.Imp <> aexp ind
R26167:26172 PLF.Equiv <> aequiv def
R26177:26182 PLF.Equiv <> atrans var
R26184:26184 PLF.Equiv <> a var
R26174:26174 PLF.Equiv <> a var
def 26200:26211 <> btrans_sound
R26227:26230 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26231:26234 PLF.Imp <> bexp ind
R26223:26226 PLF.Imp <> bexp ind
R26261:26264 PLF.Imp <> bexp ind
R26272:26277 PLF.Equiv <> bequiv def
R26282:26287 PLF.Equiv <> btrans var
R26289:26289 PLF.Equiv <> b var
R26279:26279 PLF.Equiv <> b var
def 26305:26316 <> ctrans_sound
R26331:26334 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26335:26337 PLF.Imp <> com ind
R26328:26330 PLF.Imp <> com ind
R26364:26366 PLF.Imp <> com ind
R26374:26379 PLF.Equiv <> cequiv def
R26384:26389 PLF.Equiv <> ctrans var
R26391:26391 PLF.Equiv <> c var
R26381:26381 PLF.Equiv <> c var
def 26717:26735 <> fold_constants_aexp
R26742:26745 PLF.Imp <> aexp ind
R26750:26753 PLF.Imp <> aexp ind
R26766:26766 PLF.Equiv <> a var
R26777:26780 PLF.Imp <> ANum constr
R26793:26796 PLF.Imp <> ANum constr
R26804:26806 PLF.Imp <> AId constr
R26820:26822 PLF.Imp <> AId constr
R26830:26834 PLF.Imp <> APlus constr
R26856:26856 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26879:26892 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26915:26915 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26857:26875 PLF.Equiv <> fold_constants_aexp def
R26893:26911 PLF.Equiv <> fold_constants_aexp def
R26932:26932 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26940:26941 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26949:26949 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26933:26936 PLF.Imp <> ANum constr
R26942:26945 PLF.Imp <> ANum constr
R26954:26957 PLF.Imp <> ANum constr
R26962:26964 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R26975:26975 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26979:26980 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26984:26984 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26989:26993 PLF.Imp <> APlus constr
R27015:27020 PLF.Imp <> AMinus constr
R27041:27041 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27064:27077 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27100:27100 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27042:27060 PLF.Equiv <> fold_constants_aexp def
R27078:27096 PLF.Equiv <> fold_constants_aexp def
R27117:27117 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27125:27126 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27134:27134 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27118:27121 PLF.Imp <> ANum constr
R27127:27130 PLF.Imp <> ANum constr
R27139:27142 PLF.Imp <> ANum constr
R27147:27149 Coq.Init.Peano <> ::nat_scope:x_'-'_x not
R27160:27160 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27164:27165 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27169:27169 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27174:27179 PLF.Imp <> AMinus constr
R27201:27205 PLF.Imp <> AMult constr
R27227:27227 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27250:27263 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27286:27286 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27228:27246 PLF.Equiv <> fold_constants_aexp def
R27264:27282 PLF.Equiv <> fold_constants_aexp def
R27303:27303 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27311:27312 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27320:27320 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27304:27307 PLF.Imp <> ANum constr
R27313:27316 PLF.Imp <> ANum constr
R27325:27328 PLF.Imp <> ANum constr
R27333:27335 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R27346:27346 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27350:27351 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27355:27355 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27360:27364 PLF.Imp <> AMult constr
def 27398:27410 <> fold_aexp_ex1
R27451:27456 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27418:27436 PLF.Equiv <> fold_constants_aexp def
R27439:27439 PLF.Imp <> ::imp_scope:x_'*'_x not
R27445:27448 PLF.Imp <> ::imp_scope:x_'*'_x not
R27441:27443 PLF.Imp <> ::imp_scope:x_'+'_x not
R27449:27449 PLF.Imp <> X def
R27459:27461 PLF.Imp <> ::imp_scope:x_'*'_x not
R27462:27462 PLF.Imp <> X def
def 27809:27821 <> fold_aexp_ex2
R27870:27872 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27827:27845 PLF.Equiv <> fold_constants_aexp def
R27849:27852 PLF.Imp <> ::imp_scope:x_'-'_x not
R27864:27864 PLF.Imp <> ::imp_scope:x_'-'_x not
R27848:27848 PLF.Imp <> X def
R27853:27853 PLF.Imp <> ::imp_scope:x_'+'_x not
R27859:27862 PLF.Imp <> ::imp_scope:x_'+'_x not
R27855:27857 PLF.Imp <> ::imp_scope:x_'*'_x not
R27863:27863 PLF.Imp <> Y def
R27875:27878 PLF.Imp <> ::imp_scope:x_'-'_x not
R27884:27884 PLF.Imp <> ::imp_scope:x_'-'_x not
R27874:27874 PLF.Imp <> X def
R27880:27882 PLF.Imp <> ::imp_scope:x_'+'_x not
R27883:27883 PLF.Imp <> Y def
def 28109:28127 <> fold_constants_bexp
R28134:28137 PLF.Imp <> bexp ind
R28142:28145 PLF.Imp <> bexp ind
R28158:28158 PLF.Equiv <> b var
R28169:28173 PLF.Imp <> BTrue constr
R28185:28189 PLF.Imp <> BTrue constr
R28195:28200 PLF.Imp <> BFalse constr
R28211:28216 PLF.Imp <> BFalse constr
R28222:28224 PLF.Imp <> BEq constr
R28248:28248 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28271:28286 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28309:28309 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28249:28267 PLF.Equiv <> fold_constants_aexp def
R28287:28305 PLF.Equiv <> fold_constants_aexp def
R28324:28324 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28332:28333 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28341:28341 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28325:28328 PLF.Imp <> ANum constr
R28334:28337 PLF.Imp <> ANum constr
R28361:28364 Coq.Arith.PeanoNat <> ::nat_scope:x_'=?'_x not
R28384:28389 PLF.Imp <> BFalse constr
R28373:28377 PLF.Imp <> BTrue constr
R28399:28399 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28403:28404 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28408:28408 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28423:28425 PLF.Imp <> BEq constr
R28449:28451 PLF.Imp <> BLe constr
R28475:28475 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28498:28513 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28536:28536 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28476:28494 PLF.Equiv <> fold_constants_aexp def
R28514:28532 PLF.Equiv <> fold_constants_aexp def
R28551:28551 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28559:28560 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28568:28568 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28552:28555 PLF.Imp <> ANum constr
R28561:28564 PLF.Imp <> ANum constr
R28588:28592 Coq.Arith.PeanoNat <> ::nat_scope:x_'<=?'_x not
R28612:28617 PLF.Imp <> BFalse constr
R28601:28605 PLF.Imp <> BTrue constr
R28627:28627 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28631:28632 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28636:28636 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28651:28653 PLF.Imp <> BLe constr
R28677:28680 PLF.Imp <> BNot constr
R28702:28720 PLF.Equiv <> fold_constants_bexp def
R28739:28743 PLF.Imp <> BTrue constr
R28748:28753 PLF.Imp <> BFalse constr
R28763:28768 PLF.Imp <> BFalse constr
R28773:28777 PLF.Imp <> BTrue constr
R28794:28797 PLF.Imp <> BNot constr
R28817:28820 PLF.Imp <> BAnd constr
R28844:28844 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28867:28882 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28905:28905 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28845:28863 PLF.Equiv <> fold_constants_bexp def
R28883:28901 PLF.Equiv <> fold_constants_bexp def
R28920:28920 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28926:28927 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28933:28933 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28921:28925 PLF.Imp <> BTrue constr
R28928:28932 PLF.Imp <> BTrue constr
R28938:28942 PLF.Imp <> BTrue constr
R28952:28952 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28958:28959 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28966:28966 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28953:28957 PLF.Imp <> BTrue constr
R28960:28965 PLF.Imp <> BFalse constr
R28971:28976 PLF.Imp <> BFalse constr
R28986:28986 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28993:28994 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29000:29000 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28987:28992 PLF.Imp <> BFalse constr
R28995:28999 PLF.Imp <> BTrue constr
R29005:29010 PLF.Imp <> BFalse constr
R29020:29020 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29027:29028 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29035:29035 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29021:29026 PLF.Imp <> BFalse constr
R29029:29034 PLF.Imp <> BFalse constr
R29040:29045 PLF.Imp <> BFalse constr
R29055:29055 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29059:29060 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29064:29064 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29069:29072 PLF.Imp <> BAnd constr
def 29108:29120 <> fold_bexp_ex1
R29176:29181 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29126:29144 PLF.Equiv <> fold_constants_bexp def
R29151:29154 PLF.Imp <> ::imp_scope:x_'&&'_x not
R29147:29150 Coq.Init.Datatypes <> true constr
R29155:29156 PLF.Imp <> ::imp_scope:'~'_x not
R29170:29170 PLF.Imp <> ::imp_scope:'~'_x not
R29162:29165 PLF.Imp <> ::imp_scope:x_'&&'_x not
R29157:29161 Coq.Init.Datatypes <> false constr
R29166:29169 Coq.Init.Datatypes <> true constr
R29182:29185 Coq.Init.Datatypes <> true constr
def 29222:29234 <> fold_bexp_ex2
R29296:29300 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29240:29258 PLF.Equiv <> fold_constants_bexp def
R29261:29261 PLF.Imp <> ::imp_scope:x_'&&'_x not
R29267:29272 PLF.Imp <> ::imp_scope:x_'&&'_x not
R29290:29290 PLF.Imp <> ::imp_scope:x_'&&'_x not
R29263:29265 PLF.Imp <> ::imp_scope:x_'='_x not
R29262:29262 PLF.Imp <> X def
R29266:29266 PLF.Imp <> Y def
R29274:29277 PLF.Imp <> ::imp_scope:x_'='_x not
R29289:29289 PLF.Imp <> ::imp_scope:x_'='_x not
R29279:29282 PLF.Imp <> ::imp_scope:x_'-'_x not
R29288:29288 PLF.Imp <> ::imp_scope:x_'-'_x not
R29284:29286 PLF.Imp <> ::imp_scope:x_'+'_x not
R29302:29302 PLF.Imp <> ::imp_scope:x_'&&'_x not
R29308:29312 PLF.Imp <> ::imp_scope:x_'&&'_x not
R29304:29306 PLF.Imp <> ::imp_scope:x_'='_x not
R29303:29303 PLF.Imp <> X def
R29307:29307 PLF.Imp <> Y def
R29313:29316 Coq.Init.Datatypes <> true constr
def 29491:29508 <> fold_constants_com
R29515:29517 PLF.Imp <> com ind
R29522:29524 PLF.Imp <> com ind
R29537:29537 PLF.Equiv <> c var
R29548:29551 PLF.Imp <> ::imp_scope:'SKIP' not
R29567:29570 PLF.Imp <> ::imp_scope:'SKIP' not
R29577:29581 PLF.Imp <> ::imp_scope:x_'::='_x not
R29596:29601 PLF.Imp <> ::imp_scope:x_'::='_x not
R29623:29623 PLF.Imp <> ::imp_scope:x_'::='_x not
R29602:29620 PLF.Equiv <> fold_constants_aexp def
R29631:29634 PLF.Imp <> ::imp_scope:x_';;'_x not
R29648:29648 PLF.Imp <> ::imp_scope:x_';;'_x not
R29670:29675 PLF.Imp <> ::imp_scope:x_';;'_x not
R29697:29697 PLF.Imp <> ::imp_scope:x_';;'_x not
R29649:29666 PLF.Equiv <> fold_constants_com def
R29676:29693 PLF.Equiv <> fold_constants_com def
R29703:29707 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R29709:29714 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R29717:29722 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R29725:29727 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R29744:29762 PLF.Equiv <> fold_constants_bexp def
R29779:29783 PLF.Imp <> BTrue constr
R29789:29806 PLF.Equiv <> fold_constants_com def
R29819:29824 PLF.Imp <> BFalse constr
R29829:29846 PLF.Equiv <> fold_constants_com def
R29865:29869 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R29872:29877 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R29899:29925 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R29947:29949 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R29878:29895 PLF.Equiv <> fold_constants_com def
R29926:29943 PLF.Equiv <> fold_constants_com def
R29965:29970 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R29972:29975 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R29977:29980 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R29997:30015 PLF.Equiv <> fold_constants_bexp def
R30032:30036 PLF.Imp <> BTrue constr
R30041:30046 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R30052:30055 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R30060:30063 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R30047:30051 PLF.Imp <> BTrue constr
R30056:30059 PLF.Imp <> ::imp_scope:'SKIP' not
R30073:30078 PLF.Imp <> BFalse constr
R30083:30086 PLF.Imp <> ::imp_scope:'SKIP' not
R30102:30107 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R30110:30114 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R30135:30139 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R30115:30132 PLF.Equiv <> fold_constants_com def
R30134:30134 PLF.Equiv <> c var
def 30184:30195 <> fold_com_ex1
R30461:30499 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30201:30218 PLF.Equiv <> fold_constants_com def
R30264:30271 PLF.Imp <> ::imp_scope:x_';;'_x not
R30254:30258 PLF.Imp <> ::imp_scope:x_'::='_x not
R30253:30253 PLF.Imp <> X def
R30260:30262 PLF.Imp <> ::imp_scope:x_'+'_x not
R30283:30290 PLF.Imp <> ::imp_scope:x_';;'_x not
R30273:30277 PLF.Imp <> ::imp_scope:x_'::='_x not
R30272:30272 PLF.Imp <> Y def
R30279:30281 PLF.Imp <> ::imp_scope:x_'-'_x not
R30278:30278 PLF.Imp <> X def
R30344:30351 PLF.Imp <> ::imp_scope:x_';;'_x not
R30291:30295 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R30313:30318 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R30323:30333 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R30341:30343 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R30296:30296 PLF.Imp <> ::imp_scope:x_'='_x not
R30302:30306 PLF.Imp <> ::imp_scope:x_'='_x not
R30312:30312 PLF.Imp <> ::imp_scope:x_'='_x not
R30298:30300 PLF.Imp <> ::imp_scope:x_'-'_x not
R30297:30297 PLF.Imp <> X def
R30301:30301 PLF.Imp <> Y def
R30308:30310 PLF.Imp <> ::imp_scope:x_'+'_x not
R30319:30322 PLF.Imp <> ::imp_scope:'SKIP' not
R30335:30339 PLF.Imp <> ::imp_scope:x_'::='_x not
R30334:30334 PLF.Imp <> Y def
R30406:30413 PLF.Imp <> ::imp_scope:x_';;'_x not
R30352:30356 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R30375:30380 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R30388:30398 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R30403:30405 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R30358:30362 PLF.Imp <> ::imp_scope:x_'<='_x not
R30374:30374 PLF.Imp <> ::imp_scope:x_'<='_x not
R30364:30367 PLF.Imp <> ::imp_scope:x_'-'_x not
R30373:30373 PLF.Imp <> ::imp_scope:x_'-'_x not
R30369:30371 PLF.Imp <> ::imp_scope:x_'+'_x not
R30382:30386 PLF.Imp <> ::imp_scope:x_'::='_x not
R30381:30381 PLF.Imp <> Y def
R30399:30402 PLF.Imp <> ::imp_scope:'SKIP' not
R30414:30419 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R30425:30435 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R30447:30455 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R30421:30423 PLF.Imp <> ::imp_scope:x_'='_x not
R30420:30420 PLF.Imp <> Y def
R30437:30441 PLF.Imp <> ::imp_scope:x_'::='_x not
R30436:30436 PLF.Imp <> X def
R30443:30445 PLF.Imp <> ::imp_scope:x_'+'_x not
R30442:30442 PLF.Imp <> X def
R30508:30515 PLF.Imp <> ::imp_scope:x_';;'_x not
R30502:30506 PLF.Imp <> ::imp_scope:x_'::='_x not
R30501:30501 PLF.Imp <> X def
R30527:30534 PLF.Imp <> ::imp_scope:x_';;'_x not
R30517:30521 PLF.Imp <> ::imp_scope:x_'::='_x not
R30516:30516 PLF.Imp <> Y def
R30523:30525 PLF.Imp <> ::imp_scope:x_'-'_x not
R30522:30522 PLF.Imp <> X def
R30583:30590 PLF.Imp <> ::imp_scope:x_';;'_x not
R30535:30539 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R30551:30556 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R30561:30572 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R30580:30582 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R30540:30540 PLF.Imp <> ::imp_scope:x_'='_x not
R30546:30549 PLF.Imp <> ::imp_scope:x_'='_x not
R30542:30544 PLF.Imp <> ::imp_scope:x_'-'_x not
R30541:30541 PLF.Imp <> X def
R30545:30545 PLF.Imp <> Y def
R30557:30560 PLF.Imp <> ::imp_scope:'SKIP' not
R30574:30578 PLF.Imp <> ::imp_scope:x_'::='_x not
R30573:30573 PLF.Imp <> Y def
R30598:30605 PLF.Imp <> ::imp_scope:x_';;'_x not
R30592:30596 PLF.Imp <> ::imp_scope:x_'::='_x not
R30591:30591 PLF.Imp <> Y def
R30606:30611 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R30617:30627 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R30639:30647 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R30613:30615 PLF.Imp <> ::imp_scope:x_'='_x not
R30612:30612 PLF.Imp <> Y def
R30629:30633 PLF.Imp <> ::imp_scope:x_'::='_x not
R30628:30628 PLF.Imp <> X def
R30635:30637 PLF.Imp <> ::imp_scope:x_'+'_x not
R30634:30634 PLF.Imp <> X def
prf 30916:30940 <> fold_constants_aexp_sound
R30946:30957 PLF.Equiv <> atrans_sound def
R30959:30977 PLF.Equiv <> fold_constants_aexp def
R30996:31007 PLF.Equiv <> atrans_sound def
R31027:31032 PLF.Equiv <> aequiv def
R31441:31459 PLF.Equiv <> fold_constants_aexp def
R31485:31503 PLF.Equiv <> fold_constants_aexp def
R31441:31459 PLF.Equiv <> fold_constants_aexp def
R31485:31503 PLF.Equiv <> fold_constants_aexp def
R31485:31503 PLF.Equiv <> fold_constants_aexp def
R31485:31503 PLF.Equiv <> fold_constants_aexp def
R31485:31503 PLF.Equiv <> fold_constants_aexp def
R31485:31503 PLF.Equiv <> fold_constants_aexp def
R31441:31459 PLF.Equiv <> fold_constants_aexp def
R31485:31503 PLF.Equiv <> fold_constants_aexp def
R31485:31503 PLF.Equiv <> fold_constants_aexp def
R31485:31503 PLF.Equiv <> fold_constants_aexp def
R31485:31503 PLF.Equiv <> fold_constants_aexp def
R31485:31503 PLF.Equiv <> fold_constants_aexp def
R31441:31459 PLF.Equiv <> fold_constants_aexp def
R31485:31503 PLF.Equiv <> fold_constants_aexp def
R31485:31503 PLF.Equiv <> fold_constants_aexp def
R31485:31503 PLF.Equiv <> fold_constants_aexp def
R31485:31503 PLF.Equiv <> fold_constants_aexp def
R31485:31503 PLF.Equiv <> fold_constants_aexp def
prf 34398:34422 <> fold_constants_bexp_sound
R34427:34438 PLF.Equiv <> btrans_sound def
R34440:34458 PLF.Equiv <> fold_constants_bexp def
R34477:34488 PLF.Equiv <> btrans_sound def
R34508:34513 PLF.Equiv <> bequiv def
R34955:34973 PLF.Equiv <> fold_constants_aexp def
R34955:34973 PLF.Equiv <> fold_constants_aexp def
R35012:35030 PLF.Equiv <> fold_constants_aexp def
R35012:35030 PLF.Equiv <> fold_constants_aexp def
R35068:35072 PLF.Imp <> aeval def
R35087:35091 PLF.Imp <> aeval def
R35134:35158 PLF.Equiv <> fold_constants_aexp_sound thm
R35068:35072 PLF.Imp <> aeval def
R35087:35091 PLF.Imp <> aeval def
R35134:35158 PLF.Equiv <> fold_constants_aexp_sound thm
R35134:35158 PLF.Equiv <> fold_constants_aexp_sound thm
R35188:35192 PLF.Imp <> aeval def
R35207:35211 PLF.Imp <> aeval def
R35254:35278 PLF.Equiv <> fold_constants_aexp_sound thm
R35188:35192 PLF.Imp <> aeval def
R35207:35211 PLF.Imp <> aeval def
R35254:35278 PLF.Equiv <> fold_constants_aexp_sound thm
R35254:35278 PLF.Equiv <> fold_constants_aexp_sound thm
R35466:35469 Coq.Arith.PeanoNat <> ::nat_scope:x_'=?'_x not
R35466:35469 Coq.Arith.PeanoNat <> ::nat_scope:x_'=?'_x not
R35527:35545 PLF.Equiv <> fold_constants_aexp def
R35527:35545 PLF.Equiv <> fold_constants_aexp def
R35584:35602 PLF.Equiv <> fold_constants_aexp def
R35584:35602 PLF.Equiv <> fold_constants_aexp def
R35640:35644 PLF.Imp <> aeval def
R35659:35663 PLF.Imp <> aeval def
R35706:35730 PLF.Equiv <> fold_constants_aexp_sound thm
R35640:35644 PLF.Imp <> aeval def
R35659:35663 PLF.Imp <> aeval def
R35706:35730 PLF.Equiv <> fold_constants_aexp_sound thm
R35706:35730 PLF.Equiv <> fold_constants_aexp_sound thm
R35760:35764 PLF.Imp <> aeval def
R35779:35783 PLF.Imp <> aeval def
R35826:35850 PLF.Equiv <> fold_constants_aexp_sound thm
R35760:35764 PLF.Imp <> aeval def
R35779:35783 PLF.Imp <> aeval def
R35826:35850 PLF.Equiv <> fold_constants_aexp_sound thm
R35826:35850 PLF.Equiv <> fold_constants_aexp_sound thm
R35938:35942 Coq.Arith.PeanoNat <> ::nat_scope:x_'<=?'_x not
R35938:35942 Coq.Arith.PeanoNat <> ::nat_scope:x_'<=?'_x not
R35997:36015 PLF.Equiv <> fold_constants_bexp def
R35997:36015 PLF.Equiv <> fold_constants_bexp def
R36124:36142 PLF.Equiv <> fold_constants_bexp def
R36124:36142 PLF.Equiv <> fold_constants_bexp def
R36181:36199 PLF.Equiv <> fold_constants_bexp def
R36181:36199 PLF.Equiv <> fold_constants_bexp def
prf 36450:36473 <> fold_constants_com_sound
R36479:36490 PLF.Equiv <> ctrans_sound def
R36492:36509 PLF.Equiv <> fold_constants_com def
R36528:36539 PLF.Equiv <> ctrans_sound def
R36595:36605 PLF.Equiv <> refl_cequiv thm
R36595:36605 PLF.Equiv <> refl_cequiv thm
R36628:36642 PLF.Equiv <> CAss_congruence thm
R36628:36642 PLF.Equiv <> CAss_congruence thm
R36665:36689 PLF.Equiv <> fold_constants_aexp_sound thm
R36665:36689 PLF.Equiv <> fold_constants_aexp_sound thm
R36711:36725 PLF.Equiv <> CSeq_congruence thm
R36711:36725 PLF.Equiv <> CSeq_congruence thm
R36767:36772 PLF.Equiv <> bequiv def
R36777:36795 PLF.Equiv <> fold_constants_bexp def
R36767:36772 PLF.Equiv <> bequiv def
R36777:36795 PLF.Equiv <> fold_constants_bexp def
R36816:36840 PLF.Equiv <> fold_constants_bexp_sound thm
R36816:36840 PLF.Equiv <> fold_constants_bexp_sound thm
R36859:36877 PLF.Equiv <> fold_constants_bexp def
R36909:36922 PLF.Equiv <> CIf_congruence thm
R36859:36877 PLF.Equiv <> fold_constants_bexp def
R36909:36922 PLF.Equiv <> CIf_congruence thm
R36909:36922 PLF.Equiv <> CIf_congruence thm
R36909:36922 PLF.Equiv <> CIf_congruence thm
R36909:36922 PLF.Equiv <> CIf_congruence thm
R36909:36922 PLF.Equiv <> CIf_congruence thm
R36909:36922 PLF.Equiv <> CIf_congruence thm
R37134:37145 PLF.Equiv <> trans_cequiv thm
R37134:37145 PLF.Equiv <> trans_cequiv thm
R37184:37192 PLF.Equiv <> TEST_true thm
R37184:37192 PLF.Equiv <> TEST_true thm
R37246:37257 PLF.Equiv <> trans_cequiv thm
R37246:37257 PLF.Equiv <> trans_cequiv thm
R37296:37305 PLF.Equiv <> TEST_false thm
R37296:37305 PLF.Equiv <> TEST_false thm
R37348:37353 PLF.Equiv <> bequiv def
R37358:37376 PLF.Equiv <> fold_constants_bexp def
R37348:37353 PLF.Equiv <> bequiv def
R37358:37376 PLF.Equiv <> fold_constants_bexp def
R37397:37421 PLF.Equiv <> fold_constants_bexp_sound thm
R37397:37421 PLF.Equiv <> fold_constants_bexp_sound thm
R37440:37458 PLF.Equiv <> fold_constants_bexp def
R37440:37458 PLF.Equiv <> fold_constants_bexp def
R37519:37535 PLF.Equiv <> CWhile_congruence thm
R37519:37535 PLF.Equiv <> CWhile_congruence thm
R37519:37535 PLF.Equiv <> CWhile_congruence thm
R37519:37535 PLF.Equiv <> CWhile_congruence thm
R37519:37535 PLF.Equiv <> CWhile_congruence thm
R37519:37535 PLF.Equiv <> CWhile_congruence thm
R37519:37535 PLF.Equiv <> CWhile_congruence thm
R37562:37571 PLF.Equiv <> WHILE_true thm
R37562:37571 PLF.Equiv <> WHILE_true thm
R37598:37608 PLF.Equiv <> WHILE_false thm
R37598:37608 PLF.Equiv <> WHILE_false thm
def 39158:39176 <> optimize_0plus_aexp
R39181:39184 PLF.Imp <> aexp ind
R39189:39192 PLF.Imp <> aexp ind
R39205:39205 PLF.Equiv <> e var
R39216:39219 PLF.Imp <> ANum constr
R39226:39229 PLF.Imp <> ANum constr
R39237:39239 PLF.Imp <> AId constr
R39246:39248 PLF.Imp <> AId constr
R39256:39260 PLF.Imp <> APlus constr
R39263:39266 PLF.Imp <> ANum constr
R39277:39295 PLF.Equiv <> optimize_0plus_aexp def
R39304:39308 PLF.Imp <> APlus constr
R39325:39329 PLF.Imp <> APlus constr
R39357:39375 PLF.Equiv <> optimize_0plus_aexp def
R39332:39350 PLF.Equiv <> optimize_0plus_aexp def
R39385:39390 PLF.Imp <> AMinus constr
R39407:39412 PLF.Imp <> AMinus constr
R39440:39458 PLF.Equiv <> optimize_0plus_aexp def
R39415:39433 PLF.Equiv <> optimize_0plus_aexp def
R39468:39472 PLF.Imp <> AMult constr
R39489:39493 PLF.Imp <> AMult constr
R39521:39539 PLF.Equiv <> optimize_0plus_aexp def
R39496:39514 PLF.Equiv <> optimize_0plus_aexp def
def 39562:39580 <> optimize_0plus_bexp
R39585:39588 PLF.Imp <> bexp ind
R39593:39596 PLF.Imp <> bexp ind
R39609:39609 PLF.Equiv <> e var
R39620:39624 PLF.Imp <> BTrue constr
R39633:39637 PLF.Imp <> BTrue constr
R39643:39648 PLF.Imp <> BFalse constr
R39656:39661 PLF.Imp <> BFalse constr
R39667:39669 PLF.Imp <> BEq constr
R39680:39682 PLF.Imp <> BEq constr
R39710:39728 PLF.Equiv <> optimize_0plus_aexp def
R39685:39703 PLF.Equiv <> optimize_0plus_aexp def
R39738:39740 PLF.Imp <> BLe constr
R39751:39753 PLF.Imp <> BLe constr
R39781:39799 PLF.Equiv <> optimize_0plus_aexp def
R39756:39774 PLF.Equiv <> optimize_0plus_aexp def
R39809:39812 PLF.Imp <> BNot constr
R39822:39825 PLF.Imp <> BNot constr
R39828:39846 PLF.Equiv <> optimize_0plus_bexp def
R39855:39858 PLF.Imp <> BAnd constr
R39883:39886 PLF.Imp <> BAnd constr
R39914:39932 PLF.Equiv <> optimize_0plus_bexp def
R39889:39907 PLF.Equiv <> optimize_0plus_bexp def
def 39955:39972 <> optimize_0plus_com
R39977:39979 PLF.Imp <> com ind
R39984:39986 PLF.Imp <> com ind
R39999:39999 PLF.Equiv <> e var
R40010:40014 PLF.Imp <> CSkip constr
R40025:40029 PLF.Imp <> CSkip constr
R40035:40038 PLF.Imp <> CAss constr
R40050:40053 PLF.Imp <> CAss constr
R40058:40076 PLF.Equiv <> optimize_0plus_aexp def
R40085:40088 PLF.Imp <> CSeq constr
R40100:40103 PLF.Imp <> CSeq constr
R40130:40147 PLF.Equiv <> optimize_0plus_com def
R40106:40123 PLF.Equiv <> optimize_0plus_com def
R40157:40159 PLF.Imp <> CIf constr
R40172:40174 PLF.Imp <> CIf constr
R40225:40242 PLF.Equiv <> optimize_0plus_com def
R40201:40218 PLF.Equiv <> optimize_0plus_com def
R40177:40195 PLF.Equiv <> optimize_0plus_bexp def
R40252:40257 PLF.Imp <> CWhile constr
R40267:40272 PLF.Imp <> CWhile constr
R40299:40316 PLF.Equiv <> optimize_0plus_com def
R40275:40293 PLF.Equiv <> optimize_0plus_bexp def
prf 40335:40347 <> optimize_comm
R40366:40371 PLF.Equiv <> aequiv def
R40426:40444 PLF.Equiv <> optimize_0plus_aexp def
R40446:40450 PLF.Imp <> APlus constr
R40455:40456 PLF.Equiv <> a2 var
R40452:40453 PLF.Equiv <> a1 var
R40374:40374 PLF.Imp <> ::imp_scope:x_'+'_x not
R40397:40399 PLF.Imp <> ::imp_scope:x_'+'_x not
R40422:40422 PLF.Imp <> ::imp_scope:x_'+'_x not
R40375:40393 PLF.Equiv <> optimize_0plus_aexp def
R40395:40396 PLF.Equiv <> a1 var
R40400:40418 PLF.Equiv <> optimize_0plus_aexp def
R40420:40421 PLF.Equiv <> a2 var
R40491:40496 PLF.Equiv <> aequiv def
prf 40596:40614 <> optimize_aexp_sound
R40629:40634 PLF.Equiv <> aequiv def
R40639:40657 PLF.Equiv <> optimize_0plus_aexp def
R40659:40659 PLF.Equiv <> a var
R40636:40636 PLF.Equiv <> a var
R40689:40694 PLF.Equiv <> aequiv def
def 41848:41857 <> subst_aexp
R41864:41869 Coq.Strings.String <> string ind
R41877:41880 PLF.Imp <> aexp ind
R41888:41891 PLF.Imp <> aexp ind
R41896:41899 PLF.Imp <> aexp ind
R41912:41912 PLF.Equiv <> a var
R41923:41926 PLF.Imp <> ANum constr
R41945:41948 PLF.Imp <> ANum constr
R41956:41958 PLF.Imp <> AId constr
R41981:41990 PLF.Maps <> eqb_string def
R41992:41992 PLF.Equiv <> x var
R42009:42011 PLF.Imp <> AId constr
R42002:42002 PLF.Equiv <> u var
R42020:42024 PLF.Imp <> APlus constr
R42042:42046 PLF.Imp <> APlus constr
R42069:42078 PLF.Equiv <> subst_aexp def
R42082:42082 PLF.Equiv <> u var
R42080:42080 PLF.Equiv <> x var
R42049:42058 PLF.Equiv <> subst_aexp def
R42062:42062 PLF.Equiv <> u var
R42060:42060 PLF.Equiv <> x var
R42092:42097 PLF.Imp <> AMinus constr
R42114:42119 PLF.Imp <> AMinus constr
R42142:42151 PLF.Equiv <> subst_aexp def
R42155:42155 PLF.Equiv <> u var
R42153:42153 PLF.Equiv <> x var
R42122:42131 PLF.Equiv <> subst_aexp def
R42135:42135 PLF.Equiv <> u var
R42133:42133 PLF.Equiv <> x var
R42165:42169 PLF.Imp <> AMult constr
R42187:42191 PLF.Imp <> AMult constr
R42214:42223 PLF.Equiv <> subst_aexp def
R42227:42227 PLF.Equiv <> u var
R42225:42225 PLF.Equiv <> x var
R42194:42203 PLF.Equiv <> subst_aexp def
R42207:42207 PLF.Equiv <> u var
R42205:42205 PLF.Equiv <> x var
def 42249:42261 <> subst_aexp_ex
R42301:42305 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42267:42276 PLF.Equiv <> subst_aexp def
R42292:42294 PLF.Imp <> ::imp_scope:x_'+'_x not
R42291:42291 PLF.Imp <> Y def
R42295:42295 PLF.Imp <> X def
R42283:42285 PLF.Imp <> ::imp_scope:x_'+'_x not
R42278:42278 PLF.Imp <> X def
R42308:42311 PLF.Imp <> ::imp_scope:x_'+'_x not
R42319:42319 PLF.Imp <> ::imp_scope:x_'+'_x not
R42307:42307 PLF.Imp <> Y def
R42314:42316 PLF.Imp <> ::imp_scope:x_'+'_x not
def 42520:42539 <> subst_equiv_property
R42566:42571 PLF.Equiv <> cequiv def
R42616:42618 PLF.Imp <> ::imp_scope:x_';;'_x not
R42609:42613 PLF.Imp <> ::imp_scope:x_'::='_x not
R42607:42608 PLF.Equiv <> x1 var
R42614:42615 PLF.Equiv <> a1 var
R42621:42625 PLF.Imp <> ::imp_scope:x_'::='_x not
R42619:42620 PLF.Equiv <> x2 var
R42626:42635 PLF.Equiv <> subst_aexp def
R42643:42644 PLF.Equiv <> a2 var
R42640:42641 PLF.Equiv <> a1 var
R42637:42638 PLF.Equiv <> x1 var
R42583:42585 PLF.Imp <> ::imp_scope:x_';;'_x not
R42576:42580 PLF.Imp <> ::imp_scope:x_'::='_x not
R42574:42575 PLF.Equiv <> x1 var
R42581:42582 PLF.Equiv <> a1 var
R42588:42592 PLF.Imp <> ::imp_scope:x_'::='_x not
R42586:42587 PLF.Equiv <> x2 var
R42593:42594 PLF.Equiv <> a2 var
prf 43689:43701 <> subst_inequiv
R43707:43708 Coq.Init.Logic <> ::type_scope:'~'_x not
R43709:43728 PLF.Equiv <> subst_equiv_property def
R43747:43766 PLF.Equiv <> subst_equiv_property def
R43960:43974 PLF.Imp <> ::imp_scope:x_';;'_x not
R43950:43954 PLF.Imp <> ::imp_scope:x_'::='_x not
R43949:43949 PLF.Imp <> X def
R43956:43958 PLF.Imp <> ::imp_scope:x_'+'_x not
R43955:43955 PLF.Imp <> X def
R43976:43980 PLF.Imp <> ::imp_scope:x_'::='_x not
R43975:43975 PLF.Imp <> Y def
R43981:43981 PLF.Imp <> X def
R43960:43974 PLF.Imp <> ::imp_scope:x_';;'_x not
R43950:43954 PLF.Imp <> ::imp_scope:x_'::='_x not
R43949:43949 PLF.Imp <> X def
R43956:43958 PLF.Imp <> ::imp_scope:x_'+'_x not
R43955:43955 PLF.Imp <> X def
R43976:43980 PLF.Imp <> ::imp_scope:x_'::='_x not
R43975:43975 PLF.Imp <> Y def
R43981:43981 PLF.Imp <> X def
R44024:44038 PLF.Imp <> ::imp_scope:x_';;'_x not
R44014:44018 PLF.Imp <> ::imp_scope:x_'::='_x not
R44013:44013 PLF.Imp <> X def
R44020:44022 PLF.Imp <> ::imp_scope:x_'+'_x not
R44019:44019 PLF.Imp <> X def
R44040:44044 PLF.Imp <> ::imp_scope:x_'::='_x not
R44039:44039 PLF.Imp <> Y def
R44046:44048 PLF.Imp <> ::imp_scope:x_'+'_x not
R44045:44045 PLF.Imp <> X def
R44024:44038 PLF.Imp <> ::imp_scope:x_';;'_x not
R44014:44018 PLF.Imp <> ::imp_scope:x_'::='_x not
R44013:44013 PLF.Imp <> X def
R44020:44022 PLF.Imp <> ::imp_scope:x_'+'_x not
R44019:44019 PLF.Imp <> X def
R44040:44044 PLF.Imp <> ::imp_scope:x_'::='_x not
R44039:44039 PLF.Imp <> Y def
R44046:44048 PLF.Imp <> ::imp_scope:x_'+'_x not
R44045:44045 PLF.Imp <> X def
R44079:44084 PLF.Equiv <> cequiv def
R44079:44084 PLF.Equiv <> cequiv def
R44304:44308 PLF.Maps <> :::x_'!->'_x_';'_x not
R44310:44312 PLF.Maps <> :::x_'!->'_x_';'_x not
R44314:44318 PLF.Imp <> :::x_'!->'_x not
R44313:44313 PLF.Imp <> X def
R44303:44303 PLF.Imp <> Y def
R44304:44308 PLF.Maps <> :::x_'!->'_x_';'_x not
R44310:44312 PLF.Maps <> :::x_'!->'_x_';'_x not
R44314:44318 PLF.Imp <> :::x_'!->'_x not
R44313:44313 PLF.Imp <> X def
R44303:44303 PLF.Imp <> Y def
R44343:44347 PLF.Maps <> :::x_'!->'_x_';'_x not
R44349:44351 PLF.Maps <> :::x_'!->'_x_';'_x not
R44353:44357 PLF.Imp <> :::x_'!->'_x not
R44352:44352 PLF.Imp <> X def
R44342:44342 PLF.Imp <> Y def
R44343:44347 PLF.Maps <> :::x_'!->'_x_';'_x not
R44349:44351 PLF.Maps <> :::x_'!->'_x_';'_x not
R44353:44357 PLF.Imp <> :::x_'!->'_x not
R44352:44352 PLF.Imp <> X def
R44342:44342 PLF.Imp <> Y def
R44392:44395 PLF.Imp <> :::x_'=['_x_']=>'_x not
R44398:44402 PLF.Imp <> :::x_'=['_x_']=>'_x not
R44384:44391 PLF.Imp <> empty_st def
R44432:44435 PLF.Imp <> :::x_'=['_x_']=>'_x not
R44438:44442 PLF.Imp <> :::x_'=['_x_']=>'_x not
R44424:44431 PLF.Imp <> empty_st def
R44497:44501 PLF.Imp <> :::x_'!->'_x not
R44496:44496 PLF.Imp <> X def
R44476:44480 PLF.Imp <> E_Seq constr
R44520:44524 PLF.Imp <> E_Ass constr
R44392:44395 PLF.Imp <> :::x_'=['_x_']=>'_x not
R44398:44402 PLF.Imp <> :::x_'=['_x_']=>'_x not
R44384:44391 PLF.Imp <> empty_st def
R44432:44435 PLF.Imp <> :::x_'=['_x_']=>'_x not
R44438:44442 PLF.Imp <> :::x_'=['_x_']=>'_x not
R44424:44431 PLF.Imp <> empty_st def
R44432:44435 PLF.Imp <> :::x_'=['_x_']=>'_x not
R44438:44442 PLF.Imp <> :::x_'=['_x_']=>'_x not
R44424:44431 PLF.Imp <> empty_st def
R44497:44501 PLF.Imp <> :::x_'!->'_x not
R44496:44496 PLF.Imp <> X def
R44476:44480 PLF.Imp <> E_Seq constr
R44520:44524 PLF.Imp <> E_Ass constr
R44520:44524 PLF.Imp <> E_Ass constr
R44497:44501 PLF.Imp <> :::x_'!->'_x not
R44496:44496 PLF.Imp <> X def
R44476:44480 PLF.Imp <> E_Seq constr
R44520:44524 PLF.Imp <> E_Ass constr
R44520:44524 PLF.Imp <> E_Ass constr
R44497:44501 PLF.Imp <> :::x_'!->'_x not
R44496:44496 PLF.Imp <> X def
R44476:44480 PLF.Imp <> E_Seq constr
R44520:44524 PLF.Imp <> E_Ass constr
R44520:44524 PLF.Imp <> E_Ass constr
R44497:44501 PLF.Imp <> :::x_'!->'_x not
R44496:44496 PLF.Imp <> X def
R44476:44480 PLF.Imp <> E_Seq constr
R44680:44682 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44703:44721 PLF.Imp <> ceval_deterministic thm
R44726:44733 PLF.Imp <> empty_st def
R44680:44682 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44703:44721 PLF.Imp <> ceval_deterministic thm
R44726:44733 PLF.Imp <> empty_st def
R44776:44778 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44775:44775 PLF.Imp <> Y def
R44783:44783 PLF.Imp <> Y def
R44776:44778 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44775:44775 PLF.Imp <> Y def
R44783:44783 PLF.Imp <> Y def
ind 45200:45219 <> var_not_used_in_aexp
constr 45256:45261 <> VNUNum
constr 45311:45315 <> VNUId
constr 45374:45380 <> VNUPlus
constr 45515:45522 <> VNUMinus
constr 45658:45664 <> VNUMult
R45226:45231 Coq.Strings.String <> string ind
R45240:45243 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45236:45239 PLF.Imp <> aexp ind
R45275:45294 PLF.Equiv <> var_not_used_in_aexp ind
R45299:45302 PLF.Imp <> ANum constr
R45304:45304 PLF.Equiv <> n var
R45296:45296 PLF.Equiv <> x var
R45335:45338 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45339:45358 PLF.Equiv <> var_not_used_in_aexp ind
R45363:45365 PLF.Imp <> AId constr
R45367:45367 PLF.Equiv <> y var
R45360:45360 PLF.Equiv <> x var
R45330:45333 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R45329:45329 PLF.Equiv <> x var
R45334:45334 PLF.Equiv <> y var
R45429:45438 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45464:45473 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45474:45493 PLF.Equiv <> var_not_used_in_aexp ind
R45498:45502 PLF.Imp <> APlus constr
R45507:45508 PLF.Equiv <> a2 var
R45504:45505 PLF.Equiv <> a1 var
R45495:45495 PLF.Equiv <> x var
R45439:45458 PLF.Equiv <> var_not_used_in_aexp ind
R45462:45463 PLF.Equiv <> a2 var
R45460:45460 PLF.Equiv <> x var
R45404:45423 PLF.Equiv <> var_not_used_in_aexp ind
R45427:45428 PLF.Equiv <> a1 var
R45425:45425 PLF.Equiv <> x var
R45571:45580 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45606:45615 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45616:45635 PLF.Equiv <> var_not_used_in_aexp ind
R45640:45645 PLF.Imp <> AMinus constr
R45650:45651 PLF.Equiv <> a2 var
R45647:45648 PLF.Equiv <> a1 var
R45637:45637 PLF.Equiv <> x var
R45581:45600 PLF.Equiv <> var_not_used_in_aexp ind
R45604:45605 PLF.Equiv <> a2 var
R45602:45602 PLF.Equiv <> x var
R45546:45565 PLF.Equiv <> var_not_used_in_aexp ind
R45569:45570 PLF.Equiv <> a1 var
R45567:45567 PLF.Equiv <> x var
R45713:45722 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45748:45757 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45758:45777 PLF.Equiv <> var_not_used_in_aexp ind
R45782:45786 PLF.Imp <> AMult constr
R45791:45792 PLF.Equiv <> a2 var
R45788:45789 PLF.Equiv <> a1 var
R45779:45779 PLF.Equiv <> x var
R45723:45742 PLF.Equiv <> var_not_used_in_aexp ind
R45746:45747 PLF.Equiv <> a2 var
R45744:45744 PLF.Equiv <> x var
R45688:45707 PLF.Equiv <> var_not_used_in_aexp ind
R45711:45712 PLF.Equiv <> a1 var
R45709:45709 PLF.Equiv <> x var
prf 45803:45817 <> aeval_weakening
R45865:45870 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45894:45896 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45871:45875 PLF.Imp <> aeval def
R45893:45893 PLF.Equiv <> a var
R45879:45883 PLF.Maps <> :::x_'!->'_x_';'_x not
R45886:45888 PLF.Maps <> :::x_'!->'_x_';'_x not
R45889:45890 PLF.Equiv <> st var
R45878:45878 PLF.Equiv <> x var
R45884:45885 PLF.Equiv <> ni var
R45897:45901 PLF.Imp <> aeval def
R45906:45906 PLF.Equiv <> a var
R45903:45904 PLF.Equiv <> st var
R45841:45860 PLF.Equiv <> var_not_used_in_aexp ind
R45864:45864 PLF.Equiv <> a var
R45862:45862 PLF.Equiv <> x var
R46177:46188 PLF.Maps <> t_update_neq prfax
R46177:46188 PLF.Maps <> t_update_neq prfax
prf 46476:46491 <> inequiv_exercise
R46496:46497 Coq.Init.Logic <> ::type_scope:'~'_x not
R46498:46503 PLF.Equiv <> cequiv def
R46530:46533 PLF.Imp <> ::imp_scope:'SKIP' not
R46506:46511 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R46516:46519 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R46524:46527 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R46512:46515 Coq.Init.Datatypes <> true constr
R46520:46523 PLF.Imp <> ::imp_scope:'SKIP' not
R46562:46567 PLF.Equiv <> cequiv def
R46607:46609 PLF.Imp <> :::x_'=['_x_']=>'_x not
R46614:46616 PLF.Imp <> :::x_'=['_x_']=>'_x not
R46610:46613 PLF.Imp <> ::imp_scope:'SKIP' not
R46599:46606 PLF.Imp <> empty_st def
R46617:46624 PLF.Imp <> empty_st def
R46637:46642 PLF.Imp <> E_Skip constr
R46607:46609 PLF.Imp <> :::x_'=['_x_']=>'_x not
R46614:46616 PLF.Imp <> :::x_'=['_x_']=>'_x not
R46610:46613 PLF.Imp <> ::imp_scope:'SKIP' not
R46599:46606 PLF.Imp <> empty_st def
R46617:46624 PLF.Imp <> empty_st def
R46637:46642 PLF.Imp <> E_Skip constr
R46671:46688 PLF.Equiv <> WHILE_true_nonterm thm
R46671:46688 PLF.Equiv <> WHILE_true_nonterm thm
R46720:46730 PLF.Equiv <> refl_bequiv thm
R46720:46730 PLF.Equiv <> refl_bequiv thm
mod 48807:48810 <> Himp
ind 48908:48910 Himp com
constr 48926:48930 Himp CSkip
constr 48942:48945 Himp CAss
constr 48975:48978 Himp CSeq
constr 49004:49006 Himp CIf
constr 49040:49045 Himp CWhile
constr 49072:49077 Himp CHavoc
R48934:48936 PLF.Equiv <> com ind
R48955:48958 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R48963:48966 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R48967:48969 PLF.Equiv <> com ind
R48959:48962 PLF.Imp <> aexp ind
R48949:48954 Coq.Strings.String <> string ind
R48985:48988 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R48992:48995 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R48996:48998 PLF.Equiv <> com ind
R48989:48991 PLF.Equiv <> com ind
R48982:48984 PLF.Equiv <> com ind
R49014:49017 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49021:49024 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49028:49031 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49032:49034 PLF.Equiv <> com ind
R49025:49027 PLF.Equiv <> com ind
R49018:49020 PLF.Equiv <> com ind
R49010:49013 PLF.Imp <> bexp ind
R49053:49056 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49060:49063 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49064:49066 PLF.Equiv <> com ind
R49057:49059 PLF.Equiv <> com ind
R49049:49052 PLF.Imp <> bexp ind
R49087:49090 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49091:49093 PLF.Equiv <> com ind
R49081:49086 Coq.Strings.String <> string ind
R49150:49154 PLF.Equiv Himp CSkip constr
not 49136:49136 Himp ::imp_scope:'SKIP'
R49196:49199 PLF.Equiv Himp CAss constr
not 49178:49178 Himp ::imp_scope:x_'::='_x
R49259:49262 PLF.Equiv Himp CSeq constr
not 49242:49242 Himp ::imp_scope:x_';;'_x
R49359:49364 PLF.Equiv Himp CWhile constr
not 49328:49328 Himp ::imp_scope:'WHILE'_x_'DO'_x_'END'
R49471:49473 PLF.Equiv Himp CIf constr
not 49428:49428 Himp ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI'
R49560:49565 PLF.Equiv Himp CHavoc constr
not 49542:49542 Himp ::imp_scope:'HAVOC'_x
ind 50004:50008 Himp ceval
constr 50049:50054 Himp E_Skip
constr 50097:50101 Himp E_Ass
constr 50193:50197 Himp E_Seq
constr 50318:50325 Himp E_IfTrue
constr 50455:50463 Himp E_IfFalse
constr 50594:50605 Himp E_WhileFalse
constr 50692:50702 Himp E_WhileTrue
constr 50868:50874 Himp E_Havoc
R50015:50018 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50024:50027 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50033:50036 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50028:50032 PLF.Imp <> state def
R50019:50023 PLF.Imp <> state def
R50012:50014 PLF.Equiv Himp com ind
R50981:50985 PLF.Equiv <> ceval ind
R50077:50080 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R50085:50089 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R50081:50084 PLF.Equiv Himp ::imp_scope:'SKIP' not
R50075:50076 PLF.Equiv <> st var
R50090:50091 PLF.Equiv <> st var
R50145:50154 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50157:50160 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R50169:50174 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R50187:50187 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R50162:50166 PLF.Equiv Himp ::imp_scope:x_'::='_x not
R50161:50161 PLF.Equiv <> x var
R50167:50168 PLF.Equiv <> a1 var
R50155:50156 PLF.Equiv <> st var
R50176:50180 PLF.Maps <> :::x_'!->'_x_';'_x not
R50182:50184 PLF.Maps <> :::x_'!->'_x_';'_x not
R50185:50186 PLF.Equiv <> st var
R50175:50175 PLF.Equiv <> x var
R50181:50181 PLF.Equiv <> n var
R50141:50143 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50130:50134 PLF.Imp <> aeval def
R50139:50140 PLF.Equiv <> a1 var
R50136:50137 PLF.Equiv <> st var
R50144:50144 PLF.Equiv <> n var
R50250:50260 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50279:50288 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50291:50295 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R50304:50308 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R50298:50301 PLF.Equiv Himp ::imp_scope:x_';;'_x not
R50296:50297 PLF.Equiv <> c1 var
R50302:50303 PLF.Equiv <> c2 var
R50289:50290 PLF.Equiv <> st var
R50309:50312 PLF.Equiv <> st'' var
R50264:50267 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R50270:50274 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R50268:50269 PLF.Equiv <> c2 var
R50261:50263 PLF.Equiv <> st' var
R50275:50278 PLF.Equiv <> st'' var
R50235:50239 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R50242:50246 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R50240:50241 PLF.Equiv <> c1 var
R50233:50234 PLF.Equiv <> st var
R50247:50249 PLF.Equiv <> st' var
R50375:50384 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50401:50410 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50413:50416 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R50442:50446 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R50417:50421 PLF.Equiv Himp ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R50423:50428 PLF.Equiv Himp ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R50431:50436 PLF.Equiv Himp ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R50439:50441 PLF.Equiv Himp ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R50422:50422 PLF.Equiv <> b var
R50429:50430 PLF.Equiv <> c1 var
R50437:50438 PLF.Equiv <> c2 var
R50411:50412 PLF.Equiv <> st var
R50447:50449 PLF.Equiv <> st' var
R50387:50390 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R50393:50397 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R50391:50392 PLF.Equiv <> c1 var
R50385:50386 PLF.Equiv <> st var
R50398:50400 PLF.Equiv <> st' var
R50368:50370 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50358:50362 PLF.Imp <> beval def
R50367:50367 PLF.Equiv <> b var
R50364:50365 PLF.Equiv <> st var
R50371:50374 Coq.Init.Datatypes <> true constr
R50514:50523 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50540:50549 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50552:50555 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R50581:50585 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R50556:50560 PLF.Equiv Himp ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R50562:50567 PLF.Equiv Himp ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R50570:50575 PLF.Equiv Himp ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R50578:50580 PLF.Equiv Himp ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R50561:50561 PLF.Equiv <> b var
R50568:50569 PLF.Equiv <> c1 var
R50576:50577 PLF.Equiv <> c2 var
R50550:50551 PLF.Equiv <> st var
R50586:50588 PLF.Equiv <> st' var
R50526:50529 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R50532:50536 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R50530:50531 PLF.Equiv <> c2 var
R50524:50525 PLF.Equiv <> st var
R50537:50539 PLF.Equiv <> st' var
R50506:50508 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50496:50500 PLF.Imp <> beval def
R50505:50505 PLF.Equiv <> b var
R50502:50503 PLF.Equiv <> st var
R50509:50513 Coq.Init.Datatypes <> false constr
R50648:50657 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50660:50663 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R50680:50684 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R50664:50669 PLF.Equiv Himp ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R50671:50674 PLF.Equiv Himp ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R50676:50679 PLF.Equiv Himp ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R50670:50670 PLF.Equiv <> b var
R50675:50675 PLF.Equiv <> c var
R50658:50659 PLF.Equiv <> st var
R50685:50686 PLF.Equiv <> st var
R50640:50642 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50630:50634 PLF.Imp <> beval def
R50639:50639 PLF.Equiv <> b var
R50636:50637 PLF.Equiv <> st var
R50643:50647 Coq.Init.Datatypes <> false constr
R50753:50762 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50779:50788 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50821:50830 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50833:50837 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R50854:50858 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R50838:50843 PLF.Equiv Himp ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R50845:50848 PLF.Equiv Himp ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R50850:50853 PLF.Equiv Himp ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R50844:50844 PLF.Equiv <> b var
R50849:50849 PLF.Equiv <> c var
R50831:50832 PLF.Equiv <> st var
R50859:50862 PLF.Equiv <> st'' var
R50792:50795 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R50812:50816 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R50796:50801 PLF.Equiv Himp ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R50803:50806 PLF.Equiv Himp ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R50808:50811 PLF.Equiv Himp ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R50802:50802 PLF.Equiv <> b var
R50807:50807 PLF.Equiv <> c var
R50789:50791 PLF.Equiv <> st' var
R50817:50820 PLF.Equiv <> st'' var
R50765:50769 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R50771:50775 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R50770:50770 PLF.Equiv <> c var
R50763:50764 PLF.Equiv <> st var
R50776:50778 PLF.Equiv <> st' var
R50746:50748 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50736:50740 PLF.Imp <> beval def
R50745:50745 PLF.Equiv <> b var
R50742:50743 PLF.Equiv <> st var
R50749:50752 Coq.Init.Datatypes <> true constr
R50900:50904 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R50912:50917 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R50929:50929 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R50905:50910 PLF.Equiv Himp ::imp_scope:'HAVOC'_x not
R50911:50911 PLF.Equiv <> X var
R50898:50899 PLF.Equiv <> st var
R50919:50923 PLF.Maps <> :::x_'!->'_x_';'_x not
R50925:50926 PLF.Maps <> :::x_'!->'_x_';'_x not
R50927:50928 PLF.Equiv <> st var
R50918:50918 PLF.Equiv <> X var
R50924:50924 PLF.Equiv <> n var
R50981:50985 PLF.Equiv Himp ceval ind
not 50959:50959 Himp :::x_'=['_x_']=>'_x
def 51122:51135 Himp havoc_example1
R51147:51150 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51164:51169 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51177:51177 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51152:51157 PLF.Equiv Himp ::imp_scope:'HAVOC'_x not
R51158:51158 PLF.Imp <> X def
R51139:51146 PLF.Imp <> empty_st def
R51171:51175 PLF.Imp <> :::x_'!->'_x not
R51170:51170 PLF.Imp <> X def
R51195:51201 PLF.Equiv Himp E_Havoc constr
R51195:51201 PLF.Equiv Himp E_Havoc constr
def 51218:51231 Himp havoc_example2
R51245:51248 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51269:51274 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51283:51283 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51254:51256 PLF.Equiv Himp ::imp_scope:x_';;'_x not
R51250:51253 PLF.Equiv Himp ::imp_scope:'SKIP' not
R51257:51262 PLF.Equiv Himp ::imp_scope:'HAVOC'_x not
R51263:51263 PLF.Imp <> Z def
R51237:51244 PLF.Imp <> empty_st def
R51276:51280 PLF.Imp <> :::x_'!->'_x not
R51275:51275 PLF.Imp <> Z def
R51302:51306 PLF.Equiv Himp E_Seq constr
R51302:51306 PLF.Equiv Himp E_Seq constr
R51317:51322 PLF.Equiv Himp E_Skip constr
R51317:51322 PLF.Equiv Himp E_Skip constr
R51333:51339 PLF.Equiv Himp E_Havoc constr
R51333:51339 PLF.Equiv Himp E_Havoc constr
def 51399:51435 Himp manual_grade_for_Check_rule_for_HAVOC
R51439:51444 Coq.Init.Datatypes <> option ind
R51450:51450 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R51447:51449 Coq.Init.Datatypes <> nat ind
R51451:51456 Coq.Strings.String <> string ind
R51462:51465 Coq.Init.Datatypes <> None constr
def 51567:51572 Himp cequiv
R51583:51585 PLF.Equiv Himp com ind
R51614:51618 PLF.Imp <> state def
R51639:51643 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R51625:51628 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51631:51635 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51629:51630 PLF.Equiv <> c1 var
R51623:51624 PLF.Equiv <> st var
R51636:51638 PLF.Equiv <> st' var
R51646:51649 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51652:51656 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51650:51651 PLF.Equiv <> c2 var
R51644:51645 PLF.Equiv <> st var
R51657:51659 PLF.Equiv <> st' var
def 51885:51887 Himp pXY
R51902:51904 PLF.Equiv Himp ::imp_scope:x_';;'_x not
R51895:51900 PLF.Equiv Himp ::imp_scope:'HAVOC'_x not
R51901:51901 PLF.Imp <> X def
R51905:51910 PLF.Equiv Himp ::imp_scope:'HAVOC'_x not
R51911:51911 PLF.Imp <> Y def
def 51931:51933 Himp pYX
R51948:51950 PLF.Equiv Himp ::imp_scope:x_';;'_x not
R51941:51946 PLF.Equiv Himp ::imp_scope:'HAVOC'_x not
R51947:51947 PLF.Imp <> Y def
R51951:51956 PLF.Equiv Himp ::imp_scope:'HAVOC'_x not
R51957:51957 PLF.Imp <> X def
prf 52069:52082 Himp pXY_cequiv_pYX
R52102:52105 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R52088:52093 PLF.Equiv Himp cequiv def
R52099:52101 PLF.Equiv Himp pYX def
R52095:52097 PLF.Equiv Himp pXY def
R52106:52106 Coq.Init.Logic <> ::type_scope:'~'_x not
R52107:52112 PLF.Equiv Himp cequiv def
R52118:52120 PLF.Equiv Himp pYX def
R52114:52116 PLF.Equiv Himp pXY def
R52260:52264 PLF.Maps <> :::x_'!->'_x_';'_x not
R52267:52268 PLF.Maps <> :::x_'!->'_x_';'_x not
R52259:52259 PLF.Imp <> Y def
R52247:52251 PLF.Equiv Himp E_Seq constr
R52260:52264 PLF.Maps <> :::x_'!->'_x_';'_x not
R52267:52268 PLF.Maps <> :::x_'!->'_x_';'_x not
R52259:52259 PLF.Imp <> Y def
R52247:52251 PLF.Equiv Himp E_Seq constr
R52287:52293 PLF.Equiv Himp E_Havoc constr
R52287:52293 PLF.Equiv Himp E_Havoc constr
R52310:52310 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52332:52351 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52373:52373 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52312:52316 PLF.Maps <> :::x_'!->'_x_';'_x not
R52319:52320 PLF.Maps <> :::x_'!->'_x_';'_x not
R52322:52326 PLF.Maps <> :::x_'!->'_x_';'_x not
R52328:52329 PLF.Maps <> :::x_'!->'_x_';'_x not
R52321:52321 PLF.Imp <> X def
R52311:52311 PLF.Imp <> Y def
R52353:52357 PLF.Maps <> :::x_'!->'_x_';'_x not
R52359:52360 PLF.Maps <> :::x_'!->'_x_';'_x not
R52362:52366 PLF.Maps <> :::x_'!->'_x_';'_x not
R52369:52370 PLF.Maps <> :::x_'!->'_x_';'_x not
R52361:52361 PLF.Imp <> Y def
R52352:52352 PLF.Imp <> X def
R52310:52310 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52332:52351 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52373:52373 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52312:52316 PLF.Maps <> :::x_'!->'_x_';'_x not
R52319:52320 PLF.Maps <> :::x_'!->'_x_';'_x not
R52322:52326 PLF.Maps <> :::x_'!->'_x_';'_x not
R52328:52329 PLF.Maps <> :::x_'!->'_x_';'_x not
R52321:52321 PLF.Imp <> X def
R52311:52311 PLF.Imp <> Y def
R52353:52357 PLF.Maps <> :::x_'!->'_x_';'_x not
R52359:52360 PLF.Maps <> :::x_'!->'_x_';'_x not
R52362:52366 PLF.Maps <> :::x_'!->'_x_';'_x not
R52369:52370 PLF.Maps <> :::x_'!->'_x_';'_x not
R52361:52361 PLF.Imp <> Y def
R52352:52352 PLF.Imp <> X def
R52401:52416 PLF.Maps <> t_update_permute prfax
R52401:52416 PLF.Maps <> t_update_permute prfax
R52506:52512 PLF.Equiv Himp E_Havoc constr
R52506:52512 PLF.Equiv Himp E_Havoc constr
R52586:52590 PLF.Maps <> :::x_'!->'_x_';'_x not
R52593:52594 PLF.Maps <> :::x_'!->'_x_';'_x not
R52585:52585 PLF.Imp <> X def
R52573:52577 PLF.Equiv Himp E_Seq constr
R52586:52590 PLF.Maps <> :::x_'!->'_x_';'_x not
R52593:52594 PLF.Maps <> :::x_'!->'_x_';'_x not
R52585:52585 PLF.Imp <> X def
R52573:52577 PLF.Equiv Himp E_Seq constr
R52612:52618 PLF.Equiv Himp E_Havoc constr
R52612:52618 PLF.Equiv Himp E_Havoc constr
R52635:52635 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52657:52676 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52698:52698 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52637:52641 PLF.Maps <> :::x_'!->'_x_';'_x not
R52644:52645 PLF.Maps <> :::x_'!->'_x_';'_x not
R52647:52651 PLF.Maps <> :::x_'!->'_x_';'_x not
R52653:52654 PLF.Maps <> :::x_'!->'_x_';'_x not
R52646:52646 PLF.Imp <> Y def
R52636:52636 PLF.Imp <> X def
R52678:52682 PLF.Maps <> :::x_'!->'_x_';'_x not
R52684:52685 PLF.Maps <> :::x_'!->'_x_';'_x not
R52687:52691 PLF.Maps <> :::x_'!->'_x_';'_x not
R52694:52695 PLF.Maps <> :::x_'!->'_x_';'_x not
R52686:52686 PLF.Imp <> X def
R52677:52677 PLF.Imp <> Y def
R52635:52635 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52657:52676 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52698:52698 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52637:52641 PLF.Maps <> :::x_'!->'_x_';'_x not
R52644:52645 PLF.Maps <> :::x_'!->'_x_';'_x not
R52647:52651 PLF.Maps <> :::x_'!->'_x_';'_x not
R52653:52654 PLF.Maps <> :::x_'!->'_x_';'_x not
R52646:52646 PLF.Imp <> Y def
R52636:52636 PLF.Imp <> X def
R52678:52682 PLF.Maps <> :::x_'!->'_x_';'_x not
R52684:52685 PLF.Maps <> :::x_'!->'_x_';'_x not
R52687:52691 PLF.Maps <> :::x_'!->'_x_';'_x not
R52694:52695 PLF.Maps <> :::x_'!->'_x_';'_x not
R52686:52686 PLF.Imp <> X def
R52677:52677 PLF.Imp <> Y def
R52726:52741 PLF.Maps <> t_update_permute prfax
R52726:52741 PLF.Maps <> t_update_permute prfax
R52831:52837 PLF.Equiv Himp E_Havoc constr
R52831:52837 PLF.Equiv Himp E_Havoc constr
def 52981:52986 Himp ptwice
R53001:53003 PLF.Equiv Himp ::imp_scope:x_';;'_x not
R52994:52999 PLF.Equiv Himp ::imp_scope:'HAVOC'_x not
R53000:53000 PLF.Imp <> X def
R53004:53009 PLF.Equiv Himp ::imp_scope:'HAVOC'_x not
R53010:53010 PLF.Imp <> Y def
def 53030:53034 Himp pcopy
R53049:53051 PLF.Equiv Himp ::imp_scope:x_';;'_x not
R53042:53047 PLF.Equiv Himp ::imp_scope:'HAVOC'_x not
R53048:53048 PLF.Imp <> X def
R53053:53057 PLF.Equiv Himp ::imp_scope:x_'::='_x not
R53052:53052 PLF.Imp <> Y def
R53058:53058 PLF.Imp <> X def
prf 53234:53252 Himp ptwice_cequiv_pcopy
R53277:53280 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R53258:53263 PLF.Equiv Himp cequiv def
R53272:53276 PLF.Equiv Himp pcopy def
R53265:53270 PLF.Equiv Himp ptwice def
R53281:53281 Coq.Init.Logic <> ::type_scope:'~'_x not
R53282:53287 PLF.Equiv Himp cequiv def
R53296:53300 PLF.Equiv Himp pcopy def
R53289:53294 PLF.Equiv Himp ptwice def
R53320:53324 PLF.Equiv Himp pcopy def
R53334:53339 PLF.Equiv Himp ptwice def
R53349:53354 PLF.Equiv Himp cequiv def
R53396:53398 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R53422:53426 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R53441:53441 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R53407:53409 PLF.Equiv Himp ::imp_scope:x_';;'_x not
R53400:53405 PLF.Equiv Himp ::imp_scope:'HAVOC'_x not
R53406:53406 PLF.Imp <> X def
R53410:53415 PLF.Equiv Himp ::imp_scope:'HAVOC'_x not
R53416:53416 PLF.Imp <> Y def
R53388:53395 PLF.Imp <> empty_st def
R53428:53432 PLF.Maps <> :::x_'!->'_x_';'_x not
R53434:53434 PLF.Maps <> :::x_'!->'_x_';'_x not
R53436:53439 PLF.Imp <> :::x_'!->'_x not
R53435:53435 PLF.Imp <> Y def
R53427:53427 PLF.Imp <> X def
R53396:53398 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R53422:53426 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R53441:53441 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R53407:53409 PLF.Equiv Himp ::imp_scope:x_';;'_x not
R53400:53405 PLF.Equiv Himp ::imp_scope:'HAVOC'_x not
R53406:53406 PLF.Imp <> X def
R53410:53415 PLF.Equiv Himp ::imp_scope:'HAVOC'_x not
R53416:53416 PLF.Imp <> Y def
R53388:53395 PLF.Imp <> empty_st def
R53428:53432 PLF.Maps <> :::x_'!->'_x_';'_x not
R53434:53434 PLF.Maps <> :::x_'!->'_x_';'_x not
R53436:53439 PLF.Imp <> :::x_'!->'_x not
R53435:53435 PLF.Imp <> Y def
R53427:53427 PLF.Imp <> X def
R53470:53474 PLF.Imp <> :::x_'!->'_x not
R53469:53469 PLF.Imp <> X def
R53457:53461 PLF.Equiv Himp E_Seq constr
R53470:53474 PLF.Imp <> :::x_'!->'_x not
R53469:53469 PLF.Imp <> X def
R53457:53461 PLF.Equiv Himp E_Seq constr
R53491:53497 PLF.Equiv Himp E_Havoc constr
R53491:53497 PLF.Equiv Himp E_Havoc constr
R53516:53520 PLF.Maps <> :::x_'!->'_x_';'_x not
R53522:53522 PLF.Maps <> :::x_'!->'_x_';'_x not
R53524:53527 PLF.Imp <> :::x_'!->'_x not
R53523:53523 PLF.Imp <> Y def
R53515:53515 PLF.Imp <> X def
R53538:53542 PLF.Maps <> :::x_'!->'_x_';'_x not
R53544:53545 PLF.Maps <> :::x_'!->'_x_';'_x not
R53547:53551 PLF.Imp <> :::x_'!->'_x not
R53546:53546 PLF.Imp <> X def
R53537:53537 PLF.Imp <> Y def
R53516:53520 PLF.Maps <> :::x_'!->'_x_';'_x not
R53522:53522 PLF.Maps <> :::x_'!->'_x_';'_x not
R53524:53527 PLF.Imp <> :::x_'!->'_x not
R53523:53523 PLF.Imp <> Y def
R53515:53515 PLF.Imp <> X def
R53538:53542 PLF.Maps <> :::x_'!->'_x_';'_x not
R53544:53545 PLF.Maps <> :::x_'!->'_x_';'_x not
R53547:53551 PLF.Imp <> :::x_'!->'_x not
R53546:53546 PLF.Imp <> X def
R53537:53537 PLF.Imp <> Y def
R53568:53574 PLF.Equiv Himp E_Havoc constr
R53568:53574 PLF.Equiv Himp E_Havoc constr
R53589:53604 PLF.Maps <> t_update_permute prfax
R53589:53604 PLF.Maps <> t_update_permute prfax
R53749:53759 PLF.Maps <> t_update_eq prfax
R53749:53759 PLF.Maps <> t_update_eq prfax
R53749:53759 PLF.Maps <> t_update_eq prfax
R53798:53800 Coq.Init.Logic <> ::type_scope:x_'='_x not
R53780:53784 PLF.Maps <> :::x_'!->'_x_';'_x not
R53786:53787 PLF.Maps <> :::x_'!->'_x_';'_x not
R53789:53793 PLF.Imp <> :::x_'!->'_x not
R53788:53788 PLF.Imp <> X def
R53779:53779 PLF.Imp <> Y def
R53797:53797 PLF.Imp <> X def
R53803:53807 PLF.Maps <> :::x_'!->'_x_';'_x not
R53809:53810 PLF.Maps <> :::x_'!->'_x_';'_x not
R53812:53816 PLF.Imp <> :::x_'!->'_x not
R53811:53811 PLF.Imp <> Y def
R53802:53802 PLF.Imp <> X def
R53820:53820 PLF.Imp <> X def
R53798:53800 Coq.Init.Logic <> ::type_scope:x_'='_x not
R53780:53784 PLF.Maps <> :::x_'!->'_x_';'_x not
R53786:53787 PLF.Maps <> :::x_'!->'_x_';'_x not
R53789:53793 PLF.Imp <> :::x_'!->'_x not
R53788:53788 PLF.Imp <> X def
R53779:53779 PLF.Imp <> Y def
R53797:53797 PLF.Imp <> X def
R53803:53807 PLF.Maps <> :::x_'!->'_x_';'_x not
R53809:53810 PLF.Maps <> :::x_'!->'_x_';'_x not
R53812:53816 PLF.Imp <> :::x_'!->'_x not
R53811:53811 PLF.Imp <> Y def
R53802:53802 PLF.Imp <> X def
R53820:53820 PLF.Imp <> X def
R53862:53869 PLF.Maps <> t_update def
R53941:53943 Coq.Init.Logic <> ::type_scope:x_'='_x not
R53923:53927 PLF.Maps <> :::x_'!->'_x_';'_x not
R53929:53930 PLF.Maps <> :::x_'!->'_x_';'_x not
R53932:53936 PLF.Imp <> :::x_'!->'_x not
R53931:53931 PLF.Imp <> X def
R53922:53922 PLF.Imp <> Y def
R53940:53940 PLF.Imp <> Y def
R53946:53950 PLF.Maps <> :::x_'!->'_x_';'_x not
R53952:53953 PLF.Maps <> :::x_'!->'_x_';'_x not
R53955:53959 PLF.Imp <> :::x_'!->'_x not
R53954:53954 PLF.Imp <> Y def
R53945:53945 PLF.Imp <> X def
R53963:53963 PLF.Imp <> Y def
R53941:53943 Coq.Init.Logic <> ::type_scope:x_'='_x not
R53923:53927 PLF.Maps <> :::x_'!->'_x_';'_x not
R53929:53930 PLF.Maps <> :::x_'!->'_x_';'_x not
R53932:53936 PLF.Imp <> :::x_'!->'_x not
R53931:53931 PLF.Imp <> X def
R53922:53922 PLF.Imp <> Y def
R53940:53940 PLF.Imp <> Y def
R53946:53950 PLF.Maps <> :::x_'!->'_x_';'_x not
R53952:53953 PLF.Maps <> :::x_'!->'_x_';'_x not
R53955:53959 PLF.Imp <> :::x_'!->'_x not
R53954:53954 PLF.Imp <> Y def
R53945:53945 PLF.Imp <> X def
R53963:53963 PLF.Imp <> Y def
R54005:54012 PLF.Maps <> t_update def
def 54718:54719 Himp p1
R54723:54725 PLF.Equiv Himp com ind
R54733:54738 PLF.Equiv Himp ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R54748:54755 PLF.Equiv Himp ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R54781:54786 PLF.Equiv Himp ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R54739:54741 PLF.Imp <> ::imp_scope:'~'_x not
R54747:54747 PLF.Imp <> ::imp_scope:'~'_x not
R54743:54745 PLF.Imp <> ::imp_scope:x_'='_x not
R54742:54742 PLF.Imp <> X def
R54763:54769 PLF.Equiv Himp ::imp_scope:x_';;'_x not
R54756:54761 PLF.Equiv Himp ::imp_scope:'HAVOC'_x not
R54762:54762 PLF.Imp <> Y def
R54771:54775 PLF.Equiv Himp ::imp_scope:x_'::='_x not
R54770:54770 PLF.Imp <> X def
R54777:54779 PLF.Imp <> ::imp_scope:x_'+'_x not
R54776:54776 PLF.Imp <> X def
def 54806:54807 Himp p2
R54811:54813 PLF.Equiv Himp com ind
R54821:54826 PLF.Equiv Himp ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R54836:54843 PLF.Equiv Himp ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R54848:54853 PLF.Equiv Himp ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R54827:54829 PLF.Imp <> ::imp_scope:'~'_x not
R54835:54835 PLF.Imp <> ::imp_scope:'~'_x not
R54831:54833 PLF.Imp <> ::imp_scope:x_'='_x not
R54830:54830 PLF.Imp <> X def
R54844:54847 PLF.Equiv Himp ::imp_scope:'SKIP' not
prf 55120:55133 Himp p1_may_diverge
R55161:55166 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R55167:55168 Coq.Init.Logic <> ::type_scope:'~'_x not
R55171:55174 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R55177:55181 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R55175:55176 PLF.Equiv Himp p1 def
R55169:55170 PLF.Equiv <> st var
R55182:55184 PLF.Equiv <> st' var
R55156:55159 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R55152:55153 PLF.Equiv <> st var
R55155:55155 PLF.Imp <> X def
R55203:55204 PLF.Equiv Himp p1 def
R55292:55294 Coq.Init.Logic <> ::type_scope:x_'='_x not
R55291:55291 PLF.Imp <> X def
R55292:55294 Coq.Init.Logic <> ::type_scope:x_'='_x not
R55291:55291 PLF.Imp <> X def
R55323:55326 Coq.Arith.PeanoNat <> ::nat_scope:x_'=?'_x not
R55322:55322 PLF.Imp <> X def
R55323:55326 Coq.Arith.PeanoNat <> ::nat_scope:x_'=?'_x not
R55322:55322 PLF.Imp <> X def
R55352:55357 Coq.Arith.PeanoNat Nat eqb_eq thm
R55352:55357 Coq.Arith.PeanoNat Nat eqb_eq thm
prf 55461:55474 Himp p2_may_diverge
R55502:55507 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R55508:55509 Coq.Init.Logic <> ::type_scope:'~'_x not
R55512:55515 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R55518:55522 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R55516:55517 PLF.Equiv Himp p2 def
R55510:55511 PLF.Equiv <> st var
R55523:55525 PLF.Equiv <> st' var
R55497:55500 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R55493:55494 PLF.Equiv <> st var
R55496:55496 PLF.Imp <> X def
prf 55723:55733 Himp p1_p2_equiv
R55737:55742 PLF.Equiv Himp cequiv def
R55747:55748 PLF.Equiv Himp p2 def
R55744:55745 PLF.Equiv Himp p1 def
def 56018:56019 Himp p3
R56023:56025 PLF.Equiv Himp com ind
R56040:56044 PLF.Equiv Himp ::imp_scope:x_';;'_x not
R56034:56038 PLF.Equiv Himp ::imp_scope:x_'::='_x not
R56033:56033 PLF.Imp <> Z def
R56045:56050 PLF.Equiv Himp ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R56059:56066 PLF.Equiv Himp ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R56088:56093 PLF.Equiv Himp ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R56051:56052 PLF.Imp <> ::imp_scope:'~'_x not
R56058:56058 PLF.Imp <> ::imp_scope:'~'_x not
R56054:56056 PLF.Imp <> ::imp_scope:x_'='_x not
R56053:56053 PLF.Imp <> X def
R56074:56080 PLF.Equiv Himp ::imp_scope:x_';;'_x not
R56067:56072 PLF.Equiv Himp ::imp_scope:'HAVOC'_x not
R56073:56073 PLF.Imp <> X def
R56081:56086 PLF.Equiv Himp ::imp_scope:'HAVOC'_x not
R56087:56087 PLF.Imp <> Z def
def 56113:56114 Himp p4
R56118:56120 PLF.Equiv Himp com ind
R56135:56139 PLF.Equiv Himp ::imp_scope:x_';;'_x not
R56129:56133 PLF.Equiv Himp ::imp_scope:x_'::='_x not
R56128:56128 PLF.Imp <> X def
R56141:56145 PLF.Equiv Himp ::imp_scope:x_'::='_x not
R56140:56140 PLF.Imp <> Z def
prf 56163:56175 Himp p3_p4_inequiv
R56179:56180 Coq.Init.Logic <> ::type_scope:'~'_x not
R56181:56186 PLF.Equiv Himp cequiv def
R56191:56192 PLF.Equiv Himp p4 def
R56188:56189 PLF.Equiv Himp p3 def
def 56799:56800 Himp p5
R56804:56806 PLF.Equiv Himp com ind
R56814:56819 PLF.Equiv Himp ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R56828:56835 PLF.Equiv Himp ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R56843:56848 PLF.Equiv Himp ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R56820:56821 PLF.Imp <> ::imp_scope:'~'_x not
R56827:56827 PLF.Imp <> ::imp_scope:'~'_x not
R56823:56825 PLF.Imp <> ::imp_scope:x_'='_x not
R56822:56822 PLF.Imp <> X def
R56836:56841 PLF.Equiv Himp ::imp_scope:'HAVOC'_x not
R56842:56842 PLF.Imp <> X def
def 56868:56869 Himp p6
R56873:56875 PLF.Equiv Himp com ind
R56884:56888 PLF.Equiv Himp ::imp_scope:x_'::='_x not
R56883:56883 PLF.Imp <> X def
prf 56906:56916 Himp p5_p6_equiv
R56920:56925 PLF.Equiv Himp cequiv def
R56930:56931 PLF.Equiv Himp p6 def
R56927:56928 PLF.Equiv Himp p5 def
R56985:56988 PLF.Equiv Himp <> mod
prf 57698:57728 <> swap_noninterfering_assignments
R57761:57766 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R57793:57798 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R57825:57830 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R57831:57836 PLF.Equiv <> cequiv def
R57880:57882 PLF.Imp <> ::imp_scope:x_';;'_x not
R57873:57877 PLF.Imp <> ::imp_scope:x_'::='_x not
R57871:57872 PLF.Equiv <> l2 var
R57878:57879 PLF.Equiv <> a2 var
R57885:57889 PLF.Imp <> ::imp_scope:x_'::='_x not
R57883:57884 PLF.Equiv <> l1 var
R57890:57891 PLF.Equiv <> a1 var
R57852:57854 PLF.Imp <> ::imp_scope:x_';;'_x not
R57845:57849 PLF.Imp <> ::imp_scope:x_'::='_x not
R57843:57844 PLF.Equiv <> l1 var
R57850:57851 PLF.Equiv <> a1 var
R57857:57861 PLF.Imp <> ::imp_scope:x_'::='_x not
R57855:57856 PLF.Equiv <> l2 var
R57862:57863 PLF.Equiv <> a2 var
R57799:57818 PLF.Equiv <> var_not_used_in_aexp ind
R57823:57824 PLF.Equiv <> a1 var
R57820:57821 PLF.Equiv <> l2 var
R57767:57786 PLF.Equiv <> var_not_used_in_aexp ind
R57791:57792 PLF.Equiv <> a2 var
R57788:57789 PLF.Equiv <> l1 var
R57755:57758 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R57753:57754 PLF.Equiv <> l1 var
R57759:57760 PLF.Equiv <> l2 var
def 58378:58384 <> capprox
R58395:58397 PLF.Imp <> com ind
R58427:58431 PLF.Imp <> state def
R58453:58456 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R58459:58462 PLF.Imp <> :::x_'=['_x_']=>'_x not
R58465:58469 PLF.Imp <> :::x_'=['_x_']=>'_x not
R58463:58464 PLF.Equiv <> c2 var
R58457:58458 PLF.Equiv <> st var
R58470:58472 PLF.Equiv <> st' var
R58439:58442 PLF.Imp <> :::x_'=['_x_']=>'_x not
R58445:58449 PLF.Imp <> :::x_'=['_x_']=>'_x not
R58443:58444 PLF.Equiv <> c1 var
R58437:58438 PLF.Equiv <> st var
R58450:58452 PLF.Equiv <> st' var
def 58889:58890 <> c3
R58894:58896 PLF.Imp <> com ind
def 58976:58977 <> c4
R58981:58983 PLF.Imp <> com ind
prf 59061:59075 <> c3_c4_different
R59094:59097 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R59079:59080 Coq.Init.Logic <> ::type_scope:'~'_x not
R59081:59087 PLF.Equiv <> capprox def
R59092:59093 PLF.Equiv <> c4 prfax
R59089:59090 PLF.Equiv <> c3 prfax
R59098:59099 Coq.Init.Logic <> ::type_scope:'~'_x not
R59100:59106 PLF.Equiv <> capprox def
R59111:59112 PLF.Equiv <> c3 prfax
R59108:59109 PLF.Equiv <> c4 prfax
def 59232:59235 <> cmin
R59239:59241 PLF.Imp <> com ind
prf 59319:59330 <> cmin_minimal
R59344:59350 PLF.Equiv <> capprox def
R59357:59357 PLF.Equiv <> c var
R59352:59355 PLF.Equiv <> cmin prfax
def 59534:59538 <> zprop
R59545:59547 PLF.Imp <> com ind
prf 59633:59648 <> zprop_preserving
R59674:59677 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R59690:59693 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R59694:59698 PLF.Equiv <> zprop prfax
R59700:59701 PLF.Equiv <> c' var
R59678:59684 PLF.Equiv <> capprox def
R59688:59689 PLF.Equiv <> c' var
R59686:59686 PLF.Equiv <> c var
R59667:59671 PLF.Equiv <> zprop prfax
R59673:59673 PLF.Equiv <> c var
