DIGEST e8b910769c298bb1e852017932981650
FPLF.Equiv
R107:110 PLF.Maps <> <> lib
R137:145 Coq.Bool.Bool <> <> lib
R172:182 Coq.Arith.Arith <> <> lib
R209:216 Coq.Init.Nat <> <> lib
R243:256 Coq.Arith.PeanoNat <> <> lib
R295:305 Coq.Arith.EqNat <> <> lib
R332:342 Coq.omega.Omega <> <> lib
R369:378 Coq.Lists.List <> <> lib
R405:434 Coq.Logic.FunctionalExtensionality <> <> lib
R483:485 PLF.Imp <> <> lib
def 2695:2700 <> aequiv
R2711:2714 PLF.Imp <> aexp ind
R2742:2746 PLF.Imp <> state def
R2765:2767 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2754:2758 PLF.Imp <> aeval def
R2763:2764 PLF.Equiv <> a1 var
R2760:2761 PLF.Equiv <> st var
R2768:2772 PLF.Imp <> aeval def
R2777:2778 PLF.Equiv <> a2 var
R2774:2775 PLF.Equiv <> st var
def 2793:2798 <> bequiv
R2809:2812 PLF.Imp <> bexp ind
R2840:2844 PLF.Imp <> state def
R2863:2865 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2852:2856 PLF.Imp <> beval def
R2861:2862 PLF.Equiv <> b1 var
R2858:2859 PLF.Equiv <> st var
R2866:2870 PLF.Imp <> beval def
R2875:2876 PLF.Equiv <> b2 var
R2872:2873 PLF.Equiv <> st var
prf 2985:2998 <> aequiv_example
R3001:3006 PLF.Equiv <> aequiv def
R3010:3012 PLF.Imp <> ::imp_scope:x_'-'_x not
R3009:3009 PLF.Imp <> X def
R3013:3013 PLF.Imp <> X def
prf 3067:3080 <> bequiv_example
R3083:3088 PLF.Equiv <> bequiv def
R3106:3109 Coq.Init.Datatypes <> true constr
R3096:3098 PLF.Imp <> ::imp_scope:x_'='_x not
R3092:3094 PLF.Imp <> ::imp_scope:x_'-'_x not
R3091:3091 PLF.Imp <> X def
R3095:3095 PLF.Imp <> X def
R3139:3143 PLF.Imp <> beval def
R3156:3169 PLF.Equiv <> aequiv_example thm
R3156:3169 PLF.Equiv <> aequiv_example thm
R3156:3169 PLF.Equiv <> aequiv_example thm
def 3867:3872 <> cequiv
R3883:3885 PLF.Imp <> com ind
R3917:3921 PLF.Imp <> state def
R3929:3929 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R3946:3952 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R3969:3969 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R3932:3935 PLF.Imp <> :::x_'=['_x_']=>'_x not
R3938:3942 PLF.Imp <> :::x_'=['_x_']=>'_x not
R3936:3937 PLF.Equiv <> c1 var
R3930:3931 PLF.Equiv <> st var
R3943:3945 PLF.Equiv <> st' var
R3955:3958 PLF.Imp <> :::x_'=['_x_']=>'_x not
R3961:3965 PLF.Imp <> :::x_'=['_x_']=>'_x not
R3959:3960 PLF.Equiv <> c2 var
R3953:3954 PLF.Equiv <> st var
R3966:3968 PLF.Equiv <> st' var
prf 4210:4218 <> skip_left
R4234:4239 PLF.Equiv <> cequiv def
R4260:4260 PLF.Equiv <> c var
R4250:4252 PLF.Imp <> ::imp_scope:x_';;'_x not
R4246:4249 PLF.Imp <> ::imp_scope:'SKIP' not
R4253:4253 PLF.Equiv <> c var
R4433:4437 PLF.Imp <> E_Seq constr
R4433:4437 PLF.Imp <> E_Seq constr
R4458:4463 PLF.Imp <> E_Skip constr
R4458:4463 PLF.Imp <> E_Skip constr
prf 4637:4646 <> skip_right
R4662:4667 PLF.Equiv <> cequiv def
R4689:4689 PLF.Equiv <> c var
R4675:4678 PLF.Imp <> ::imp_scope:x_';;'_x not
R4674:4674 PLF.Equiv <> c var
R4679:4682 PLF.Imp <> ::imp_scope:'SKIP' not
prf 4836:4851 <> TEST_true_simple
R4871:4876 PLF.Equiv <> cequiv def
R4917:4918 PLF.Equiv <> c1 var
R4883:4887 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R4892:4897 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R4900:4905 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R4908:4910 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R4888:4891 Coq.Init.Datatypes <> true constr
R4898:4899 PLF.Equiv <> c1 var
R4906:4907 PLF.Equiv <> c2 var
R5049:5056 PLF.Imp <> E_IfTrue constr
R5049:5056 PLF.Imp <> E_IfTrue constr
prf 6980:6988 <> TEST_true
R7023:7029 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7030:7035 PLF.Equiv <> cequiv def
R7073:7074 PLF.Equiv <> c1 var
R7042:7046 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R7048:7053 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R7056:7061 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R7064:7066 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R7047:7047 PLF.Equiv <> b var
R7054:7055 PLF.Equiv <> c1 var
R7062:7063 PLF.Equiv <> c2 var
R7009:7014 PLF.Equiv <> bequiv def
R7018:7022 PLF.Imp <> BTrue constr
R7016:7016 PLF.Equiv <> b var
R7273:7278 PLF.Equiv <> bequiv def
R7367:7374 PLF.Imp <> E_IfTrue constr
R7367:7374 PLF.Imp <> E_IfTrue constr
R7404:7409 PLF.Equiv <> bequiv def
prf 7542:7551 <> TEST_false
R7588:7593 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7594:7599 PLF.Equiv <> cequiv def
R7637:7638 PLF.Equiv <> c2 var
R7606:7610 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R7612:7617 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R7620:7625 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R7628:7630 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R7611:7611 PLF.Equiv <> b var
R7618:7619 PLF.Equiv <> c1 var
R7626:7627 PLF.Equiv <> c2 var
R7573:7578 PLF.Equiv <> bequiv def
R7582:7587 PLF.Imp <> BFalse constr
R7580:7580 PLF.Equiv <> b var
prf 7842:7857 <> swap_if_branches
R7879:7884 PLF.Equiv <> cequiv def
R7923:7927 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R7934:7939 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R7942:7947 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R7950:7952 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R7928:7931 PLF.Imp <> BNot constr
R7933:7933 PLF.Equiv <> b var
R7940:7941 PLF.Equiv <> e2 var
R7948:7949 PLF.Equiv <> e1 var
R7891:7895 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R7897:7902 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R7905:7910 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R7913:7915 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R7896:7896 PLF.Equiv <> b var
R7903:7904 PLF.Equiv <> e1 var
R7911:7912 PLF.Equiv <> e2 var
prf 8334:8344 <> WHILE_false
R8377:8382 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8383:8388 PLF.Equiv <> cequiv def
R8417:8420 PLF.Imp <> ::imp_scope:'SKIP' not
R8395:8400 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R8402:8405 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R8407:8410 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R8401:8401 PLF.Equiv <> b var
R8406:8406 PLF.Equiv <> c var
R8362:8367 PLF.Equiv <> bequiv def
R8371:8376 PLF.Imp <> BFalse constr
R8369:8369 PLF.Equiv <> b var
R8538:8543 PLF.Imp <> E_Skip constr
R8538:8543 PLF.Imp <> E_Skip constr
R8655:8666 PLF.Imp <> E_WhileFalse constr
R8655:8666 PLF.Imp <> E_WhileFalse constr
prf 10073:10090 <> WHILE_true_nonterm
R10129:10134 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10135:10137 Coq.Init.Logic <> ::type_scope:'~'_x not
R10168:10169 Coq.Init.Logic <> ::type_scope:'~'_x not
R10140:10143 PLF.Imp <> :::x_'=['_x_']=>'_x not
R10160:10164 PLF.Imp <> :::x_'=['_x_']=>'_x not
R10144:10149 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R10151:10154 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R10156:10159 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R10150:10150 PLF.Equiv <> b var
R10155:10155 PLF.Equiv <> c var
R10138:10139 PLF.Equiv <> st var
R10165:10167 PLF.Equiv <> st' var
R10115:10120 PLF.Equiv <> bequiv def
R10124:10128 PLF.Imp <> BTrue constr
R10122:10122 PLF.Equiv <> b var
R10251:10256 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R10258:10261 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R10263:10266 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R10251:10256 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R10258:10261 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R10263:10266 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R10546:10551 PLF.Equiv <> bequiv def
prf 11097:11106 <> WHILE_true
R11137:11143 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11144:11149 PLF.Equiv <> cequiv def
R11179:11184 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R11189:11192 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R11197:11200 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R11185:11188 Coq.Init.Datatypes <> true constr
R11193:11196 PLF.Imp <> ::imp_scope:'SKIP' not
R11156:11161 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R11163:11166 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R11168:11171 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R11162:11162 PLF.Equiv <> b var
R11167:11167 PLF.Equiv <> c var
R11124:11129 PLF.Equiv <> bequiv def
R11133:11136 Coq.Init.Datatypes <> true constr
R11131:11131 PLF.Equiv <> b var
prf 11470:11483 <> loop_unrolling
R11501:11506 PLF.Equiv <> cequiv def
R11536:11540 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R11542:11548 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R11570:11576 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R11581:11583 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R11541:11541 PLF.Equiv <> b var
R11550:11553 PLF.Imp <> ::imp_scope:x_';;'_x not
R11549:11549 PLF.Equiv <> c var
R11554:11559 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R11561:11564 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R11566:11569 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R11560:11560 PLF.Equiv <> b var
R11565:11565 PLF.Equiv <> c var
R11577:11580 PLF.Imp <> ::imp_scope:'SKIP' not
R11513:11518 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R11520:11523 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R11525:11528 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R11519:11519 PLF.Equiv <> b var
R11524:11524 PLF.Equiv <> c var
R11740:11748 PLF.Imp <> E_IfFalse constr
R11740:11748 PLF.Imp <> E_IfFalse constr
R11769:11774 PLF.Imp <> E_Skip constr
R11769:11774 PLF.Imp <> E_Skip constr
R11811:11818 PLF.Imp <> E_IfTrue constr
R11811:11818 PLF.Imp <> E_IfTrue constr
R11845:11849 PLF.Imp <> E_Seq constr
R11845:11849 PLF.Imp <> E_Seq constr
R11995:12005 PLF.Imp <> E_WhileTrue constr
R11995:12005 PLF.Imp <> E_WhileTrue constr
R12131:12142 PLF.Imp <> E_WhileFalse constr
R12131:12142 PLF.Imp <> E_WhileFalse constr
prf 12235:12243 <> seq_assoc
R12266:12271 PLF.Equiv <> cequiv def
R12291:12293 PLF.Imp <> ::imp_scope:x_';;'_x not
R12300:12300 PLF.Imp <> ::imp_scope:x_';;'_x not
R12289:12290 PLF.Equiv <> c1 var
R12296:12297 PLF.Imp <> ::imp_scope:x_';;'_x not
R12294:12295 PLF.Equiv <> c2 var
R12298:12299 PLF.Equiv <> c3 var
R12274:12274 PLF.Imp <> ::imp_scope:x_';;'_x not
R12281:12283 PLF.Imp <> ::imp_scope:x_';;'_x not
R12277:12278 PLF.Imp <> ::imp_scope:x_';;'_x not
R12275:12276 PLF.Equiv <> c1 var
R12279:12280 PLF.Equiv <> c2 var
R12284:12285 PLF.Equiv <> c3 var
prf 12567:12585 <> identity_assignment
R12601:12606 PLF.Equiv <> cequiv def
R12626:12629 PLF.Imp <> ::imp_scope:'SKIP' not
R12614:12618 PLF.Imp <> ::imp_scope:x_'::='_x not
R12613:12613 PLF.Equiv <> x var
R12619:12619 PLF.Equiv <> x var
R12712:12724 PLF.Maps <> t_update_same prfax
R12712:12724 PLF.Maps <> t_update_same prfax
R12712:12724 PLF.Maps <> t_update_same prfax
R12737:12742 PLF.Imp <> E_Skip constr
R12737:12742 PLF.Imp <> E_Skip constr
R12778:12781 PLF.Imp <> :::x_'=['_x_']=>'_x not
R12789:12794 PLF.Imp <> :::x_'=['_x_']=>'_x not
R12812:12812 PLF.Imp <> :::x_'=['_x_']=>'_x not
R12783:12787 PLF.Imp <> ::imp_scope:x_'::='_x not
R12796:12800 PLF.Maps <> :::x_'!->'_x_';'_x not
R12806:12808 PLF.Maps <> :::x_'!->'_x_';'_x not
R12778:12781 PLF.Imp <> :::x_'=['_x_']=>'_x not
R12789:12794 PLF.Imp <> :::x_'=['_x_']=>'_x not
R12812:12812 PLF.Imp <> :::x_'=['_x_']=>'_x not
R12783:12787 PLF.Imp <> ::imp_scope:x_'::='_x not
R12796:12800 PLF.Maps <> :::x_'!->'_x_';'_x not
R12806:12808 PLF.Maps <> :::x_'!->'_x_';'_x not
R12828:12832 PLF.Imp <> E_Ass constr
R12828:12832 PLF.Imp <> E_Ass constr
R12862:12874 PLF.Maps <> t_update_same prfax
R12862:12874 PLF.Maps <> t_update_same prfax
R12862:12874 PLF.Maps <> t_update_same prfax
prf 12981:12993 <> assign_aequiv
R13009:13014 Coq.Strings.String <> string ind
R13032:13037 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13038:13043 PLF.Equiv <> cequiv def
R13052:13056 PLF.Imp <> ::imp_scope:x_'::='_x not
R13051:13051 PLF.Equiv <> x var
R13057:13057 PLF.Equiv <> e var
R13045:13048 PLF.Imp <> ::imp_scope:'SKIP' not
R13022:13027 PLF.Equiv <> aequiv def
R13031:13031 PLF.Equiv <> e var
R13029:13029 PLF.Equiv <> x var
def 13695:13700 <> prog_a
R13704:13706 PLF.Imp <> com ind
R13714:13719 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R13729:13736 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R13748:13753 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R13720:13721 PLF.Imp <> ::imp_scope:'~'_x not
R13728:13728 PLF.Imp <> ::imp_scope:'~'_x not
R13723:13726 PLF.Imp <> ::imp_scope:x_'<='_x not
R13722:13722 PLF.Imp <> X def
R13738:13742 PLF.Imp <> ::imp_scope:x_'::='_x not
R13737:13737 PLF.Imp <> X def
R13744:13746 PLF.Imp <> ::imp_scope:x_'+'_x not
R13743:13743 PLF.Imp <> X def
def 13773:13778 <> prog_b
R13782:13784 PLF.Imp <> com ind
R13861:13865 PLF.Imp <> ::imp_scope:x_';;'_x not
R13792:13796 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R13802:13811 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R13837:13848 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R13856:13860 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R13798:13800 PLF.Imp <> ::imp_scope:x_'='_x not
R13797:13797 PLF.Imp <> X def
R13823:13829 PLF.Imp <> ::imp_scope:x_';;'_x not
R13813:13817 PLF.Imp <> ::imp_scope:x_'::='_x not
R13812:13812 PLF.Imp <> X def
R13819:13821 PLF.Imp <> ::imp_scope:x_'+'_x not
R13818:13818 PLF.Imp <> X def
R13831:13835 PLF.Imp <> ::imp_scope:x_'::='_x not
R13830:13830 PLF.Imp <> Y def
R13850:13854 PLF.Imp <> ::imp_scope:x_'::='_x not
R13849:13849 PLF.Imp <> Y def
R13877:13881 PLF.Imp <> ::imp_scope:x_';;'_x not
R13867:13871 PLF.Imp <> ::imp_scope:x_'::='_x not
R13866:13866 PLF.Imp <> X def
R13873:13875 PLF.Imp <> ::imp_scope:x_'-'_x not
R13872:13872 PLF.Imp <> X def
R13876:13876 PLF.Imp <> Y def
R13883:13887 PLF.Imp <> ::imp_scope:x_'::='_x not
R13882:13882 PLF.Imp <> Y def
def 13908:13913 <> prog_c
R13917:13919 PLF.Imp <> com ind
R13926:13929 PLF.Imp <> ::imp_scope:'SKIP' not
def 13948:13953 <> prog_d
R13957:13959 PLF.Imp <> com ind
R13967:13972 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R13981:13988 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R14006:14011 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R13973:13974 PLF.Imp <> ::imp_scope:'~'_x not
R13980:13980 PLF.Imp <> ::imp_scope:'~'_x not
R13976:13978 PLF.Imp <> ::imp_scope:x_'='_x not
R13975:13975 PLF.Imp <> X def
R13990:13994 PLF.Imp <> ::imp_scope:x_'::='_x not
R13989:13989 PLF.Imp <> X def
R13995:13995 PLF.Imp <> ::imp_scope:x_'+'_x not
R14001:14004 PLF.Imp <> ::imp_scope:x_'+'_x not
R13997:13999 PLF.Imp <> ::imp_scope:x_'*'_x not
R13996:13996 PLF.Imp <> X def
R14000:14000 PLF.Imp <> Y def
def 14031:14036 <> prog_e
R14040:14042 PLF.Imp <> com ind
R14051:14055 PLF.Imp <> ::imp_scope:x_'::='_x not
R14050:14050 PLF.Imp <> Y def
def 14076:14081 <> prog_f
R14085:14087 PLF.Imp <> com ind
R14106:14110 PLF.Imp <> ::imp_scope:x_';;'_x not
R14096:14100 PLF.Imp <> ::imp_scope:x_'::='_x not
R14095:14095 PLF.Imp <> Y def
R14102:14104 PLF.Imp <> ::imp_scope:x_'+'_x not
R14101:14101 PLF.Imp <> X def
R14111:14116 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R14125:14132 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R14144:14149 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R14117:14118 PLF.Imp <> ::imp_scope:'~'_x not
R14124:14124 PLF.Imp <> ::imp_scope:'~'_x not
R14120:14122 PLF.Imp <> ::imp_scope:x_'='_x not
R14119:14119 PLF.Imp <> X def
R14123:14123 PLF.Imp <> Y def
R14134:14138 PLF.Imp <> ::imp_scope:x_'::='_x not
R14133:14133 PLF.Imp <> Y def
R14140:14142 PLF.Imp <> ::imp_scope:x_'+'_x not
R14139:14139 PLF.Imp <> X def
def 14169:14174 <> prog_g
R14178:14180 PLF.Imp <> com ind
R14188:14193 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R14198:14205 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R14210:14215 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R14194:14197 Coq.Init.Datatypes <> true constr
R14206:14209 PLF.Imp <> ::imp_scope:'SKIP' not
def 14235:14240 <> prog_h
R14244:14246 PLF.Imp <> com ind
R14254:14259 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R14268:14275 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R14287:14292 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R14260:14261 PLF.Imp <> ::imp_scope:'~'_x not
R14267:14267 PLF.Imp <> ::imp_scope:'~'_x not
R14263:14265 PLF.Imp <> ::imp_scope:x_'='_x not
R14262:14262 PLF.Imp <> X def
R14266:14266 PLF.Imp <> X def
R14277:14281 PLF.Imp <> ::imp_scope:x_'::='_x not
R14276:14276 PLF.Imp <> X def
R14283:14285 PLF.Imp <> ::imp_scope:x_'+'_x not
R14282:14282 PLF.Imp <> X def
def 14312:14317 <> prog_i
R14321:14323 PLF.Imp <> com ind
R14331:14336 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R14345:14352 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R14364:14369 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R14337:14338 PLF.Imp <> ::imp_scope:'~'_x not
R14344:14344 PLF.Imp <> ::imp_scope:'~'_x not
R14340:14342 PLF.Imp <> ::imp_scope:x_'='_x not
R14339:14339 PLF.Imp <> X def
R14343:14343 PLF.Imp <> Y def
R14354:14358 PLF.Imp <> ::imp_scope:x_'::='_x not
R14353:14353 PLF.Imp <> X def
R14360:14362 PLF.Imp <> ::imp_scope:x_'+'_x not
R14359:14359 PLF.Imp <> Y def
def 14389:14401 <> equiv_classes
R14405:14408 Coq.Init.Datatypes <> list ind
R14411:14414 Coq.Init.Datatypes <> list ind
R14416:14418 PLF.Imp <> com ind
def 14540:14569 <> manual_grade_for_equiv_classes
R14573:14578 Coq.Init.Datatypes <> option ind
R14584:14584 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R14581:14583 Coq.Init.Datatypes <> nat ind
R14585:14590 Coq.Strings.String <> string ind
R14596:14599 Coq.Init.Datatypes <> None constr
prf 15143:15153 <> refl_aequiv
R15169:15172 PLF.Imp <> aexp ind
R15176:15181 PLF.Equiv <> aequiv def
R15185:15185 PLF.Equiv <> a var
R15183:15183 PLF.Equiv <> a var
prf 15236:15245 <> sym_aequiv
R15265:15268 PLF.Imp <> aexp ind
R15286:15289 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15290:15295 PLF.Equiv <> aequiv def
R15300:15301 PLF.Equiv <> a1 var
R15297:15298 PLF.Equiv <> a2 var
R15274:15279 PLF.Equiv <> aequiv def
R15284:15285 PLF.Equiv <> a2 var
R15281:15282 PLF.Equiv <> a1 var
prf 15372:15383 <> trans_aequiv
R15406:15409 PLF.Imp <> aexp ind
R15427:15430 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15443:15446 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15447:15452 PLF.Equiv <> aequiv def
R15457:15458 PLF.Equiv <> a3 var
R15454:15455 PLF.Equiv <> a1 var
R15431:15436 PLF.Equiv <> aequiv def
R15441:15442 PLF.Equiv <> a3 var
R15438:15439 PLF.Equiv <> a2 var
R15415:15420 PLF.Equiv <> aequiv def
R15425:15426 PLF.Equiv <> a2 var
R15422:15423 PLF.Equiv <> a1 var
R15477:15482 PLF.Equiv <> aequiv def
prf 15577:15587 <> refl_bequiv
R15603:15606 PLF.Imp <> bexp ind
R15610:15615 PLF.Equiv <> bequiv def
R15619:15619 PLF.Equiv <> b var
R15617:15617 PLF.Equiv <> b var
R15638:15643 PLF.Equiv <> bequiv def
prf 15685:15694 <> sym_bequiv
R15714:15717 PLF.Imp <> bexp ind
R15735:15738 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15739:15744 PLF.Equiv <> bequiv def
R15749:15750 PLF.Equiv <> b1 var
R15746:15747 PLF.Equiv <> b2 var
R15723:15728 PLF.Equiv <> bequiv def
R15733:15734 PLF.Equiv <> b2 var
R15730:15731 PLF.Equiv <> b1 var
R15769:15774 PLF.Equiv <> bequiv def
prf 15836:15847 <> trans_bequiv
R15870:15873 PLF.Imp <> bexp ind
R15891:15894 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15907:15910 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15911:15916 PLF.Equiv <> bequiv def
R15921:15922 PLF.Equiv <> b3 var
R15918:15919 PLF.Equiv <> b1 var
R15895:15900 PLF.Equiv <> bequiv def
R15905:15906 PLF.Equiv <> b3 var
R15902:15903 PLF.Equiv <> b2 var
R15879:15884 PLF.Equiv <> bequiv def
R15889:15890 PLF.Equiv <> b2 var
R15886:15887 PLF.Equiv <> b1 var
R15941:15946 PLF.Equiv <> bequiv def
prf 16041:16051 <> refl_cequiv
R16067:16069 PLF.Imp <> com ind
R16073:16078 PLF.Equiv <> cequiv def
R16082:16082 PLF.Equiv <> c var
R16080:16080 PLF.Equiv <> c var
R16101:16106 PLF.Equiv <> cequiv def
R16132:16139 Coq.Init.Logic <> iff_refl thm
R16132:16139 Coq.Init.Logic <> iff_refl thm
prf 16155:16164 <> sym_cequiv
R16184:16186 PLF.Imp <> com ind
R16204:16207 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16208:16213 PLF.Equiv <> cequiv def
R16218:16219 PLF.Equiv <> c1 var
R16215:16216 PLF.Equiv <> c2 var
R16192:16197 PLF.Equiv <> cequiv def
R16202:16203 PLF.Equiv <> c2 var
R16199:16200 PLF.Equiv <> c1 var
R16238:16243 PLF.Equiv <> cequiv def
R16295:16299 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R16281:16284 PLF.Imp <> :::x_'=['_x_']=>'_x not
R16287:16291 PLF.Imp <> :::x_'=['_x_']=>'_x not
R16302:16305 PLF.Imp <> :::x_'=['_x_']=>'_x not
R16308:16312 PLF.Imp <> :::x_'=['_x_']=>'_x not
R16295:16299 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R16281:16284 PLF.Imp <> :::x_'=['_x_']=>'_x not
R16287:16291 PLF.Imp <> :::x_'=['_x_']=>'_x not
R16302:16305 PLF.Imp <> :::x_'=['_x_']=>'_x not
R16308:16312 PLF.Imp <> :::x_'=['_x_']=>'_x not
R16373:16379 Coq.Init.Logic <> iff_sym thm
R16373:16379 Coq.Init.Logic <> iff_sym thm
prf 16406:16414 <> iff_trans
R16446:16446 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16456:16460 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16461:16461 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16471:16476 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16486:16486 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16479:16483 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R16477:16478 PLF.Equiv <> P1 var
R16484:16485 PLF.Equiv <> P3 var
R16464:16468 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R16462:16463 PLF.Equiv <> P2 var
R16469:16470 PLF.Equiv <> P3 var
R16449:16453 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R16447:16448 PLF.Equiv <> P1 var
R16454:16455 PLF.Equiv <> P2 var
prf 16652:16663 <> trans_cequiv
R16686:16688 PLF.Imp <> com ind
R16706:16709 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16722:16725 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16726:16731 PLF.Equiv <> cequiv def
R16736:16737 PLF.Equiv <> c3 var
R16733:16734 PLF.Equiv <> c1 var
R16710:16715 PLF.Equiv <> cequiv def
R16720:16721 PLF.Equiv <> c3 var
R16717:16718 PLF.Equiv <> c2 var
R16694:16699 PLF.Equiv <> cequiv def
R16704:16705 PLF.Equiv <> c2 var
R16701:16702 PLF.Equiv <> c1 var
R16756:16761 PLF.Equiv <> cequiv def
R16822:16825 PLF.Imp <> :::x_'=['_x_']=>'_x not
R16828:16832 PLF.Imp <> :::x_'=['_x_']=>'_x not
R16804:16812 PLF.Equiv <> iff_trans thm
R16822:16825 PLF.Imp <> :::x_'=['_x_']=>'_x not
R16828:16832 PLF.Imp <> :::x_'=['_x_']=>'_x not
R16804:16812 PLF.Equiv <> iff_trans thm
prf 18232:18246 <> CAss_congruence
R18282:18287 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18288:18293 PLF.Equiv <> cequiv def
R18308:18311 PLF.Imp <> CAss constr
R18315:18317 PLF.Equiv <> a1' var
R18313:18313 PLF.Equiv <> x var
R18296:18299 PLF.Imp <> CAss constr
R18303:18304 PLF.Equiv <> a1 var
R18301:18301 PLF.Equiv <> x var
R18269:18274 PLF.Equiv <> aequiv def
R18279:18281 PLF.Equiv <> a1' var
R18276:18277 PLF.Equiv <> a1 var
R18430:18434 PLF.Imp <> E_Ass constr
R18430:18434 PLF.Imp <> E_Ass constr
R18516:18520 PLF.Imp <> E_Ass constr
R18516:18520 PLF.Imp <> E_Ass constr
prf 20400:20416 <> CWhile_congruence
R20457:20460 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20474:20479 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20480:20485 PLF.Equiv <> cequiv def
R20509:20514 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R20518:20521 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R20525:20528 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R20515:20517 PLF.Equiv <> b1' var
R20522:20524 PLF.Equiv <> c1' var
R20488:20493 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R20496:20499 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R20502:20505 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R20494:20495 PLF.Equiv <> b1 var
R20500:20501 PLF.Equiv <> c1 var
R20461:20466 PLF.Equiv <> cequiv def
R20471:20473 PLF.Equiv <> c1' var
R20468:20469 PLF.Equiv <> c1 var
R20444:20449 PLF.Equiv <> bequiv def
R20454:20456 PLF.Equiv <> b1' var
R20451:20452 PLF.Equiv <> b1 var
R20572:20577 PLF.Equiv <> bequiv def
R20579:20584 PLF.Equiv <> cequiv def
R20676:20681 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R20684:20687 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R20690:20693 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R20676:20681 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R20684:20687 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R20690:20693 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R20815:20826 PLF.Imp <> E_WhileFalse constr
R20815:20826 PLF.Imp <> E_WhileFalse constr
R20891:20901 PLF.Imp <> E_WhileTrue constr
R20891:20901 PLF.Imp <> E_WhileTrue constr
R21150:21155 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R21159:21162 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R21166:21169 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R21150:21155 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R21159:21162 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R21166:21169 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R21294:21305 PLF.Imp <> E_WhileFalse constr
R21294:21305 PLF.Imp <> E_WhileFalse constr
R21370:21380 PLF.Imp <> E_WhileTrue constr
R21370:21380 PLF.Imp <> E_WhileTrue constr
prf 21686:21700 <> CSeq_congruence
R21741:21744 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21758:21763 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21764:21769 PLF.Equiv <> cequiv def
R21784:21785 PLF.Imp <> ::imp_scope:x_';;'_x not
R21781:21783 PLF.Equiv <> c1' var
R21786:21788 PLF.Equiv <> c2' var
R21774:21775 PLF.Imp <> ::imp_scope:x_';;'_x not
R21772:21773 PLF.Equiv <> c1 var
R21776:21777 PLF.Equiv <> c2 var
R21745:21750 PLF.Equiv <> cequiv def
R21755:21757 PLF.Equiv <> c2' var
R21752:21753 PLF.Equiv <> c2 var
R21728:21733 PLF.Equiv <> cequiv def
R21738:21740 PLF.Equiv <> c1' var
R21735:21736 PLF.Equiv <> c1 var
prf 21907:21920 <> CIf_congruence
R21964:21967 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21981:21984 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21998:22003 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22004:22009 PLF.Equiv <> cequiv def
R22049:22053 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R22056:22061 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R22065:22070 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R22074:22076 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R22054:22055 PLF.Equiv <> b' var
R22062:22064 PLF.Equiv <> c1' var
R22071:22073 PLF.Equiv <> c2' var
R22012:22016 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R22018:22023 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R22026:22031 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R22034:22036 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R22017:22017 PLF.Equiv <> b var
R22024:22025 PLF.Equiv <> c1 var
R22032:22033 PLF.Equiv <> c2 var
R21985:21990 PLF.Equiv <> cequiv def
R21995:21997 PLF.Equiv <> c2' var
R21992:21993 PLF.Equiv <> c2 var
R21968:21973 PLF.Equiv <> cequiv def
R21978:21980 PLF.Equiv <> c1' var
R21975:21976 PLF.Equiv <> c1 var
R21953:21958 PLF.Equiv <> bequiv def
R21962:21963 PLF.Equiv <> b' var
R21960:21960 PLF.Equiv <> b var
def 22231:22248 <> congruence_example
R22253:22258 PLF.Equiv <> cequiv def
R22405:22412 PLF.Imp <> ::imp_scope:x_';;'_x not
R22399:22403 PLF.Imp <> ::imp_scope:x_'::='_x not
R22398:22398 PLF.Imp <> X def
R22413:22417 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R22423:22440 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R22452:22495 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R22504:22511 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R22419:22421 PLF.Imp <> ::imp_scope:x_'='_x not
R22418:22418 PLF.Imp <> X def
R22442:22446 PLF.Imp <> ::imp_scope:x_'::='_x not
R22441:22441 PLF.Imp <> Y def
R22448:22450 PLF.Imp <> ::imp_scope:x_'-'_x not
R22447:22447 PLF.Imp <> X def
R22451:22451 PLF.Imp <> X def
R22497:22501 PLF.Imp <> ::imp_scope:x_'::='_x not
R22496:22496 PLF.Imp <> Y def
R22293:22300 PLF.Imp <> ::imp_scope:x_';;'_x not
R22287:22291 PLF.Imp <> ::imp_scope:x_'::='_x not
R22286:22286 PLF.Imp <> X def
R22301:22305 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R22311:22328 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R22336:22353 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R22362:22369 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R22307:22309 PLF.Imp <> ::imp_scope:x_'='_x not
R22306:22306 PLF.Imp <> X def
R22330:22334 PLF.Imp <> ::imp_scope:x_'::='_x not
R22329:22329 PLF.Imp <> Y def
R22355:22359 PLF.Imp <> ::imp_scope:x_'::='_x not
R22354:22354 PLF.Imp <> Y def
R22530:22544 PLF.Equiv <> CSeq_congruence prfax
R22530:22544 PLF.Equiv <> CSeq_congruence prfax
R22557:22567 PLF.Equiv <> refl_cequiv thm
R22557:22567 PLF.Equiv <> refl_cequiv thm
R22580:22593 PLF.Equiv <> CIf_congruence prfax
R22580:22593 PLF.Equiv <> CIf_congruence prfax
R22608:22618 PLF.Equiv <> refl_bequiv thm
R22608:22618 PLF.Equiv <> refl_bequiv thm
R22633:22647 PLF.Equiv <> CAss_congruence thm
R22633:22647 PLF.Equiv <> CAss_congruence thm
R22657:22662 PLF.Equiv <> aequiv def
R22696:22705 Coq.Arith.Minus <> minus_diag syndef
R22696:22705 Coq.Arith.Minus <> minus_diag syndef
R22720:22730 PLF.Equiv <> refl_cequiv thm
R22720:22730 PLF.Equiv <> refl_cequiv thm
def 23488:23499 <> atrans_sound
R23515:23518 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23519:23522 PLF.Imp <> aexp ind
R23511:23514 PLF.Imp <> aexp ind
R23549:23552 PLF.Imp <> aexp ind
R23560:23565 PLF.Equiv <> aequiv def
R23570:23575 PLF.Equiv <> atrans var
R23577:23577 PLF.Equiv <> a var
R23567:23567 PLF.Equiv <> a var
def 23593:23604 <> btrans_sound
R23620:23623 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23624:23627 PLF.Imp <> bexp ind
R23616:23619 PLF.Imp <> bexp ind
R23654:23657 PLF.Imp <> bexp ind
R23665:23670 PLF.Equiv <> bequiv def
R23675:23680 PLF.Equiv <> btrans var
R23682:23682 PLF.Equiv <> b var
R23672:23672 PLF.Equiv <> b var
def 23698:23709 <> ctrans_sound
R23724:23727 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23728:23730 PLF.Imp <> com ind
R23721:23723 PLF.Imp <> com ind
R23757:23759 PLF.Imp <> com ind
R23767:23772 PLF.Equiv <> cequiv def
R23777:23782 PLF.Equiv <> ctrans var
R23784:23784 PLF.Equiv <> c var
R23774:23774 PLF.Equiv <> c var
def 24110:24128 <> fold_constants_aexp
R24135:24138 PLF.Imp <> aexp ind
R24143:24146 PLF.Imp <> aexp ind
R24159:24159 PLF.Equiv <> a var
R24170:24173 PLF.Imp <> ANum constr
R24186:24189 PLF.Imp <> ANum constr
R24197:24199 PLF.Imp <> AId constr
R24213:24215 PLF.Imp <> AId constr
R24223:24227 PLF.Imp <> APlus constr
R24249:24249 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24272:24285 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24308:24308 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24250:24268 PLF.Equiv <> fold_constants_aexp def
R24286:24304 PLF.Equiv <> fold_constants_aexp def
R24325:24325 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24333:24334 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24342:24342 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24326:24329 PLF.Imp <> ANum constr
R24335:24338 PLF.Imp <> ANum constr
R24347:24350 PLF.Imp <> ANum constr
R24355:24357 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R24368:24368 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24372:24373 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24377:24377 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24382:24386 PLF.Imp <> APlus constr
R24408:24413 PLF.Imp <> AMinus constr
R24434:24434 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24457:24470 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24493:24493 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24435:24453 PLF.Equiv <> fold_constants_aexp def
R24471:24489 PLF.Equiv <> fold_constants_aexp def
R24510:24510 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24518:24519 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24527:24527 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24511:24514 PLF.Imp <> ANum constr
R24520:24523 PLF.Imp <> ANum constr
R24532:24535 PLF.Imp <> ANum constr
R24540:24542 Coq.Init.Peano <> ::nat_scope:x_'-'_x not
R24553:24553 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24557:24558 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24562:24562 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24567:24572 PLF.Imp <> AMinus constr
R24594:24598 PLF.Imp <> AMult constr
R24620:24620 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24643:24656 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24679:24679 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24621:24639 PLF.Equiv <> fold_constants_aexp def
R24657:24675 PLF.Equiv <> fold_constants_aexp def
R24696:24696 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24704:24705 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24713:24713 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24697:24700 PLF.Imp <> ANum constr
R24706:24709 PLF.Imp <> ANum constr
R24718:24721 PLF.Imp <> ANum constr
R24726:24728 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R24739:24739 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24743:24744 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24748:24748 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24753:24757 PLF.Imp <> AMult constr
def 24791:24803 <> fold_aexp_ex1
R24844:24849 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24811:24829 PLF.Equiv <> fold_constants_aexp def
R24832:24832 PLF.Imp <> ::imp_scope:x_'*'_x not
R24838:24841 PLF.Imp <> ::imp_scope:x_'*'_x not
R24834:24836 PLF.Imp <> ::imp_scope:x_'+'_x not
R24842:24842 PLF.Imp <> X def
R24852:24854 PLF.Imp <> ::imp_scope:x_'*'_x not
R24855:24855 PLF.Imp <> X def
def 25202:25214 <> fold_aexp_ex2
R25263:25265 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25220:25238 PLF.Equiv <> fold_constants_aexp def
R25242:25245 PLF.Imp <> ::imp_scope:x_'-'_x not
R25257:25257 PLF.Imp <> ::imp_scope:x_'-'_x not
R25241:25241 PLF.Imp <> X def
R25246:25246 PLF.Imp <> ::imp_scope:x_'+'_x not
R25252:25255 PLF.Imp <> ::imp_scope:x_'+'_x not
R25248:25250 PLF.Imp <> ::imp_scope:x_'*'_x not
R25256:25256 PLF.Imp <> Y def
R25268:25271 PLF.Imp <> ::imp_scope:x_'-'_x not
R25277:25277 PLF.Imp <> ::imp_scope:x_'-'_x not
R25267:25267 PLF.Imp <> X def
R25273:25275 PLF.Imp <> ::imp_scope:x_'+'_x not
R25276:25276 PLF.Imp <> Y def
def 25502:25520 <> fold_constants_bexp
R25527:25530 PLF.Imp <> bexp ind
R25535:25538 PLF.Imp <> bexp ind
R25551:25551 PLF.Equiv <> b var
R25562:25566 PLF.Imp <> BTrue constr
R25578:25582 PLF.Imp <> BTrue constr
R25588:25593 PLF.Imp <> BFalse constr
R25604:25609 PLF.Imp <> BFalse constr
R25615:25617 PLF.Imp <> BEq constr
R25641:25641 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25664:25679 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25702:25702 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25642:25660 PLF.Equiv <> fold_constants_aexp def
R25680:25698 PLF.Equiv <> fold_constants_aexp def
R25717:25717 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25725:25726 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25734:25734 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25718:25721 PLF.Imp <> ANum constr
R25727:25730 PLF.Imp <> ANum constr
R25754:25757 Coq.Arith.PeanoNat <> ::nat_scope:x_'=?'_x not
R25777:25782 PLF.Imp <> BFalse constr
R25766:25770 PLF.Imp <> BTrue constr
R25792:25792 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25796:25797 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25801:25801 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25816:25818 PLF.Imp <> BEq constr
R25842:25844 PLF.Imp <> BLe constr
R25868:25868 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25891:25906 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25929:25929 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25869:25887 PLF.Equiv <> fold_constants_aexp def
R25907:25925 PLF.Equiv <> fold_constants_aexp def
R25944:25944 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25952:25953 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25961:25961 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25945:25948 PLF.Imp <> ANum constr
R25954:25957 PLF.Imp <> ANum constr
R25981:25985 Coq.Arith.PeanoNat <> ::nat_scope:x_'<=?'_x not
R26005:26010 PLF.Imp <> BFalse constr
R25994:25998 PLF.Imp <> BTrue constr
R26020:26020 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26024:26025 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26029:26029 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26044:26046 PLF.Imp <> BLe constr
R26070:26073 PLF.Imp <> BNot constr
R26095:26113 PLF.Equiv <> fold_constants_bexp def
R26132:26136 PLF.Imp <> BTrue constr
R26141:26146 PLF.Imp <> BFalse constr
R26156:26161 PLF.Imp <> BFalse constr
R26166:26170 PLF.Imp <> BTrue constr
R26187:26190 PLF.Imp <> BNot constr
R26210:26213 PLF.Imp <> BAnd constr
R26237:26237 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26260:26275 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26298:26298 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26238:26256 PLF.Equiv <> fold_constants_bexp def
R26276:26294 PLF.Equiv <> fold_constants_bexp def
R26313:26313 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26319:26320 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26326:26326 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26314:26318 PLF.Imp <> BTrue constr
R26321:26325 PLF.Imp <> BTrue constr
R26331:26335 PLF.Imp <> BTrue constr
R26345:26345 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26351:26352 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26359:26359 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26346:26350 PLF.Imp <> BTrue constr
R26353:26358 PLF.Imp <> BFalse constr
R26364:26369 PLF.Imp <> BFalse constr
R26379:26379 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26386:26387 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26393:26393 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26380:26385 PLF.Imp <> BFalse constr
R26388:26392 PLF.Imp <> BTrue constr
R26398:26403 PLF.Imp <> BFalse constr
R26413:26413 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26420:26421 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26428:26428 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26414:26419 PLF.Imp <> BFalse constr
R26422:26427 PLF.Imp <> BFalse constr
R26433:26438 PLF.Imp <> BFalse constr
R26448:26448 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26452:26453 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26457:26457 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26462:26465 PLF.Imp <> BAnd constr
def 26501:26513 <> fold_bexp_ex1
R26569:26574 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26519:26537 PLF.Equiv <> fold_constants_bexp def
R26544:26547 PLF.Imp <> ::imp_scope:x_'&&'_x not
R26540:26543 Coq.Init.Datatypes <> true constr
R26548:26549 PLF.Imp <> ::imp_scope:'~'_x not
R26563:26563 PLF.Imp <> ::imp_scope:'~'_x not
R26555:26558 PLF.Imp <> ::imp_scope:x_'&&'_x not
R26550:26554 Coq.Init.Datatypes <> false constr
R26559:26562 Coq.Init.Datatypes <> true constr
R26575:26578 Coq.Init.Datatypes <> true constr
def 26615:26627 <> fold_bexp_ex2
R26689:26693 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26633:26651 PLF.Equiv <> fold_constants_bexp def
R26654:26654 PLF.Imp <> ::imp_scope:x_'&&'_x not
R26660:26665 PLF.Imp <> ::imp_scope:x_'&&'_x not
R26683:26683 PLF.Imp <> ::imp_scope:x_'&&'_x not
R26656:26658 PLF.Imp <> ::imp_scope:x_'='_x not
R26655:26655 PLF.Imp <> X def
R26659:26659 PLF.Imp <> Y def
R26667:26670 PLF.Imp <> ::imp_scope:x_'='_x not
R26682:26682 PLF.Imp <> ::imp_scope:x_'='_x not
R26672:26675 PLF.Imp <> ::imp_scope:x_'-'_x not
R26681:26681 PLF.Imp <> ::imp_scope:x_'-'_x not
R26677:26679 PLF.Imp <> ::imp_scope:x_'+'_x not
R26695:26695 PLF.Imp <> ::imp_scope:x_'&&'_x not
R26701:26705 PLF.Imp <> ::imp_scope:x_'&&'_x not
R26697:26699 PLF.Imp <> ::imp_scope:x_'='_x not
R26696:26696 PLF.Imp <> X def
R26700:26700 PLF.Imp <> Y def
R26706:26709 Coq.Init.Datatypes <> true constr
def 26884:26901 <> fold_constants_com
R26908:26910 PLF.Imp <> com ind
R26915:26917 PLF.Imp <> com ind
R26930:26930 PLF.Equiv <> c var
R26941:26944 PLF.Imp <> ::imp_scope:'SKIP' not
R26960:26963 PLF.Imp <> ::imp_scope:'SKIP' not
R26970:26974 PLF.Imp <> ::imp_scope:x_'::='_x not
R26989:26994 PLF.Imp <> ::imp_scope:x_'::='_x not
R27016:27016 PLF.Imp <> ::imp_scope:x_'::='_x not
R26995:27013 PLF.Equiv <> fold_constants_aexp def
R27024:27027 PLF.Imp <> ::imp_scope:x_';;'_x not
R27041:27041 PLF.Imp <> ::imp_scope:x_';;'_x not
R27063:27068 PLF.Imp <> ::imp_scope:x_';;'_x not
R27090:27090 PLF.Imp <> ::imp_scope:x_';;'_x not
R27042:27059 PLF.Equiv <> fold_constants_com def
R27069:27086 PLF.Equiv <> fold_constants_com def
R27096:27100 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R27102:27107 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R27110:27115 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R27118:27120 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R27137:27155 PLF.Equiv <> fold_constants_bexp def
R27172:27176 PLF.Imp <> BTrue constr
R27182:27199 PLF.Equiv <> fold_constants_com def
R27212:27217 PLF.Imp <> BFalse constr
R27222:27239 PLF.Equiv <> fold_constants_com def
R27258:27262 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R27265:27270 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R27292:27318 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R27340:27342 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R27271:27288 PLF.Equiv <> fold_constants_com def
R27319:27336 PLF.Equiv <> fold_constants_com def
R27358:27363 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R27365:27368 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R27370:27373 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R27390:27408 PLF.Equiv <> fold_constants_bexp def
R27425:27429 PLF.Imp <> BTrue constr
R27434:27439 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R27445:27448 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R27453:27456 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R27440:27444 PLF.Imp <> BTrue constr
R27449:27452 PLF.Imp <> ::imp_scope:'SKIP' not
R27466:27471 PLF.Imp <> BFalse constr
R27476:27479 PLF.Imp <> ::imp_scope:'SKIP' not
R27495:27500 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R27503:27507 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R27528:27532 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R27508:27525 PLF.Equiv <> fold_constants_com def
R27527:27527 PLF.Equiv <> c var
def 27577:27588 <> fold_com_ex1
R27854:27892 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27594:27611 PLF.Equiv <> fold_constants_com def
R27657:27664 PLF.Imp <> ::imp_scope:x_';;'_x not
R27647:27651 PLF.Imp <> ::imp_scope:x_'::='_x not
R27646:27646 PLF.Imp <> X def
R27653:27655 PLF.Imp <> ::imp_scope:x_'+'_x not
R27676:27683 PLF.Imp <> ::imp_scope:x_';;'_x not
R27666:27670 PLF.Imp <> ::imp_scope:x_'::='_x not
R27665:27665 PLF.Imp <> Y def
R27672:27674 PLF.Imp <> ::imp_scope:x_'-'_x not
R27671:27671 PLF.Imp <> X def
R27737:27744 PLF.Imp <> ::imp_scope:x_';;'_x not
R27684:27688 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R27706:27711 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R27716:27726 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R27734:27736 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R27689:27689 PLF.Imp <> ::imp_scope:x_'='_x not
R27695:27699 PLF.Imp <> ::imp_scope:x_'='_x not
R27705:27705 PLF.Imp <> ::imp_scope:x_'='_x not
R27691:27693 PLF.Imp <> ::imp_scope:x_'-'_x not
R27690:27690 PLF.Imp <> X def
R27694:27694 PLF.Imp <> Y def
R27701:27703 PLF.Imp <> ::imp_scope:x_'+'_x not
R27712:27715 PLF.Imp <> ::imp_scope:'SKIP' not
R27728:27732 PLF.Imp <> ::imp_scope:x_'::='_x not
R27727:27727 PLF.Imp <> Y def
R27799:27806 PLF.Imp <> ::imp_scope:x_';;'_x not
R27745:27749 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R27768:27773 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R27781:27791 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R27796:27798 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R27751:27755 PLF.Imp <> ::imp_scope:x_'<='_x not
R27767:27767 PLF.Imp <> ::imp_scope:x_'<='_x not
R27757:27760 PLF.Imp <> ::imp_scope:x_'-'_x not
R27766:27766 PLF.Imp <> ::imp_scope:x_'-'_x not
R27762:27764 PLF.Imp <> ::imp_scope:x_'+'_x not
R27775:27779 PLF.Imp <> ::imp_scope:x_'::='_x not
R27774:27774 PLF.Imp <> Y def
R27792:27795 PLF.Imp <> ::imp_scope:'SKIP' not
R27807:27812 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R27818:27828 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R27840:27848 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R27814:27816 PLF.Imp <> ::imp_scope:x_'='_x not
R27813:27813 PLF.Imp <> Y def
R27830:27834 PLF.Imp <> ::imp_scope:x_'::='_x not
R27829:27829 PLF.Imp <> X def
R27836:27838 PLF.Imp <> ::imp_scope:x_'+'_x not
R27835:27835 PLF.Imp <> X def
R27901:27908 PLF.Imp <> ::imp_scope:x_';;'_x not
R27895:27899 PLF.Imp <> ::imp_scope:x_'::='_x not
R27894:27894 PLF.Imp <> X def
R27920:27927 PLF.Imp <> ::imp_scope:x_';;'_x not
R27910:27914 PLF.Imp <> ::imp_scope:x_'::='_x not
R27909:27909 PLF.Imp <> Y def
R27916:27918 PLF.Imp <> ::imp_scope:x_'-'_x not
R27915:27915 PLF.Imp <> X def
R27976:27983 PLF.Imp <> ::imp_scope:x_';;'_x not
R27928:27932 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R27944:27949 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R27954:27965 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R27973:27975 PLF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R27933:27933 PLF.Imp <> ::imp_scope:x_'='_x not
R27939:27942 PLF.Imp <> ::imp_scope:x_'='_x not
R27935:27937 PLF.Imp <> ::imp_scope:x_'-'_x not
R27934:27934 PLF.Imp <> X def
R27938:27938 PLF.Imp <> Y def
R27950:27953 PLF.Imp <> ::imp_scope:'SKIP' not
R27967:27971 PLF.Imp <> ::imp_scope:x_'::='_x not
R27966:27966 PLF.Imp <> Y def
R27991:27998 PLF.Imp <> ::imp_scope:x_';;'_x not
R27985:27989 PLF.Imp <> ::imp_scope:x_'::='_x not
R27984:27984 PLF.Imp <> Y def
R27999:28004 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R28010:28020 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R28032:28040 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R28006:28008 PLF.Imp <> ::imp_scope:x_'='_x not
R28005:28005 PLF.Imp <> Y def
R28022:28026 PLF.Imp <> ::imp_scope:x_'::='_x not
R28021:28021 PLF.Imp <> X def
R28028:28030 PLF.Imp <> ::imp_scope:x_'+'_x not
R28027:28027 PLF.Imp <> X def
prf 28309:28333 <> fold_constants_aexp_sound
R28339:28350 PLF.Equiv <> atrans_sound def
R28352:28370 PLF.Equiv <> fold_constants_aexp def
R28389:28400 PLF.Equiv <> atrans_sound def
R28420:28425 PLF.Equiv <> aequiv def
R28834:28852 PLF.Equiv <> fold_constants_aexp def
R28878:28896 PLF.Equiv <> fold_constants_aexp def
R28834:28852 PLF.Equiv <> fold_constants_aexp def
R28878:28896 PLF.Equiv <> fold_constants_aexp def
R28878:28896 PLF.Equiv <> fold_constants_aexp def
R28878:28896 PLF.Equiv <> fold_constants_aexp def
R28878:28896 PLF.Equiv <> fold_constants_aexp def
R28878:28896 PLF.Equiv <> fold_constants_aexp def
R28834:28852 PLF.Equiv <> fold_constants_aexp def
R28878:28896 PLF.Equiv <> fold_constants_aexp def
R28878:28896 PLF.Equiv <> fold_constants_aexp def
R28878:28896 PLF.Equiv <> fold_constants_aexp def
R28878:28896 PLF.Equiv <> fold_constants_aexp def
R28878:28896 PLF.Equiv <> fold_constants_aexp def
R28834:28852 PLF.Equiv <> fold_constants_aexp def
R28878:28896 PLF.Equiv <> fold_constants_aexp def
R28878:28896 PLF.Equiv <> fold_constants_aexp def
R28878:28896 PLF.Equiv <> fold_constants_aexp def
R28878:28896 PLF.Equiv <> fold_constants_aexp def
R28878:28896 PLF.Equiv <> fold_constants_aexp def
prf 31791:31815 <> fold_constants_bexp_sound
R31820:31831 PLF.Equiv <> btrans_sound def
R31833:31851 PLF.Equiv <> fold_constants_bexp def
R31870:31881 PLF.Equiv <> btrans_sound def
R31901:31906 PLF.Equiv <> bequiv def
R32348:32366 PLF.Equiv <> fold_constants_aexp def
R32348:32366 PLF.Equiv <> fold_constants_aexp def
R32405:32423 PLF.Equiv <> fold_constants_aexp def
R32405:32423 PLF.Equiv <> fold_constants_aexp def
R32461:32465 PLF.Imp <> aeval def
R32480:32484 PLF.Imp <> aeval def
R32527:32551 PLF.Equiv <> fold_constants_aexp_sound thm
R32461:32465 PLF.Imp <> aeval def
R32480:32484 PLF.Imp <> aeval def
R32527:32551 PLF.Equiv <> fold_constants_aexp_sound thm
R32527:32551 PLF.Equiv <> fold_constants_aexp_sound thm
R32581:32585 PLF.Imp <> aeval def
R32600:32604 PLF.Imp <> aeval def
R32647:32671 PLF.Equiv <> fold_constants_aexp_sound thm
R32581:32585 PLF.Imp <> aeval def
R32600:32604 PLF.Imp <> aeval def
R32647:32671 PLF.Equiv <> fold_constants_aexp_sound thm
R32647:32671 PLF.Equiv <> fold_constants_aexp_sound thm
R32859:32862 Coq.Arith.PeanoNat <> ::nat_scope:x_'=?'_x not
R32859:32862 Coq.Arith.PeanoNat <> ::nat_scope:x_'=?'_x not
R32961:32979 PLF.Equiv <> fold_constants_bexp def
R32961:32979 PLF.Equiv <> fold_constants_bexp def
R33088:33106 PLF.Equiv <> fold_constants_bexp def
R33088:33106 PLF.Equiv <> fold_constants_bexp def
R33145:33163 PLF.Equiv <> fold_constants_bexp def
R33145:33163 PLF.Equiv <> fold_constants_bexp def
prf 33438:33461 <> fold_constants_com_sound
R33467:33478 PLF.Equiv <> ctrans_sound def
R33480:33497 PLF.Equiv <> fold_constants_com def
R33516:33527 PLF.Equiv <> ctrans_sound def
R33583:33593 PLF.Equiv <> refl_cequiv thm
R33583:33593 PLF.Equiv <> refl_cequiv thm
R33616:33630 PLF.Equiv <> CAss_congruence thm
R33616:33630 PLF.Equiv <> CAss_congruence thm
R33653:33677 PLF.Equiv <> fold_constants_aexp_sound thm
R33653:33677 PLF.Equiv <> fold_constants_aexp_sound thm
R33699:33713 PLF.Equiv <> CSeq_congruence prfax
R33699:33713 PLF.Equiv <> CSeq_congruence prfax
R33755:33760 PLF.Equiv <> bequiv def
R33765:33783 PLF.Equiv <> fold_constants_bexp def
R33755:33760 PLF.Equiv <> bequiv def
R33765:33783 PLF.Equiv <> fold_constants_bexp def
R33804:33828 PLF.Equiv <> fold_constants_bexp_sound prfax
R33804:33828 PLF.Equiv <> fold_constants_bexp_sound prfax
R33847:33865 PLF.Equiv <> fold_constants_bexp def
R33897:33910 PLF.Equiv <> CIf_congruence prfax
R33847:33865 PLF.Equiv <> fold_constants_bexp def
R33897:33910 PLF.Equiv <> CIf_congruence prfax
R33897:33910 PLF.Equiv <> CIf_congruence prfax
R33897:33910 PLF.Equiv <> CIf_congruence prfax
R33897:33910 PLF.Equiv <> CIf_congruence prfax
R33897:33910 PLF.Equiv <> CIf_congruence prfax
R33897:33910 PLF.Equiv <> CIf_congruence prfax
R34122:34133 PLF.Equiv <> trans_cequiv thm
R34122:34133 PLF.Equiv <> trans_cequiv thm
R34172:34180 PLF.Equiv <> TEST_true thm
R34172:34180 PLF.Equiv <> TEST_true thm
R34234:34245 PLF.Equiv <> trans_cequiv thm
R34234:34245 PLF.Equiv <> trans_cequiv thm
R34284:34293 PLF.Equiv <> TEST_false prfax
R34284:34293 PLF.Equiv <> TEST_false prfax
def 36776:36785 <> subst_aexp
R36792:36797 Coq.Strings.String <> string ind
R36805:36808 PLF.Imp <> aexp ind
R36816:36819 PLF.Imp <> aexp ind
R36824:36827 PLF.Imp <> aexp ind
R36840:36840 PLF.Equiv <> a var
R36851:36854 PLF.Imp <> ANum constr
R36873:36876 PLF.Imp <> ANum constr
R36884:36886 PLF.Imp <> AId constr
R36909:36918 PLF.Maps <> eqb_string def
R36920:36920 PLF.Equiv <> x var
R36937:36939 PLF.Imp <> AId constr
R36930:36930 PLF.Equiv <> u var
R36948:36952 PLF.Imp <> APlus constr
R36970:36974 PLF.Imp <> APlus constr
R36997:37006 PLF.Equiv <> subst_aexp def
R37010:37010 PLF.Equiv <> u var
R37008:37008 PLF.Equiv <> x var
R36977:36986 PLF.Equiv <> subst_aexp def
R36990:36990 PLF.Equiv <> u var
R36988:36988 PLF.Equiv <> x var
R37020:37025 PLF.Imp <> AMinus constr
R37042:37047 PLF.Imp <> AMinus constr
R37070:37079 PLF.Equiv <> subst_aexp def
R37083:37083 PLF.Equiv <> u var
R37081:37081 PLF.Equiv <> x var
R37050:37059 PLF.Equiv <> subst_aexp def
R37063:37063 PLF.Equiv <> u var
R37061:37061 PLF.Equiv <> x var
R37093:37097 PLF.Imp <> AMult constr
R37115:37119 PLF.Imp <> AMult constr
R37142:37151 PLF.Equiv <> subst_aexp def
R37155:37155 PLF.Equiv <> u var
R37153:37153 PLF.Equiv <> x var
R37122:37131 PLF.Equiv <> subst_aexp def
R37135:37135 PLF.Equiv <> u var
R37133:37133 PLF.Equiv <> x var
def 37177:37189 <> subst_aexp_ex
R37229:37233 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37195:37204 PLF.Equiv <> subst_aexp def
R37220:37222 PLF.Imp <> ::imp_scope:x_'+'_x not
R37219:37219 PLF.Imp <> Y def
R37223:37223 PLF.Imp <> X def
R37211:37213 PLF.Imp <> ::imp_scope:x_'+'_x not
R37206:37206 PLF.Imp <> X def
R37236:37239 PLF.Imp <> ::imp_scope:x_'+'_x not
R37247:37247 PLF.Imp <> ::imp_scope:x_'+'_x not
R37235:37235 PLF.Imp <> Y def
R37242:37244 PLF.Imp <> ::imp_scope:x_'+'_x not
def 37448:37467 <> subst_equiv_property
R37494:37499 PLF.Equiv <> cequiv def
R37544:37546 PLF.Imp <> ::imp_scope:x_';;'_x not
R37537:37541 PLF.Imp <> ::imp_scope:x_'::='_x not
R37535:37536 PLF.Equiv <> x1 var
R37542:37543 PLF.Equiv <> a1 var
R37549:37553 PLF.Imp <> ::imp_scope:x_'::='_x not
R37547:37548 PLF.Equiv <> x2 var
R37554:37563 PLF.Equiv <> subst_aexp def
R37571:37572 PLF.Equiv <> a2 var
R37568:37569 PLF.Equiv <> a1 var
R37565:37566 PLF.Equiv <> x1 var
R37511:37513 PLF.Imp <> ::imp_scope:x_';;'_x not
R37504:37508 PLF.Imp <> ::imp_scope:x_'::='_x not
R37502:37503 PLF.Equiv <> x1 var
R37509:37510 PLF.Equiv <> a1 var
R37516:37520 PLF.Imp <> ::imp_scope:x_'::='_x not
R37514:37515 PLF.Equiv <> x2 var
R37521:37522 PLF.Equiv <> a2 var
prf 38617:38629 <> subst_inequiv
R38635:38636 Coq.Init.Logic <> ::type_scope:'~'_x not
R38637:38656 PLF.Equiv <> subst_equiv_property def
R38675:38694 PLF.Equiv <> subst_equiv_property def
R38888:38902 PLF.Imp <> ::imp_scope:x_';;'_x not
R38878:38882 PLF.Imp <> ::imp_scope:x_'::='_x not
R38877:38877 PLF.Imp <> X def
R38884:38886 PLF.Imp <> ::imp_scope:x_'+'_x not
R38883:38883 PLF.Imp <> X def
R38904:38908 PLF.Imp <> ::imp_scope:x_'::='_x not
R38903:38903 PLF.Imp <> Y def
R38909:38909 PLF.Imp <> X def
R38888:38902 PLF.Imp <> ::imp_scope:x_';;'_x not
R38878:38882 PLF.Imp <> ::imp_scope:x_'::='_x not
R38877:38877 PLF.Imp <> X def
R38884:38886 PLF.Imp <> ::imp_scope:x_'+'_x not
R38883:38883 PLF.Imp <> X def
R38904:38908 PLF.Imp <> ::imp_scope:x_'::='_x not
R38903:38903 PLF.Imp <> Y def
R38909:38909 PLF.Imp <> X def
R38952:38966 PLF.Imp <> ::imp_scope:x_';;'_x not
R38942:38946 PLF.Imp <> ::imp_scope:x_'::='_x not
R38941:38941 PLF.Imp <> X def
R38948:38950 PLF.Imp <> ::imp_scope:x_'+'_x not
R38947:38947 PLF.Imp <> X def
R38968:38972 PLF.Imp <> ::imp_scope:x_'::='_x not
R38967:38967 PLF.Imp <> Y def
R38974:38976 PLF.Imp <> ::imp_scope:x_'+'_x not
R38973:38973 PLF.Imp <> X def
R38952:38966 PLF.Imp <> ::imp_scope:x_';;'_x not
R38942:38946 PLF.Imp <> ::imp_scope:x_'::='_x not
R38941:38941 PLF.Imp <> X def
R38948:38950 PLF.Imp <> ::imp_scope:x_'+'_x not
R38947:38947 PLF.Imp <> X def
R38968:38972 PLF.Imp <> ::imp_scope:x_'::='_x not
R38967:38967 PLF.Imp <> Y def
R38974:38976 PLF.Imp <> ::imp_scope:x_'+'_x not
R38973:38973 PLF.Imp <> X def
R39007:39012 PLF.Equiv <> cequiv def
R39007:39012 PLF.Equiv <> cequiv def
R39232:39236 PLF.Maps <> :::x_'!->'_x_';'_x not
R39238:39240 PLF.Maps <> :::x_'!->'_x_';'_x not
R39242:39246 PLF.Imp <> :::x_'!->'_x not
R39241:39241 PLF.Imp <> X def
R39231:39231 PLF.Imp <> Y def
R39232:39236 PLF.Maps <> :::x_'!->'_x_';'_x not
R39238:39240 PLF.Maps <> :::x_'!->'_x_';'_x not
R39242:39246 PLF.Imp <> :::x_'!->'_x not
R39241:39241 PLF.Imp <> X def
R39231:39231 PLF.Imp <> Y def
R39271:39275 PLF.Maps <> :::x_'!->'_x_';'_x not
R39277:39279 PLF.Maps <> :::x_'!->'_x_';'_x not
R39281:39285 PLF.Imp <> :::x_'!->'_x not
R39280:39280 PLF.Imp <> X def
R39270:39270 PLF.Imp <> Y def
R39271:39275 PLF.Maps <> :::x_'!->'_x_';'_x not
R39277:39279 PLF.Maps <> :::x_'!->'_x_';'_x not
R39281:39285 PLF.Imp <> :::x_'!->'_x not
R39280:39280 PLF.Imp <> X def
R39270:39270 PLF.Imp <> Y def
R39320:39323 PLF.Imp <> :::x_'=['_x_']=>'_x not
R39326:39330 PLF.Imp <> :::x_'=['_x_']=>'_x not
R39312:39319 PLF.Imp <> empty_st def
R39360:39363 PLF.Imp <> :::x_'=['_x_']=>'_x not
R39366:39370 PLF.Imp <> :::x_'=['_x_']=>'_x not
R39352:39359 PLF.Imp <> empty_st def
R39425:39429 PLF.Imp <> :::x_'!->'_x not
R39424:39424 PLF.Imp <> X def
R39404:39408 PLF.Imp <> E_Seq constr
R39448:39452 PLF.Imp <> E_Ass constr
R39320:39323 PLF.Imp <> :::x_'=['_x_']=>'_x not
R39326:39330 PLF.Imp <> :::x_'=['_x_']=>'_x not
R39312:39319 PLF.Imp <> empty_st def
R39360:39363 PLF.Imp <> :::x_'=['_x_']=>'_x not
R39366:39370 PLF.Imp <> :::x_'=['_x_']=>'_x not
R39352:39359 PLF.Imp <> empty_st def
R39360:39363 PLF.Imp <> :::x_'=['_x_']=>'_x not
R39366:39370 PLF.Imp <> :::x_'=['_x_']=>'_x not
R39352:39359 PLF.Imp <> empty_st def
R39425:39429 PLF.Imp <> :::x_'!->'_x not
R39424:39424 PLF.Imp <> X def
R39404:39408 PLF.Imp <> E_Seq constr
R39448:39452 PLF.Imp <> E_Ass constr
R39448:39452 PLF.Imp <> E_Ass constr
R39425:39429 PLF.Imp <> :::x_'!->'_x not
R39424:39424 PLF.Imp <> X def
R39404:39408 PLF.Imp <> E_Seq constr
R39448:39452 PLF.Imp <> E_Ass constr
R39448:39452 PLF.Imp <> E_Ass constr
R39425:39429 PLF.Imp <> :::x_'!->'_x not
R39424:39424 PLF.Imp <> X def
R39404:39408 PLF.Imp <> E_Seq constr
R39448:39452 PLF.Imp <> E_Ass constr
R39448:39452 PLF.Imp <> E_Ass constr
R39425:39429 PLF.Imp <> :::x_'!->'_x not
R39424:39424 PLF.Imp <> X def
R39404:39408 PLF.Imp <> E_Seq constr
R39608:39610 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39631:39649 PLF.Imp <> ceval_deterministic thm
R39654:39661 PLF.Imp <> empty_st def
R39608:39610 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39631:39649 PLF.Imp <> ceval_deterministic thm
R39654:39661 PLF.Imp <> empty_st def
R39704:39706 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39703:39703 PLF.Imp <> Y def
R39711:39711 PLF.Imp <> Y def
R39704:39706 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39703:39703 PLF.Imp <> Y def
R39711:39711 PLF.Imp <> Y def
ind 40128:40147 <> var_not_used_in_aexp
constr 40184:40189 <> VNUNum
constr 40239:40243 <> VNUId
constr 40302:40308 <> VNUPlus
constr 40443:40450 <> VNUMinus
constr 40586:40592 <> VNUMult
R40154:40159 Coq.Strings.String <> string ind
R40168:40171 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40164:40167 PLF.Imp <> aexp ind
R40203:40222 PLF.Equiv <> var_not_used_in_aexp ind
R40227:40230 PLF.Imp <> ANum constr
R40232:40232 PLF.Equiv <> n var
R40224:40224 PLF.Equiv <> x var
R40263:40266 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40267:40286 PLF.Equiv <> var_not_used_in_aexp ind
R40291:40293 PLF.Imp <> AId constr
R40295:40295 PLF.Equiv <> y var
R40288:40288 PLF.Equiv <> x var
R40258:40261 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R40257:40257 PLF.Equiv <> x var
R40262:40262 PLF.Equiv <> y var
R40357:40366 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40392:40401 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40402:40421 PLF.Equiv <> var_not_used_in_aexp ind
R40426:40430 PLF.Imp <> APlus constr
R40435:40436 PLF.Equiv <> a2 var
R40432:40433 PLF.Equiv <> a1 var
R40423:40423 PLF.Equiv <> x var
R40367:40386 PLF.Equiv <> var_not_used_in_aexp ind
R40390:40391 PLF.Equiv <> a2 var
R40388:40388 PLF.Equiv <> x var
R40332:40351 PLF.Equiv <> var_not_used_in_aexp ind
R40355:40356 PLF.Equiv <> a1 var
R40353:40353 PLF.Equiv <> x var
R40499:40508 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40534:40543 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40544:40563 PLF.Equiv <> var_not_used_in_aexp ind
R40568:40573 PLF.Imp <> AMinus constr
R40578:40579 PLF.Equiv <> a2 var
R40575:40576 PLF.Equiv <> a1 var
R40565:40565 PLF.Equiv <> x var
R40509:40528 PLF.Equiv <> var_not_used_in_aexp ind
R40532:40533 PLF.Equiv <> a2 var
R40530:40530 PLF.Equiv <> x var
R40474:40493 PLF.Equiv <> var_not_used_in_aexp ind
R40497:40498 PLF.Equiv <> a1 var
R40495:40495 PLF.Equiv <> x var
R40641:40650 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40676:40685 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40686:40705 PLF.Equiv <> var_not_used_in_aexp ind
R40710:40714 PLF.Imp <> AMult constr
R40719:40720 PLF.Equiv <> a2 var
R40716:40717 PLF.Equiv <> a1 var
R40707:40707 PLF.Equiv <> x var
R40651:40670 PLF.Equiv <> var_not_used_in_aexp ind
R40674:40675 PLF.Equiv <> a2 var
R40672:40672 PLF.Equiv <> x var
R40616:40635 PLF.Equiv <> var_not_used_in_aexp ind
R40639:40640 PLF.Equiv <> a1 var
R40637:40637 PLF.Equiv <> x var
prf 40731:40745 <> aeval_weakening
R40793:40798 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40822:40824 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40799:40803 PLF.Imp <> aeval def
R40821:40821 PLF.Equiv <> a var
R40807:40811 PLF.Maps <> :::x_'!->'_x_';'_x not
R40814:40816 PLF.Maps <> :::x_'!->'_x_';'_x not
R40817:40818 PLF.Equiv <> st var
R40806:40806 PLF.Equiv <> x var
R40812:40813 PLF.Equiv <> ni var
R40825:40829 PLF.Imp <> aeval def
R40834:40834 PLF.Equiv <> a var
R40831:40832 PLF.Equiv <> st var
R40769:40788 PLF.Equiv <> var_not_used_in_aexp ind
R40792:40792 PLF.Equiv <> a var
R40790:40790 PLF.Equiv <> x var
prf 41143:41158 <> inequiv_exercise
R41163:41164 Coq.Init.Logic <> ::type_scope:'~'_x not
R41165:41170 PLF.Equiv <> cequiv def
R41197:41200 PLF.Imp <> ::imp_scope:'SKIP' not
R41173:41178 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R41183:41186 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R41191:41194 PLF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R41179:41182 Coq.Init.Datatypes <> true constr
R41187:41190 PLF.Imp <> ::imp_scope:'SKIP' not
mod 43310:43313 <> Himp
ind 43411:43413 Himp com
constr 43429:43433 Himp CSkip
constr 43445:43448 Himp CAss
constr 43478:43481 Himp CSeq
constr 43507:43509 Himp CIf
constr 43543:43548 Himp CWhile
constr 43575:43580 Himp CHavoc
R43437:43439 PLF.Equiv <> com ind
R43458:43461 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43466:43469 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43470:43472 PLF.Equiv <> com ind
R43462:43465 PLF.Imp <> aexp ind
R43452:43457 Coq.Strings.String <> string ind
R43488:43491 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43495:43498 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43499:43501 PLF.Equiv <> com ind
R43492:43494 PLF.Equiv <> com ind
R43485:43487 PLF.Equiv <> com ind
R43517:43520 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43524:43527 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43531:43534 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43535:43537 PLF.Equiv <> com ind
R43528:43530 PLF.Equiv <> com ind
R43521:43523 PLF.Equiv <> com ind
R43513:43516 PLF.Imp <> bexp ind
R43556:43559 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43563:43566 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43567:43569 PLF.Equiv <> com ind
R43560:43562 PLF.Equiv <> com ind
R43552:43555 PLF.Imp <> bexp ind
R43590:43593 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43594:43596 PLF.Equiv <> com ind
R43584:43589 Coq.Strings.String <> string ind
R43653:43657 PLF.Equiv Himp CSkip constr
not 43639:43639 Himp ::imp_scope:'SKIP'
R43699:43702 PLF.Equiv Himp CAss constr
not 43681:43681 Himp ::imp_scope:x_'::='_x
R43762:43765 PLF.Equiv Himp CSeq constr
not 43745:43745 Himp ::imp_scope:x_';;'_x
R43862:43867 PLF.Equiv Himp CWhile constr
not 43831:43831 Himp ::imp_scope:'WHILE'_x_'DO'_x_'END'
R43974:43976 PLF.Equiv Himp CIf constr
not 43931:43931 Himp ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI'
R44063:44068 PLF.Equiv Himp CHavoc constr
not 44045:44045 Himp ::imp_scope:'HAVOC'_x
ind 44507:44511 Himp ceval
constr 44552:44557 Himp E_Skip
constr 44600:44604 Himp E_Ass
constr 44696:44700 Himp E_Seq
constr 44821:44828 Himp E_IfTrue
constr 44958:44966 Himp E_IfFalse
constr 45097:45108 Himp E_WhileFalse
constr 45195:45205 Himp E_WhileTrue
R44518:44521 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44527:44530 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44536:44539 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44531:44535 PLF.Imp <> state def
R44522:44526 PLF.Imp <> state def
R44515:44517 PLF.Equiv Himp com ind
R45417:45421 PLF.Equiv <> ceval ind
R44580:44583 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R44588:44592 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R44584:44587 PLF.Equiv Himp ::imp_scope:'SKIP' not
R44578:44579 PLF.Equiv <> st var
R44593:44594 PLF.Equiv <> st var
R44648:44657 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44660:44663 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R44672:44677 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R44690:44690 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R44665:44669 PLF.Equiv Himp ::imp_scope:x_'::='_x not
R44664:44664 PLF.Equiv <> x var
R44670:44671 PLF.Equiv <> a1 var
R44658:44659 PLF.Equiv <> st var
R44679:44683 PLF.Maps <> :::x_'!->'_x_';'_x not
R44685:44687 PLF.Maps <> :::x_'!->'_x_';'_x not
R44688:44689 PLF.Equiv <> st var
R44678:44678 PLF.Equiv <> x var
R44684:44684 PLF.Equiv <> n var
R44644:44646 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44633:44637 PLF.Imp <> aeval def
R44642:44643 PLF.Equiv <> a1 var
R44639:44640 PLF.Equiv <> st var
R44647:44647 PLF.Equiv <> n var
R44753:44763 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44782:44791 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44794:44798 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R44807:44811 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R44801:44804 PLF.Equiv Himp ::imp_scope:x_';;'_x not
R44799:44800 PLF.Equiv <> c1 var
R44805:44806 PLF.Equiv <> c2 var
R44792:44793 PLF.Equiv <> st var
R44812:44815 PLF.Equiv <> st'' var
R44767:44770 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R44773:44777 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R44771:44772 PLF.Equiv <> c2 var
R44764:44766 PLF.Equiv <> st' var
R44778:44781 PLF.Equiv <> st'' var
R44738:44742 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R44745:44749 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R44743:44744 PLF.Equiv <> c1 var
R44736:44737 PLF.Equiv <> st var
R44750:44752 PLF.Equiv <> st' var
R44878:44887 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44904:44913 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44916:44919 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R44945:44949 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R44920:44924 PLF.Equiv Himp ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R44926:44931 PLF.Equiv Himp ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R44934:44939 PLF.Equiv Himp ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R44942:44944 PLF.Equiv Himp ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R44925:44925 PLF.Equiv <> b var
R44932:44933 PLF.Equiv <> c1 var
R44940:44941 PLF.Equiv <> c2 var
R44914:44915 PLF.Equiv <> st var
R44950:44952 PLF.Equiv <> st' var
R44890:44893 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R44896:44900 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R44894:44895 PLF.Equiv <> c1 var
R44888:44889 PLF.Equiv <> st var
R44901:44903 PLF.Equiv <> st' var
R44871:44873 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44861:44865 PLF.Imp <> beval def
R44870:44870 PLF.Equiv <> b var
R44867:44868 PLF.Equiv <> st var
R44874:44877 Coq.Init.Datatypes <> true constr
R45017:45026 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45043:45052 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45055:45058 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R45084:45088 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R45059:45063 PLF.Equiv Himp ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R45065:45070 PLF.Equiv Himp ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R45073:45078 PLF.Equiv Himp ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R45081:45083 PLF.Equiv Himp ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R45064:45064 PLF.Equiv <> b var
R45071:45072 PLF.Equiv <> c1 var
R45079:45080 PLF.Equiv <> c2 var
R45053:45054 PLF.Equiv <> st var
R45089:45091 PLF.Equiv <> st' var
R45029:45032 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R45035:45039 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R45033:45034 PLF.Equiv <> c2 var
R45027:45028 PLF.Equiv <> st var
R45040:45042 PLF.Equiv <> st' var
R45009:45011 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44999:45003 PLF.Imp <> beval def
R45008:45008 PLF.Equiv <> b var
R45005:45006 PLF.Equiv <> st var
R45012:45016 Coq.Init.Datatypes <> false constr
R45151:45160 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45163:45166 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R45183:45187 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R45167:45172 PLF.Equiv Himp ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R45174:45177 PLF.Equiv Himp ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R45179:45182 PLF.Equiv Himp ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R45173:45173 PLF.Equiv <> b var
R45178:45178 PLF.Equiv <> c var
R45161:45162 PLF.Equiv <> st var
R45188:45189 PLF.Equiv <> st var
R45143:45145 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45133:45137 PLF.Imp <> beval def
R45142:45142 PLF.Equiv <> b var
R45139:45140 PLF.Equiv <> st var
R45146:45150 Coq.Init.Datatypes <> false constr
R45256:45265 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45282:45291 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45324:45333 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45336:45340 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R45357:45361 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R45341:45346 PLF.Equiv Himp ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R45348:45351 PLF.Equiv Himp ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R45353:45356 PLF.Equiv Himp ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R45347:45347 PLF.Equiv <> b var
R45352:45352 PLF.Equiv <> c var
R45334:45335 PLF.Equiv <> st var
R45362:45365 PLF.Equiv <> st'' var
R45295:45298 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R45315:45319 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R45299:45304 PLF.Equiv Himp ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R45306:45309 PLF.Equiv Himp ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R45311:45314 PLF.Equiv Himp ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R45305:45305 PLF.Equiv <> b var
R45310:45310 PLF.Equiv <> c var
R45292:45294 PLF.Equiv <> st' var
R45320:45323 PLF.Equiv <> st'' var
R45268:45272 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R45274:45278 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R45273:45273 PLF.Equiv <> c var
R45266:45267 PLF.Equiv <> st var
R45279:45281 PLF.Equiv <> st' var
R45249:45251 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45239:45243 PLF.Imp <> beval def
R45248:45248 PLF.Equiv <> b var
R45245:45246 PLF.Equiv <> st var
R45252:45255 Coq.Init.Datatypes <> true constr
R45417:45421 PLF.Equiv Himp ceval ind
not 45395:45395 Himp :::x_'=['_x_']=>'_x
def 45558:45571 Himp havoc_example1
R45583:45586 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R45600:45605 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R45613:45613 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R45588:45593 PLF.Equiv Himp ::imp_scope:'HAVOC'_x not
R45594:45594 PLF.Imp <> X def
R45575:45582 PLF.Imp <> empty_st def
R45607:45611 PLF.Imp <> :::x_'!->'_x not
R45606:45606 PLF.Imp <> X def
def 45661:45674 Himp havoc_example2
R45688:45691 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R45712:45717 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R45726:45726 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R45697:45699 PLF.Equiv Himp ::imp_scope:x_';;'_x not
R45693:45696 PLF.Equiv Himp ::imp_scope:'SKIP' not
R45700:45705 PLF.Equiv Himp ::imp_scope:'HAVOC'_x not
R45706:45706 PLF.Imp <> Z def
R45680:45687 PLF.Imp <> empty_st def
R45719:45723 PLF.Imp <> :::x_'!->'_x not
R45718:45718 PLF.Imp <> Z def
def 45817:45853 Himp manual_grade_for_Check_rule_for_HAVOC
R45857:45862 Coq.Init.Datatypes <> option ind
R45868:45868 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R45865:45867 Coq.Init.Datatypes <> nat ind
R45869:45874 Coq.Strings.String <> string ind
R45880:45883 Coq.Init.Datatypes <> None constr
def 45985:45990 Himp cequiv
R46001:46003 PLF.Equiv Himp com ind
R46032:46036 PLF.Imp <> state def
R46057:46061 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R46043:46046 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R46049:46053 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R46047:46048 PLF.Equiv <> c1 var
R46041:46042 PLF.Equiv <> st var
R46054:46056 PLF.Equiv <> st' var
R46064:46067 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R46070:46074 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R46068:46069 PLF.Equiv <> c2 var
R46062:46063 PLF.Equiv <> st var
R46075:46077 PLF.Equiv <> st' var
def 46303:46305 Himp pXY
R46320:46322 PLF.Equiv Himp ::imp_scope:x_';;'_x not
R46313:46318 PLF.Equiv Himp ::imp_scope:'HAVOC'_x not
R46319:46319 PLF.Imp <> X def
R46323:46328 PLF.Equiv Himp ::imp_scope:'HAVOC'_x not
R46329:46329 PLF.Imp <> Y def
def 46349:46351 Himp pYX
R46366:46368 PLF.Equiv Himp ::imp_scope:x_';;'_x not
R46359:46364 PLF.Equiv Himp ::imp_scope:'HAVOC'_x not
R46365:46365 PLF.Imp <> Y def
R46369:46374 PLF.Equiv Himp ::imp_scope:'HAVOC'_x not
R46375:46375 PLF.Imp <> X def
prf 46487:46500 Himp pXY_cequiv_pYX
R46520:46523 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R46506:46511 PLF.Equiv Himp cequiv def
R46517:46519 PLF.Equiv Himp pYX def
R46513:46515 PLF.Equiv Himp pXY def
R46524:46524 Coq.Init.Logic <> ::type_scope:'~'_x not
R46525:46530 PLF.Equiv Himp cequiv def
R46536:46538 PLF.Equiv Himp pYX def
R46532:46534 PLF.Equiv Himp pXY def
def 46713:46718 Himp ptwice
R46733:46735 PLF.Equiv Himp ::imp_scope:x_';;'_x not
R46726:46731 PLF.Equiv Himp ::imp_scope:'HAVOC'_x not
R46732:46732 PLF.Imp <> X def
R46736:46741 PLF.Equiv Himp ::imp_scope:'HAVOC'_x not
R46742:46742 PLF.Imp <> Y def
def 46762:46766 Himp pcopy
R46781:46783 PLF.Equiv Himp ::imp_scope:x_';;'_x not
R46774:46779 PLF.Equiv Himp ::imp_scope:'HAVOC'_x not
R46780:46780 PLF.Imp <> X def
R46785:46789 PLF.Equiv Himp ::imp_scope:x_'::='_x not
R46784:46784 PLF.Imp <> Y def
R46790:46790 PLF.Imp <> X def
prf 46966:46984 Himp ptwice_cequiv_pcopy
R47009:47012 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R46990:46995 PLF.Equiv Himp cequiv def
R47004:47008 PLF.Equiv Himp pcopy def
R46997:47002 PLF.Equiv Himp ptwice def
R47013:47013 Coq.Init.Logic <> ::type_scope:'~'_x not
R47014:47019 PLF.Equiv Himp cequiv def
R47028:47032 PLF.Equiv Himp pcopy def
R47021:47026 PLF.Equiv Himp ptwice def
def 47734:47735 Himp p1
R47739:47741 PLF.Equiv Himp com ind
R47749:47754 PLF.Equiv Himp ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R47764:47771 PLF.Equiv Himp ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R47797:47802 PLF.Equiv Himp ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R47755:47757 PLF.Imp <> ::imp_scope:'~'_x not
R47763:47763 PLF.Imp <> ::imp_scope:'~'_x not
R47759:47761 PLF.Imp <> ::imp_scope:x_'='_x not
R47758:47758 PLF.Imp <> X def
R47779:47785 PLF.Equiv Himp ::imp_scope:x_';;'_x not
R47772:47777 PLF.Equiv Himp ::imp_scope:'HAVOC'_x not
R47778:47778 PLF.Imp <> Y def
R47787:47791 PLF.Equiv Himp ::imp_scope:x_'::='_x not
R47786:47786 PLF.Imp <> X def
R47793:47795 PLF.Imp <> ::imp_scope:x_'+'_x not
R47792:47792 PLF.Imp <> X def
def 47822:47823 Himp p2
R47827:47829 PLF.Equiv Himp com ind
R47837:47842 PLF.Equiv Himp ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R47852:47859 PLF.Equiv Himp ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R47864:47869 PLF.Equiv Himp ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R47843:47845 PLF.Imp <> ::imp_scope:'~'_x not
R47851:47851 PLF.Imp <> ::imp_scope:'~'_x not
R47847:47849 PLF.Imp <> ::imp_scope:x_'='_x not
R47846:47846 PLF.Imp <> X def
R47860:47863 PLF.Equiv Himp ::imp_scope:'SKIP' not
prf 48136:48149 Himp p1_may_diverge
R48177:48182 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R48183:48184 Coq.Init.Logic <> ::type_scope:'~'_x not
R48187:48190 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R48193:48197 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R48191:48192 PLF.Equiv Himp p1 def
R48185:48186 PLF.Equiv <> st var
R48198:48200 PLF.Equiv <> st' var
R48172:48175 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R48168:48169 PLF.Equiv <> st var
R48171:48171 PLF.Imp <> X def
prf 48246:48259 Himp p2_may_diverge
R48287:48292 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R48293:48294 Coq.Init.Logic <> ::type_scope:'~'_x not
R48297:48300 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R48303:48307 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R48301:48302 PLF.Equiv Himp p2 def
R48295:48296 PLF.Equiv <> st var
R48308:48310 PLF.Equiv <> st' var
R48282:48285 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R48278:48279 PLF.Equiv <> st var
R48281:48281 PLF.Imp <> X def
prf 48508:48518 Himp p1_p2_equiv
R48522:48527 PLF.Equiv Himp cequiv def
R48532:48533 PLF.Equiv Himp p2 def
R48529:48530 PLF.Equiv Himp p1 def
def 48803:48804 Himp p3
R48808:48810 PLF.Equiv Himp com ind
R48825:48829 PLF.Equiv Himp ::imp_scope:x_';;'_x not
R48819:48823 PLF.Equiv Himp ::imp_scope:x_'::='_x not
R48818:48818 PLF.Imp <> Z def
R48830:48835 PLF.Equiv Himp ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R48844:48851 PLF.Equiv Himp ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R48873:48878 PLF.Equiv Himp ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R48836:48837 PLF.Imp <> ::imp_scope:'~'_x not
R48843:48843 PLF.Imp <> ::imp_scope:'~'_x not
R48839:48841 PLF.Imp <> ::imp_scope:x_'='_x not
R48838:48838 PLF.Imp <> X def
R48859:48865 PLF.Equiv Himp ::imp_scope:x_';;'_x not
R48852:48857 PLF.Equiv Himp ::imp_scope:'HAVOC'_x not
R48858:48858 PLF.Imp <> X def
R48866:48871 PLF.Equiv Himp ::imp_scope:'HAVOC'_x not
R48872:48872 PLF.Imp <> Z def
def 48898:48899 Himp p4
R48903:48905 PLF.Equiv Himp com ind
R48920:48924 PLF.Equiv Himp ::imp_scope:x_';;'_x not
R48914:48918 PLF.Equiv Himp ::imp_scope:x_'::='_x not
R48913:48913 PLF.Imp <> X def
R48926:48930 PLF.Equiv Himp ::imp_scope:x_'::='_x not
R48925:48925 PLF.Imp <> Z def
prf 48948:48960 Himp p3_p4_inequiv
R48964:48965 Coq.Init.Logic <> ::type_scope:'~'_x not
R48966:48971 PLF.Equiv Himp cequiv def
R48976:48977 PLF.Equiv Himp p4 def
R48973:48974 PLF.Equiv Himp p3 def
def 49584:49585 Himp p5
R49589:49591 PLF.Equiv Himp com ind
R49599:49604 PLF.Equiv Himp ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R49613:49620 PLF.Equiv Himp ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R49628:49633 PLF.Equiv Himp ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R49605:49606 PLF.Imp <> ::imp_scope:'~'_x not
R49612:49612 PLF.Imp <> ::imp_scope:'~'_x not
R49608:49610 PLF.Imp <> ::imp_scope:x_'='_x not
R49607:49607 PLF.Imp <> X def
R49621:49626 PLF.Equiv Himp ::imp_scope:'HAVOC'_x not
R49627:49627 PLF.Imp <> X def
def 49653:49654 Himp p6
R49658:49660 PLF.Equiv Himp com ind
R49669:49673 PLF.Equiv Himp ::imp_scope:x_'::='_x not
R49668:49668 PLF.Imp <> X def
prf 49691:49701 Himp p5_p6_equiv
R49705:49710 PLF.Equiv Himp cequiv def
R49715:49716 PLF.Equiv Himp p6 def
R49712:49713 PLF.Equiv Himp p5 def
R49770:49773 PLF.Equiv Himp <> mod
prf 50483:50513 <> swap_noninterfering_assignments
R50546:50551 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50578:50583 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50610:50615 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50616:50621 PLF.Equiv <> cequiv def
R50665:50667 PLF.Imp <> ::imp_scope:x_';;'_x not
R50658:50662 PLF.Imp <> ::imp_scope:x_'::='_x not
R50656:50657 PLF.Equiv <> l2 var
R50663:50664 PLF.Equiv <> a2 var
R50670:50674 PLF.Imp <> ::imp_scope:x_'::='_x not
R50668:50669 PLF.Equiv <> l1 var
R50675:50676 PLF.Equiv <> a1 var
R50637:50639 PLF.Imp <> ::imp_scope:x_';;'_x not
R50630:50634 PLF.Imp <> ::imp_scope:x_'::='_x not
R50628:50629 PLF.Equiv <> l1 var
R50635:50636 PLF.Equiv <> a1 var
R50642:50646 PLF.Imp <> ::imp_scope:x_'::='_x not
R50640:50641 PLF.Equiv <> l2 var
R50647:50648 PLF.Equiv <> a2 var
R50584:50603 PLF.Equiv <> var_not_used_in_aexp ind
R50608:50609 PLF.Equiv <> a1 var
R50605:50606 PLF.Equiv <> l2 var
R50552:50571 PLF.Equiv <> var_not_used_in_aexp ind
R50576:50577 PLF.Equiv <> a2 var
R50573:50574 PLF.Equiv <> l1 var
R50540:50543 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R50538:50539 PLF.Equiv <> l1 var
R50544:50545 PLF.Equiv <> l2 var
def 51163:51169 <> capprox
R51180:51182 PLF.Imp <> com ind
R51212:51216 PLF.Imp <> state def
R51238:51241 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51244:51247 PLF.Imp <> :::x_'=['_x_']=>'_x not
R51250:51254 PLF.Imp <> :::x_'=['_x_']=>'_x not
R51248:51249 PLF.Equiv <> c2 var
R51242:51243 PLF.Equiv <> st var
R51255:51257 PLF.Equiv <> st' var
R51224:51227 PLF.Imp <> :::x_'=['_x_']=>'_x not
R51230:51234 PLF.Imp <> :::x_'=['_x_']=>'_x not
R51228:51229 PLF.Equiv <> c1 var
R51222:51223 PLF.Equiv <> st var
R51235:51237 PLF.Equiv <> st' var
def 51674:51675 <> c3
R51679:51681 PLF.Imp <> com ind
def 51761:51762 <> c4
R51766:51768 PLF.Imp <> com ind
prf 51846:51860 <> c3_c4_different
R51879:51882 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R51864:51865 Coq.Init.Logic <> ::type_scope:'~'_x not
R51866:51872 PLF.Equiv <> capprox def
R51877:51878 PLF.Equiv <> c4 prfax
R51874:51875 PLF.Equiv <> c3 prfax
R51883:51884 Coq.Init.Logic <> ::type_scope:'~'_x not
R51885:51891 PLF.Equiv <> capprox def
R51896:51897 PLF.Equiv <> c3 prfax
R51893:51894 PLF.Equiv <> c4 prfax
def 52017:52020 <> cmin
R52024:52026 PLF.Imp <> com ind
prf 52104:52115 <> cmin_minimal
R52129:52135 PLF.Equiv <> capprox def
R52142:52142 PLF.Equiv <> c var
R52137:52140 PLF.Equiv <> cmin prfax
def 52319:52323 <> zprop
R52330:52332 PLF.Imp <> com ind
prf 52418:52433 <> zprop_preserving
R52459:52462 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52475:52478 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52479:52483 PLF.Equiv <> zprop prfax
R52485:52486 PLF.Equiv <> c' var
R52463:52469 PLF.Equiv <> capprox def
R52473:52474 PLF.Equiv <> c' var
R52471:52471 PLF.Equiv <> c var
R52452:52456 PLF.Equiv <> zprop prfax
R52458:52458 PLF.Equiv <> c var
