DIGEST 137fec116178249759224b0916d85257
FLF.Tactics
R666:669 LF.Poly <> <> lib
prf 945:950 <> silly1
R972:974 Coq.Init.Datatypes <> nat ind
R988:997 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1011:1019 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1025:1027 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1020:1020 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1022:1022 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1024:1024 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1021:1021 LF.Tactics <> n var
R1023:1023 LF.Tactics <> o var
R1028:1028 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1030:1030 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1032:1032 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1029:1029 LF.Tactics <> m var
R1031:1031 LF.Tactics <> p var
R1003:1005 Coq.Init.Logic <> ::type_scope:x_'='_x not
R998:998 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1000:1000 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1002:1002 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R999:999 LF.Tactics <> n var
R1001:1001 LF.Tactics <> o var
R1006:1006 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1008:1008 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1010:1010 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1007:1007 LF.Tactics <> n var
R1009:1009 LF.Tactics <> p var
R984:986 Coq.Init.Logic <> ::type_scope:x_'='_x not
R983:983 LF.Tactics <> n var
R987:987 LF.Tactics <> m var
prf 1556:1561 <> silly2
R1583:1585 Coq.Init.Datatypes <> nat ind
R1599:1608 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1609:1609 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1652:1661 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1667:1669 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1662:1662 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1664:1664 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1666:1666 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1663:1663 LF.Tactics <> n var
R1665:1665 LF.Tactics <> o var
R1670:1670 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1672:1672 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1674:1674 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1671:1671 LF.Tactics <> m var
R1673:1673 LF.Tactics <> p var
R1624:1626 Coq.Init.Datatypes <> nat ind
R1635:1638 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1644:1646 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1639:1639 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1641:1641 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1643:1643 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1640:1640 LF.Tactics <> q var
R1642:1642 LF.Tactics <> o var
R1647:1647 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1649:1649 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1651:1651 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1648:1648 LF.Tactics <> r var
R1650:1650 LF.Tactics <> p var
R1631:1633 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1630:1630 LF.Tactics <> q var
R1634:1634 LF.Tactics <> r var
R1595:1597 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1594:1594 LF.Tactics <> n var
R1598:1598 LF.Tactics <> m var
prf 2185:2191 <> silly2a
R2209:2211 Coq.Init.Datatypes <> nat ind
R2233:2242 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2243:2243 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2290:2299 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2303:2305 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2300:2300 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2302:2302 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2301:2301 LF.Tactics <> n var
R2306:2306 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2308:2308 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2307:2307 LF.Tactics <> m var
R2258:2260 Coq.Init.Datatypes <> nat ind
R2277:2280 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2284:2286 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2281:2281 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2283:2283 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2282:2282 LF.Tactics <> q var
R2287:2287 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2289:2289 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2288:2288 LF.Tactics <> r var
R2269:2271 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2264:2264 LF.Poly <> :::'('_x_','_x_')' not
R2266:2266 LF.Poly <> :::'('_x_','_x_')' not
R2268:2268 LF.Poly <> :::'('_x_','_x_')' not
R2265:2265 LF.Tactics <> q var
R2267:2267 LF.Tactics <> q var
R2272:2272 LF.Poly <> :::'('_x_','_x_')' not
R2274:2274 LF.Poly <> :::'('_x_','_x_')' not
R2276:2276 LF.Poly <> :::'('_x_','_x_')' not
R2273:2273 LF.Tactics <> r var
R2275:2275 LF.Tactics <> r var
R2225:2227 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2220:2220 LF.Poly <> :::'('_x_','_x_')' not
R2222:2222 LF.Poly <> :::'('_x_','_x_')' not
R2224:2224 LF.Poly <> :::'('_x_','_x_')' not
R2221:2221 LF.Tactics <> n var
R2223:2223 LF.Tactics <> n var
R2228:2228 LF.Poly <> :::'('_x_','_x_')' not
R2230:2230 LF.Poly <> :::'('_x_','_x_')' not
R2232:2232 LF.Poly <> :::'('_x_','_x_')' not
R2229:2229 LF.Tactics <> m var
R2231:2231 LF.Tactics <> m var
prf 2500:2507 <> silly_ex
R2516:2516 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2562:2571 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2585:2593 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2601:2603 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2594:2598 LF.Basics <> evenb def
R2604:2607 LF.Basics <> true constr
R2578:2580 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2572:2575 LF.Basics <> oddb def
R2581:2584 LF.Basics <> true constr
R2541:2544 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2555:2557 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2545:2548 LF.Basics <> oddb def
R2551:2551 Coq.Init.Datatypes <> S constr
R2553:2553 LF.Tactics <> n var
R2558:2561 LF.Basics <> true constr
R2534:2536 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2527:2531 LF.Basics <> evenb def
R2533:2533 LF.Tactics <> n var
R2537:2540 LF.Basics <> true constr
prf 2885:2899 <> silly3_firsttry
R2915:2917 Coq.Init.Datatypes <> nat ind
R2941:2950 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2965:2967 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2951:2951 LF.Basics <> ::nat_scope:x_'=?'_x not
R2959:2963 LF.Basics <> ::nat_scope:x_'=?'_x not
R2952:2952 Coq.Init.Datatypes <> S constr
R2955:2955 Coq.Init.Datatypes <> S constr
R2957:2957 LF.Tactics <> n var
R2968:2971 LF.Basics <> true constr
R2930:2933 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2940:2940 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2926:2929 LF.Basics <> true constr
R2935:2938 LF.Basics <> ::nat_scope:x_'=?'_x not
R2934:2934 LF.Tactics <> n var
prf 3522:3534 <> rev_exercise1
R3553:3556 LF.Poly <> list ind
R3558:3560 Coq.Init.Datatypes <> nat ind
R3579:3587 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3590:3592 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3588:3589 LF.Tactics <> l' var
R3593:3595 LF.Poly <> rev def
R3597:3597 LF.Tactics <> l var
R3570:3572 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3569:3569 LF.Tactics <> l var
R3573:3575 LF.Poly <> rev def
R3577:3578 LF.Tactics <> l' var
R3658:3671 LF.Poly <> rev_involutive thm
R3658:3671 LF.Poly <> rev_involutive thm
R3658:3671 LF.Poly <> rev_involutive thm
def 4179:4194 <> trans_eq_example
R4220:4222 Coq.Init.Datatypes <> nat ind
R4244:4252 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4266:4274 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4280:4282 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4275:4275 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4277:4277 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4279:4279 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4276:4276 LF.Tactics <> a var
R4278:4278 LF.Tactics <> b var
R4283:4283 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4285:4285 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4287:4287 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4284:4284 LF.Tactics <> e var
R4286:4286 LF.Tactics <> f var
R4258:4260 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4253:4253 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4255:4255 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4257:4257 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4254:4254 LF.Tactics <> c var
R4256:4256 LF.Tactics <> d var
R4261:4261 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4263:4263 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4265:4265 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4262:4262 LF.Tactics <> e var
R4264:4264 LF.Tactics <> f var
R4236:4238 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4231:4231 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4233:4233 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4235:4235 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4232:4232 LF.Tactics <> a var
R4234:4234 LF.Tactics <> b var
R4239:4239 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4241:4241 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4243:4243 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4240:4240 LF.Tactics <> c var
R4242:4242 LF.Tactics <> d var
prf 4544:4551 <> trans_eq
R4580:4580 LF.Tactics <> X var
R4591:4594 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4600:4603 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4605:4607 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4604:4604 LF.Tactics <> n var
R4608:4608 LF.Tactics <> o var
R4596:4598 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4595:4595 LF.Tactics <> m var
R4599:4599 LF.Tactics <> o var
R4587:4589 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4586:4586 LF.Tactics <> n var
R4590:4590 LF.Tactics <> m var
def 4863:4879 <> trans_eq_example'
R4905:4907 Coq.Init.Datatypes <> nat ind
R4929:4937 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4951:4959 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4965:4967 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4960:4960 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4962:4962 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4964:4964 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4961:4961 LF.Tactics <> a var
R4963:4963 LF.Tactics <> b var
R4968:4968 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4970:4970 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4972:4972 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4969:4969 LF.Tactics <> e var
R4971:4971 LF.Tactics <> f var
R4943:4945 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4938:4938 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4940:4940 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4942:4942 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4939:4939 LF.Tactics <> c var
R4941:4941 LF.Tactics <> d var
R4946:4946 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4948:4948 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4950:4950 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4947:4947 LF.Tactics <> e var
R4949:4949 LF.Tactics <> f var
R4921:4923 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4916:4916 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4918:4918 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4920:4920 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4917:4917 LF.Tactics <> a var
R4919:4919 LF.Tactics <> b var
R4924:4924 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4926:4926 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4928:4928 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4925:4925 LF.Tactics <> c var
R4927:4927 LF.Tactics <> d var
R5443:5443 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5445:5445 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5447:5447 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5425:5432 LF.Tactics <> trans_eq thm
R5443:5443 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5445:5445 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5447:5447 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5425:5432 LF.Tactics <> trans_eq thm
def 5789:5805 <> trans_eq_exercise
R5827:5829 Coq.Init.Datatypes <> nat ind
R5854:5862 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5874:5882 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5883:5883 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5889:5893 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5904:5904 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5885:5887 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R5884:5884 LF.Tactics <> n var
R5888:5888 LF.Tactics <> p var
R5894:5901 LF.Basics <> minustwo def
R5903:5903 LF.Tactics <> o var
R5863:5863 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5869:5872 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5865:5867 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R5864:5864 LF.Tactics <> n var
R5868:5868 LF.Tactics <> p var
R5873:5873 LF.Tactics <> m var
R5839:5842 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5853:5853 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5838:5838 LF.Tactics <> m var
R5843:5850 LF.Basics <> minustwo def
R5852:5852 LF.Tactics <> o var
R5948:5955 LF.Tactics <> trans_eq thm
R5948:5955 LF.Tactics <> trans_eq thm
prf 7421:7431 <> S_injective
R7449:7451 Coq.Init.Datatypes <> nat ind
R7466:7471 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7473:7475 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7472:7472 LF.Tactics <> n var
R7476:7476 LF.Tactics <> m var
R7460:7462 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7457:7457 Coq.Init.Datatypes <> S constr
R7459:7459 LF.Tactics <> n var
R7463:7463 Coq.Init.Datatypes <> S constr
R7465:7465 LF.Tactics <> m var
R7518:7520 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7521:7524 Coq.Init.Peano <> pred syndef
R7527:7527 Coq.Init.Datatypes <> S constr
R7518:7520 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7521:7524 Coq.Init.Peano <> pred syndef
R7527:7527 Coq.Init.Datatypes <> S constr
prf 8029:8040 <> S_injective'
R8058:8060 Coq.Init.Datatypes <> nat ind
R8075:8080 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8082:8084 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8081:8081 LF.Tactics <> n var
R8085:8085 LF.Tactics <> m var
R8069:8071 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8066:8066 Coq.Init.Datatypes <> S constr
R8068:8068 LF.Tactics <> n var
R8072:8072 Coq.Init.Datatypes <> S constr
R8074:8074 LF.Tactics <> m var
prf 8554:8566 <> injection_ex1
R8586:8588 Coq.Init.Datatypes <> nat ind
R8609:8614 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8618:8620 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8615:8615 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8617:8617 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8616:8616 LF.Tactics <> n var
R8621:8621 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8623:8623 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8622:8622 LF.Tactics <> m var
R8600:8602 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8594:8594 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8596:8597 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8599:8599 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8595:8595 LF.Tactics <> n var
R8598:8598 LF.Tactics <> m var
R8603:8603 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8605:8606 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8608:8608 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8604:8604 LF.Tactics <> o var
R8607:8607 LF.Tactics <> o var
prf 8866:8878 <> injection_ex2
R8896:8898 Coq.Init.Datatypes <> nat ind
R8913:8918 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8920:8922 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8919:8919 LF.Tactics <> n var
R8923:8923 LF.Tactics <> m var
R8907:8909 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8904:8904 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8906:8906 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8905:8905 LF.Tactics <> n var
R8910:8910 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8912:8912 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8911:8911 LF.Tactics <> m var
def 9069:9081 <> injection_ex3
R9112:9112 LF.Tactics <> X var
R9122:9125 LF.Poly <> list ind
R9127:9127 LF.Tactics <> X var
R9153:9158 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9174:9179 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9181:9183 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9180:9180 LF.Tactics <> x var
R9184:9184 LF.Tactics <> y var
R9165:9167 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9160:9163 LF.Poly <> :::x_'::'_x not
R9159:9159 LF.Tactics <> y var
R9164:9164 LF.Tactics <> l var
R9169:9172 LF.Poly <> :::x_'::'_x not
R9168:9168 LF.Tactics <> x var
R9173:9173 LF.Tactics <> j var
R9144:9146 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9134:9137 LF.Poly <> :::x_'::'_x not
R9133:9133 LF.Tactics <> x var
R9139:9142 LF.Poly <> :::x_'::'_x not
R9138:9138 LF.Tactics <> y var
R9143:9143 LF.Tactics <> l var
R9148:9151 LF.Poly <> :::x_'::'_x not
R9147:9147 LF.Tactics <> z var
R9152:9152 LF.Tactics <> j var
prf 9983:9989 <> eqb_0_l
R10019:10022 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10024:10026 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10023:10023 LF.Tactics <> n var
R10012:10014 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10007:10010 LF.Basics <> ::nat_scope:x_'=?'_x not
R10011:10011 LF.Tactics <> n var
R10015:10018 LF.Basics <> true constr
prf 10819:10834 <> discriminate_ex1
R10850:10852 Coq.Init.Datatypes <> nat ind
R10865:10870 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10876:10878 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10872:10874 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R10861:10863 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10858:10858 Coq.Init.Datatypes <> S constr
R10860:10860 LF.Tactics <> n var
R10864:10864 Coq.Init.Datatypes <> O constr
prf 10943:10958 <> discriminate_ex2
R10976:10978 Coq.Init.Datatypes <> nat ind
R10996:11001 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11005:11007 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11002:11002 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R11004:11004 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R11003:11003 LF.Tactics <> n var
R11008:11008 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R11010:11010 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R11009:11009 LF.Tactics <> m var
R10989:10991 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10984:10988 LF.Basics <> false constr
R10992:10995 LF.Basics <> true constr
def 11531:11546 <> discriminate_ex3
R11579:11579 LF.Tactics <> X var
R11589:11592 LF.Poly <> list ind
R11594:11594 LF.Tactics <> X var
R11618:11625 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11627:11629 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11626:11626 LF.Tactics <> x var
R11630:11630 LF.Tactics <> z var
R11613:11615 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11603:11606 LF.Poly <> :::x_'::'_x not
R11602:11602 LF.Tactics <> x var
R11608:11611 LF.Poly <> :::x_'::'_x not
R11607:11607 LF.Tactics <> y var
R11612:11612 LF.Tactics <> l var
R11616:11617 LF.Poly <> :::'['_']' not
prf 11993:11999 <> f_equal
R12028:12031 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12032:12032 LF.Tactics <> B var
R12027:12027 LF.Tactics <> A var
R12041:12041 LF.Tactics <> A var
R12052:12055 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12059:12061 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12056:12056 LF.Tactics <> f var
R12058:12058 LF.Tactics <> x var
R12062:12062 LF.Tactics <> f var
R12064:12064 LF.Tactics <> y var
R12048:12050 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12047:12047 LF.Tactics <> x var
R12051:12051 LF.Tactics <> y var
prf 12567:12571 <> S_inj
R12589:12591 Coq.Init.Datatypes <> nat ind
R12599:12602 LF.Basics <> bool ind
R12629:12638 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12645:12647 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12640:12643 LF.Basics <> ::nat_scope:x_'=?'_x not
R12639:12639 LF.Tactics <> n var
R12644:12644 LF.Tactics <> m var
R12648:12648 LF.Tactics <> b var
R12625:12627 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12611:12611 LF.Basics <> ::nat_scope:x_'=?'_x not
R12615:12620 LF.Basics <> ::nat_scope:x_'=?'_x not
R12624:12624 LF.Basics <> ::nat_scope:x_'=?'_x not
R12612:12612 Coq.Init.Datatypes <> S constr
R12614:12614 LF.Tactics <> n var
R12621:12621 Coq.Init.Datatypes <> S constr
R12623:12623 LF.Tactics <> m var
R12628:12628 LF.Tactics <> b var
prf 13474:13480 <> silly3'
R13496:13498 Coq.Init.Datatypes <> nat ind
R13504:13504 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13543:13549 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13565:13571 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13576:13579 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13594:13594 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13572:13575 LF.Basics <> true constr
R13580:13580 LF.Basics <> ::nat_scope:x_'=?'_x not
R13588:13592 LF.Basics <> ::nat_scope:x_'=?'_x not
R13581:13581 Coq.Init.Datatypes <> S constr
R13584:13584 Coq.Init.Datatypes <> S constr
R13586:13586 LF.Tactics <> n var
R13554:13557 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13564:13564 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13550:13553 LF.Basics <> true constr
R13559:13562 LF.Basics <> ::nat_scope:x_'=?'_x not
R13558:13558 LF.Tactics <> n var
R13518:13521 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13536:13538 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13522:13522 LF.Basics <> ::nat_scope:x_'=?'_x not
R13530:13534 LF.Basics <> ::nat_scope:x_'=?'_x not
R13523:13523 Coq.Init.Datatypes <> S constr
R13526:13526 Coq.Init.Datatypes <> S constr
R13528:13528 LF.Tactics <> n var
R13539:13542 LF.Basics <> true constr
R13511:13513 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13506:13509 LF.Basics <> ::nat_scope:x_'=?'_x not
R13505:13505 LF.Tactics <> n var
R13514:13517 LF.Basics <> true constr
prf 14479:14496 <> plus_n_n_injective
R14530:14538 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14540:14542 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14539:14539 LF.Tactics <> n var
R14543:14543 LF.Tactics <> m var
R14522:14524 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14518:14520 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R14517:14517 LF.Tactics <> n var
R14521:14521 LF.Tactics <> n var
R14526:14528 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R14525:14525 LF.Tactics <> m var
R14529:14529 LF.Tactics <> m var
R14780:14788 LF.Induction <> plus_n_Sm thm
R14780:14788 LF.Induction <> plus_n_Sm thm
R14780:14788 LF.Induction <> plus_n_Sm thm
R14807:14815 LF.Induction <> plus_n_Sm thm
R14807:14815 LF.Induction <> plus_n_Sm thm
R14807:14815 LF.Induction <> plus_n_Sm thm
prf 15805:15827 <> double_injective_FAILED
R15867:15875 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15877:15879 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15876:15876 LF.Tactics <> n var
R15880:15880 LF.Tactics <> m var
R15856:15858 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15848:15853 LF.Induction <> double def
R15855:15855 LF.Tactics <> n var
R15859:15864 LF.Induction <> double def
R15866:15866 LF.Tactics <> m var
R16178:16184 LF.Tactics <> f_equal thm
R16178:16184 LF.Tactics <> f_equal thm
prf 18421:18436 <> double_injective
R18476:18484 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18486:18488 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18485:18485 LF.Tactics <> n var
R18489:18489 LF.Tactics <> m var
R18465:18467 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18457:18462 LF.Induction <> double def
R18464:18464 LF.Tactics <> n var
R18468:18473 LF.Induction <> double def
R18475:18475 LF.Tactics <> m var
R19380:19386 LF.Tactics <> f_equal thm
R19380:19386 LF.Tactics <> f_equal thm
prf 20321:20328 <> eqb_true
R20361:20364 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20366:20368 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20365:20365 LF.Tactics <> n var
R20369:20369 LF.Tactics <> m var
R20354:20356 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20349:20352 LF.Basics <> ::nat_scope:x_'=?'_x not
R20348:20348 LF.Tactics <> n var
R20353:20353 LF.Tactics <> m var
R20357:20360 LF.Basics <> true constr
R20596:20602 LF.Tactics <> f_equal thm
R20596:20602 LF.Tactics <> f_equal thm
def 20885:20915 <> manual_grade_for_informal_proof
R20919:20924 Coq.Init.Datatypes <> option ind
R20930:20930 LF.Poly <> ::type_scope:x_'*'_x not
R20927:20929 Coq.Init.Datatypes <> nat ind
R20931:20936 Coq.Strings.String <> string ind
R20942:20945 Coq.Init.Datatypes <> None constr
prf 21277:21305 <> double_injective_take2_FAILED
R21345:21353 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21355:21357 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21354:21354 LF.Tactics <> n var
R21358:21358 LF.Tactics <> m var
R21334:21336 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21326:21331 LF.Induction <> double def
R21333:21333 LF.Tactics <> n var
R21337:21342 LF.Induction <> double def
R21344:21344 LF.Tactics <> m var
R21656:21662 LF.Tactics <> f_equal thm
R21656:21662 LF.Tactics <> f_equal thm
prf 22598:22619 <> double_injective_take2
R22659:22667 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22669:22671 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22668:22668 LF.Tactics <> n var
R22672:22672 LF.Tactics <> m var
R22648:22650 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22640:22645 LF.Induction <> double def
R22647:22647 LF.Tactics <> n var
R22651:22656 LF.Induction <> double def
R22658:22658 LF.Tactics <> m var
R23153:23159 LF.Tactics <> f_equal thm
R23153:23159 LF.Tactics <> f_equal thm
prf 25364:25374 <> eqb_id_true
R25409:25412 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25414:25416 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25413:25413 LF.Tactics <> x var
R25417:25417 LF.Tactics <> y var
R25402:25404 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25392:25397 LF.Lists <> eqb_id def
R25401:25401 LF.Tactics <> y var
R25399:25399 LF.Tactics <> x var
R25405:25408 LF.Basics <> true constr
R25478:25480 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25478:25480 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25493:25500 LF.Tactics <> eqb_true thm
R25493:25500 LF.Tactics <> eqb_true thm
prf 25667:25686 <> nth_error_after_last
R25701:25703 Coq.Init.Datatypes <> nat ind
R25722:25725 LF.Poly <> list ind
R25727:25727 LF.Tactics <> X var
R25748:25756 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25770:25772 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25757:25765 LF.Poly <> nth_error def
R25769:25769 LF.Tactics <> n var
R25767:25767 LF.Tactics <> l var
R25773:25776 Coq.Init.Datatypes <> None constr
R25744:25746 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25736:25741 LF.Poly <> length def
R25743:25743 LF.Tactics <> l var
R25747:25747 LF.Tactics <> n var
def 26330:26335 <> square
R26343:26345 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R26342:26342 LF.Tactics <> n var
R26346:26346 LF.Tactics <> n var
prf 26417:26427 <> square_mult
R26457:26459 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26443:26448 LF.Tactics <> square def
R26452:26454 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R26451:26451 LF.Tactics <> n var
R26455:26455 LF.Tactics <> m var
R26468:26470 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R26460:26465 LF.Tactics <> square def
R26467:26467 LF.Tactics <> n var
R26471:26476 LF.Tactics <> square def
R26478:26478 LF.Tactics <> m var
R26804:26809 LF.Tactics <> square def
R27128:27137 LF.Induction <> mult_assoc thm
R27128:27137 LF.Induction <> mult_assoc thm
R27128:27137 LF.Induction <> mult_assoc thm
R27163:27165 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27159:27161 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R27155:27157 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R27171:27173 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R27167:27169 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R27163:27165 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27159:27161 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R27155:27157 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R27171:27173 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R27167:27169 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R27192:27200 LF.Induction <> mult_comm thm
R27192:27200 LF.Induction <> mult_comm thm
R27192:27200 LF.Induction <> mult_comm thm
R27209:27218 LF.Induction <> mult_assoc thm
R27209:27218 LF.Induction <> mult_assoc thm
R27244:27253 LF.Induction <> mult_assoc thm
R27244:27253 LF.Induction <> mult_assoc thm
R27244:27253 LF.Induction <> mult_assoc thm
def 27636:27638 <> foo
R27644:27646 Coq.Init.Datatypes <> nat ind
prf 27868:27879 <> silly_fact_1
R27902:27904 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27898:27900 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R27893:27895 LF.Tactics <> foo def
R27897:27897 LF.Tactics <> m var
R27916:27918 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R27905:27907 LF.Tactics <> foo def
R27911:27913 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R27910:27910 LF.Tactics <> m var
def 28151:28153 <> bar
R28168:28168 LF.Tactics <> x var
R28179:28179 Coq.Init.Datatypes <> O constr
R28190:28190 Coq.Init.Datatypes <> S constr
prf 28264:28282 <> silly_fact_2_FAILED
R28305:28307 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28301:28303 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R28296:28298 LF.Tactics <> bar def
R28300:28300 LF.Tactics <> m var
R28319:28321 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R28308:28310 LF.Tactics <> bar def
R28314:28316 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R28313:28313 LF.Tactics <> m var
prf 29308:29319 <> silly_fact_2
R29342:29344 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29338:29340 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R29333:29335 LF.Tactics <> bar def
R29337:29337 LF.Tactics <> m var
R29356:29358 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R29345:29347 LF.Tactics <> bar def
R29351:29353 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R29350:29350 LF.Tactics <> m var
prf 29715:29727 <> silly_fact_2'
R29750:29752 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29746:29748 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R29741:29743 LF.Tactics <> bar def
R29745:29745 LF.Tactics <> m var
R29764:29766 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R29753:29755 LF.Tactics <> bar def
R29759:29761 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R29758:29758 LF.Tactics <> m var
R29798:29800 LF.Tactics <> bar def
def 30450:30457 <> sillyfun
R30464:30466 Coq.Init.Datatypes <> nat ind
R30471:30474 LF.Basics <> bool ind
R30485:30488 LF.Basics <> ::nat_scope:x_'=?'_x not
R30484:30484 LF.Tactics <> n var
R30513:30516 LF.Basics <> ::nat_scope:x_'=?'_x not
R30512:30512 LF.Tactics <> n var
R30537:30541 LF.Basics <> false constr
R30524:30528 LF.Basics <> false constr
R30496:30500 LF.Basics <> false constr
prf 30553:30566 <> sillyfun_false
R30582:30584 Coq.Init.Datatypes <> nat ind
R30600:30602 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30590:30597 LF.Tactics <> sillyfun def
R30599:30599 LF.Tactics <> n var
R30603:30607 LF.Basics <> false constr
R30636:30643 LF.Tactics <> sillyfun def
R30659:30662 LF.Basics <> ::nat_scope:x_'=?'_x not
R30659:30662 LF.Basics <> ::nat_scope:x_'=?'_x not
R30751:30754 LF.Basics <> ::nat_scope:x_'=?'_x not
R30751:30754 LF.Basics <> ::nat_scope:x_'=?'_x not
def 31639:31643 <> split
R31663:31666 LF.Poly <> list ind
R31670:31670 LF.Poly <> ::type_scope:x_'*'_x not
R31669:31669 LF.Tactics <> X var
R31671:31671 LF.Tactics <> Y var
R31692:31692 LF.Poly <> ::type_scope:x_'*'_x not
R31699:31703 LF.Poly <> ::type_scope:x_'*'_x not
R31710:31710 LF.Poly <> ::type_scope:x_'*'_x not
R31693:31696 LF.Poly <> list ind
R31698:31698 LF.Tactics <> X var
R31704:31707 LF.Poly <> list ind
R31709:31709 LF.Tactics <> Y var
R31723:31723 LF.Tactics <> l var
R31734:31735 LF.Poly <> :::'['_']' not
R31740:31740 LF.Poly <> :::'('_x_','_x_')' not
R31743:31744 LF.Poly <> :::'('_x_','_x_')' not
R31747:31747 LF.Poly <> :::'('_x_','_x_')' not
R31741:31742 LF.Poly <> :::'['_']' not
R31745:31746 LF.Poly <> :::'['_']' not
R31759:31762 LF.Poly <> :::x_'::'_x not
R31753:31753 LF.Poly <> :::'('_x_','_x_')' not
R31755:31756 LF.Poly <> :::'('_x_','_x_')' not
R31758:31758 LF.Poly <> :::'('_x_','_x_')' not
R31780:31784 LF.Tactics <> split def
R31801:31801 LF.Poly <> :::'('_x_','_x_')' not
R31804:31805 LF.Poly <> :::'('_x_','_x_')' not
R31808:31808 LF.Poly <> :::'('_x_','_x_')' not
R31813:31813 LF.Poly <> :::'('_x_','_x_')' not
R31821:31822 LF.Poly <> :::'('_x_','_x_')' not
R31830:31830 LF.Poly <> :::'('_x_','_x_')' not
R31815:31818 LF.Poly <> :::x_'::'_x not
R31824:31827 LF.Poly <> :::x_'::'_x not
prf 31937:31946 <> app_helper
R31967:31970 LF.Poly <> list ind
R31972:31972 LF.Tactics <> X var
R31979:31979 LF.Tactics <> X var
R31992:31995 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32001:32003 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31997:31998 LF.Poly <> :::x_'::'_x not
R31996:31996 LF.Tactics <> n var
R31999:32000 LF.Tactics <> l1 var
R32005:32006 LF.Poly <> :::x_'::'_x not
R32004:32004 LF.Tactics <> n var
R32007:32008 LF.Tactics <> l2 var
R31987:31989 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31985:31986 LF.Tactics <> l1 var
R31990:31991 LF.Tactics <> l2 var
prf 32092:32104 <> combine_split
R32124:32127 LF.Poly <> list ind
R32131:32133 LF.Poly <> ::type_scope:x_'*'_x not
R32130:32130 LF.Tactics <> X var
R32134:32134 LF.Tactics <> Y var
R32165:32170 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32184:32186 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32171:32177 LF.Poly <> combine def
R32182:32183 LF.Tactics <> l2 var
R32179:32180 LF.Tactics <> l1 var
R32187:32187 LF.Tactics <> l var
R32154:32156 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32147:32151 LF.Tactics <> split def
R32153:32153 LF.Tactics <> l var
R32157:32157 LF.Poly <> :::'('_x_','_x_')' not
R32160:32161 LF.Poly <> :::'('_x_','_x_')' not
R32164:32164 LF.Poly <> :::'('_x_','_x_')' not
R32158:32159 LF.Tactics <> l1 var
R32162:32163 LF.Tactics <> l2 var
R32380:32384 LF.Tactics <> split def
R32380:32384 LF.Tactics <> split def
R32503:32512 LF.Tactics <> app_helper thm
R32503:32512 LF.Tactics <> app_helper thm
def 33054:33062 <> sillyfun1
R33069:33071 Coq.Init.Datatypes <> nat ind
R33076:33079 LF.Basics <> bool ind
R33090:33093 LF.Basics <> ::nat_scope:x_'=?'_x not
R33089:33089 LF.Tactics <> n var
R33117:33120 LF.Basics <> ::nat_scope:x_'=?'_x not
R33116:33116 LF.Tactics <> n var
R33140:33144 LF.Basics <> false constr
R33128:33131 LF.Basics <> true constr
R33101:33104 LF.Basics <> true constr
prf 33370:33389 <> sillyfun1_odd_FAILED
R33405:33407 Coq.Init.Datatypes <> nat ind
R33434:33442 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33449:33451 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33443:33446 LF.Basics <> oddb def
R33448:33448 LF.Tactics <> n var
R33452:33455 LF.Basics <> true constr
R33427:33429 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33416:33424 LF.Tactics <> sillyfun1 def
R33426:33426 LF.Tactics <> n var
R33430:33433 LF.Basics <> true constr
R33487:33495 LF.Tactics <> sillyfun1 def
R33517:33520 LF.Basics <> ::nat_scope:x_'=?'_x not
R33517:33520 LF.Basics <> ::nat_scope:x_'=?'_x not
prf 34320:34332 <> sillyfun1_odd
R34348:34350 Coq.Init.Datatypes <> nat ind
R34377:34385 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34392:34394 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34386:34389 LF.Basics <> oddb def
R34391:34391 LF.Tactics <> n var
R34395:34398 LF.Basics <> true constr
R34370:34372 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34359:34367 LF.Tactics <> sillyfun1 def
R34369:34369 LF.Tactics <> n var
R34373:34376 LF.Basics <> true constr
R34430:34438 LF.Tactics <> sillyfun1 def
R34460:34463 LF.Basics <> ::nat_scope:x_'=?'_x not
R34460:34463 LF.Basics <> ::nat_scope:x_'=?'_x not
R34709:34716 LF.Tactics <> eqb_true thm
R34709:34716 LF.Tactics <> eqb_true thm
R35007:35010 LF.Basics <> ::nat_scope:x_'=?'_x not
R35007:35010 LF.Basics <> ::nat_scope:x_'=?'_x not
R35067:35074 LF.Tactics <> eqb_true thm
R35067:35074 LF.Tactics <> eqb_true thm
prf 35251:35272 <> bool_fn_applied_thrice
R35294:35297 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35298:35301 LF.Basics <> bool ind
R35290:35293 LF.Basics <> bool ind
R35309:35312 LF.Basics <> bool ind
R35329:35331 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35318:35318 LF.Tactics <> f var
R35321:35321 LF.Tactics <> f var
R35324:35324 LF.Tactics <> f var
R35326:35326 LF.Tactics <> b var
R35332:35332 LF.Tactics <> f var
R35334:35334 LF.Tactics <> b var
R35395:35398 LF.Basics <> true constr
R35395:35398 LF.Basics <> true constr
R35455:35459 LF.Basics <> false constr
R35455:35459 LF.Basics <> false constr
R35522:35526 LF.Basics <> false constr
R35522:35526 LF.Basics <> false constr
R35557:35560 LF.Basics <> true constr
R35557:35560 LF.Basics <> true constr
prf 38077:38083 <> eqb_sym
R38101:38103 Coq.Init.Datatypes <> nat ind
R38109:38109 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38116:38120 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38127:38127 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38111:38114 LF.Basics <> ::nat_scope:x_'=?'_x not
R38110:38110 LF.Tactics <> n var
R38115:38115 LF.Tactics <> m var
R38122:38125 LF.Basics <> ::nat_scope:x_'=?'_x not
R38121:38121 LF.Tactics <> m var
R38126:38126 LF.Tactics <> n var
prf 38629:38637 <> eqb_trans
R38670:38675 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R38689:38694 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R38701:38703 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38696:38699 LF.Basics <> ::nat_scope:x_'=?'_x not
R38695:38695 LF.Tactics <> n var
R38700:38700 LF.Tactics <> p var
R38704:38707 LF.Basics <> true constr
R38682:38684 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38677:38680 LF.Basics <> ::nat_scope:x_'=?'_x not
R38676:38676 LF.Tactics <> m var
R38681:38681 LF.Tactics <> p var
R38685:38688 LF.Basics <> true constr
R38663:38665 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38658:38661 LF.Basics <> ::nat_scope:x_'=?'_x not
R38657:38657 LF.Tactics <> n var
R38662:38662 LF.Tactics <> m var
R38666:38669 LF.Basics <> true constr
def 39917:39939 <> split_combine_statement
R39971:39974 LF.Poly <> list ind
R39976:39976 LF.Tactics <> X var
R40009:40012 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40034:40036 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40013:40017 LF.Tactics <> split def
R40020:40026 LF.Poly <> combine def
R40031:40032 LF.Tactics <> l2 var
R40028:40029 LF.Tactics <> l1 var
R40037:40037 LF.Poly <> :::'('_x_','_x_')' not
R40040:40041 LF.Poly <> :::'('_x_','_x_')' not
R40044:40044 LF.Poly <> :::'('_x_','_x_')' not
R40038:40039 LF.Tactics <> l1 var
R40042:40043 LF.Tactics <> l2 var
R39984:39984 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39994:39998 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40008:40008 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39985:39990 LF.Poly <> length def
R39992:39993 LF.Tactics <> l1 var
R39999:40004 LF.Poly <> length def
R40006:40007 LF.Tactics <> l2 var
prf 40056:40068 <> split_combine
R40072:40094 LF.Tactics <> split_combine_statement def
R40113:40135 LF.Tactics <> split_combine_statement def
R40399:40401 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40375:40381 LF.Poly <> combine def
R40394:40395 LF.Poly <> :::x_'::'_x not
R40385:40386 LF.Poly <> :::x_'::'_x not
R40409:40412 LF.Poly <> :::x_'::'_x not
R40402:40402 LF.Poly <> :::'('_x_','_x_')' not
R40404:40405 LF.Poly <> :::'('_x_','_x_')' not
R40408:40408 LF.Poly <> :::'('_x_','_x_')' not
R40413:40419 LF.Poly <> combine def
R40399:40401 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40375:40381 LF.Poly <> combine def
R40394:40395 LF.Poly <> :::x_'::'_x not
R40385:40386 LF.Poly <> :::x_'::'_x not
R40409:40412 LF.Poly <> :::x_'::'_x not
R40402:40402 LF.Poly <> :::'('_x_','_x_')' not
R40404:40405 LF.Poly <> :::'('_x_','_x_')' not
R40408:40408 LF.Poly <> :::'('_x_','_x_')' not
R40413:40419 LF.Poly <> combine def
def 40557:40586 <> manual_grade_for_split_combine
R40590:40595 Coq.Init.Datatypes <> option ind
R40601:40601 LF.Poly <> ::type_scope:x_'*'_x not
R40598:40600 Coq.Init.Datatypes <> nat ind
R40602:40607 Coq.Strings.String <> string ind
R40613:40616 Coq.Init.Datatypes <> None constr
prf 40796:40810 <> filter_exercise
R40841:40844 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40845:40848 LF.Basics <> bool ind
R40840:40840 LF.Tactics <> X var
R40885:40885 LF.Tactics <> X var
R40896:40899 LF.Poly <> list ind
R40901:40901 LF.Tactics <> X var
R40933:40941 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40948:40950 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40942:40945 LF.Tactics <> test var
R40947:40947 LF.Tactics <> x var
R40951:40954 LF.Basics <> true constr
R40923:40925 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40910:40915 LF.Poly <> filter def
R40922:40922 LF.Tactics <> l var
R40917:40920 LF.Tactics <> test var
R40927:40930 LF.Poly <> :::x_'::'_x not
R40926:40926 LF.Tactics <> x var
R40931:40932 LF.Tactics <> lf var
def 42101:42107 <> forallb
R42129:42132 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42133:42136 LF.Basics <> bool ind
R42128:42128 LF.Tactics <> X var
R42144:42147 LF.Poly <> list ind
R42149:42149 LF.Tactics <> X var
R42154:42157 LF.Basics <> bool ind
R42172:42172 LF.Tactics <> l var
R42183:42185 LF.Poly <> nil constr
R42190:42193 LF.Basics <> true constr
R42200:42203 LF.Poly <> :::x_'::'_x not
R42209:42212 LF.Basics <> andb def
R42224:42230 LF.Tactics <> forallb def
R42232:42235 LF.Tactics <> test var
R42215:42218 LF.Tactics <> test var
def 42256:42269 <> test_forallb_1
R42297:42299 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42273:42279 LF.Tactics <> forallb def
R42286:42286 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42288:42288 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42290:42290 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42292:42292 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42294:42294 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42296:42296 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42281:42284 LF.Basics <> oddb def
R42300:42303 LF.Basics <> true constr
def 42340:42353 <> test_forallb_2
R42383:42385 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42357:42363 LF.Tactics <> forallb def
R42370:42370 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42376:42376 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42382:42382 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42371:42375 LF.Basics <> false constr
R42377:42381 LF.Basics <> false constr
R42365:42368 LF.Basics <> negb def
R42386:42389 LF.Basics <> true constr
def 42426:42439 <> test_forallb_3
R42466:42468 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42443:42449 LF.Tactics <> forallb def
R42457:42457 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42459:42459 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42461:42461 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42463:42463 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42465:42465 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42451:42455 LF.Basics <> evenb def
R42469:42473 LF.Basics <> false constr
def 42510:42523 <> test_forallb_4
R42545:42547 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42527:42533 LF.Tactics <> forallb def
R42543:42544 LF.Poly <> :::'['_']' not
R42536:42538 LF.Basics <> eqb def
R42548:42551 LF.Basics <> true constr
def 42589:42595 <> existsb
R42617:42620 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42621:42624 LF.Basics <> bool ind
R42616:42616 LF.Tactics <> X var
R42632:42635 LF.Poly <> list ind
R42637:42637 LF.Tactics <> X var
R42642:42645 LF.Basics <> bool ind
R42660:42660 LF.Tactics <> l var
R42671:42673 LF.Poly <> nil constr
R42678:42682 LF.Basics <> false constr
R42689:42692 LF.Poly <> :::x_'::'_x not
R42698:42700 LF.Basics <> orb def
R42712:42718 LF.Tactics <> existsb def
R42720:42723 LF.Tactics <> test var
R42703:42706 LF.Tactics <> test var
def 42744:42757 <> test_existsb_1
R42786:42788 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42761:42767 LF.Tactics <> existsb def
R42777:42777 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42779:42779 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42781:42781 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42783:42783 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42785:42785 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42770:42772 LF.Basics <> eqb def
R42789:42793 LF.Basics <> false constr
def 42830:42843 <> test_existsb_2
R42884:42886 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42847:42853 LF.Tactics <> existsb def
R42867:42867 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42872:42872 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42877:42877 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42883:42883 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42868:42871 LF.Basics <> true constr
R42873:42876 LF.Basics <> true constr
R42878:42882 LF.Basics <> false constr
R42856:42859 LF.Basics <> andb def
R42861:42864 LF.Basics <> true constr
R42887:42890 LF.Basics <> true constr
def 42927:42940 <> test_existsb_3
R42970:42972 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42944:42950 LF.Tactics <> existsb def
R42957:42957 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42959:42959 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42961:42961 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42963:42963 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42965:42965 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42967:42967 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42969:42969 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42952:42955 LF.Basics <> oddb def
R42973:42976 LF.Basics <> true constr
def 43013:43026 <> test_existsb_4
R43046:43048 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43030:43036 LF.Tactics <> existsb def
R43044:43045 LF.Poly <> :::'['_']' not
R43038:43042 LF.Basics <> evenb def
R43049:43053 LF.Basics <> false constr
def 43093:43100 <> existsb'
R43122:43125 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43126:43129 LF.Basics <> bool ind
R43121:43121 LF.Tactics <> X var
R43137:43140 LF.Poly <> list ind
R43142:43142 LF.Tactics <> X var
R43147:43150 LF.Basics <> bool ind
R43157:43160 LF.Basics <> negb def
R43163:43169 LF.Tactics <> forallb def
R43196:43196 LF.Tactics <> l var
R43181:43184 LF.Basics <> negb def
R43187:43190 LF.Tactics <> test var
R43192:43192 LF.Tactics <> n var
prf 43209:43224 <> existsb_existsb'
R43255:43258 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43259:43262 LF.Basics <> bool ind
R43254:43254 LF.Tactics <> X var
R43270:43273 LF.Poly <> list ind
R43275:43275 LF.Tactics <> X var
R43295:43297 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43281:43287 LF.Tactics <> existsb def
R43294:43294 LF.Tactics <> l var
R43289:43292 LF.Tactics <> test var
R43298:43305 LF.Tactics <> existsb' def
R43312:43312 LF.Tactics <> l var
R43307:43310 LF.Tactics <> test var
R43425:43432 LF.Tactics <> existsb' def
R43486:43493 LF.Tactics <> existsb' def
R43536:43539 LF.Basics <> negb def
R43542:43548 LF.Tactics <> forallb def
R43563:43566 LF.Basics <> negb def
R43574:43574 LF.Tactics <> n var
R43588:43595 LF.Tactics <> existsb' def
R43536:43539 LF.Basics <> negb def
R43542:43548 LF.Tactics <> forallb def
R43563:43566 LF.Basics <> negb def
R43574:43574 LF.Tactics <> n var
R43588:43595 LF.Tactics <> existsb' def
