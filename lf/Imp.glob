DIGEST 1858aced57333cf7f492e2a9141ea3ec
FLF.Imp
R872:880 Coq.Bool.Bool <> <> lib
R907:914 Coq.Init.Nat <> <> lib
R941:951 Coq.Arith.Arith <> <> lib
R978:988 Coq.Arith.EqNat <> <> lib
R1015:1025 Coq.omega.Omega <> <> lib
R1052:1061 Coq.Lists.List <> <> lib
R1088:1101 Coq.Strings.String <> <> lib
R1150:1153 LF.Maps <> <> lib
mod 1639:1642 <> AExp
ind 1759:1762 AExp aexp
constr 1778:1781 AExp ANum
constr 1797:1801 AExp APlus
constr 1822:1827 AExp AMinus
constr 1848:1852 AExp AMult
R1788:1790 Coq.Init.Datatypes <> nat ind
R1792:1792 LF.Imp <> aexp ind
R1812:1815 LF.Imp <> aexp ind
R1817:1817 LF.Imp <> aexp ind
R1838:1841 LF.Imp <> aexp ind
R1843:1843 LF.Imp <> aexp ind
R1863:1866 LF.Imp <> aexp ind
R1868:1868 LF.Imp <> aexp ind
ind 1881:1884 AExp bexp
constr 1900:1904 AExp BTrue
constr 1910:1915 AExp BFalse
constr 1921:1923 AExp BEq
constr 1944:1946 AExp BLe
constr 1967:1970 AExp BNot
constr 1987:1990 AExp BAnd
R1905:1905 LF.Imp <> bexp ind
R1916:1916 LF.Imp <> bexp ind
R1934:1937 LF.Imp AExp aexp ind
R1939:1939 LF.Imp <> bexp ind
R1957:1960 LF.Imp AExp aexp ind
R1962:1962 LF.Imp <> bexp ind
R1977:1980 LF.Imp <> bexp ind
R1982:1982 LF.Imp <> bexp ind
R2001:2004 LF.Imp <> bexp ind
R2006:2006 LF.Imp <> bexp ind
def 4624:4628 AExp aeval
R4635:4638 LF.Imp AExp aexp ind
R4643:4645 Coq.Init.Datatypes <> nat ind
R4658:4658 LF.Imp <> a var
R4669:4672 LF.Imp AExp ANum constr
R4685:4689 LF.Imp AExp APlus constr
R4701:4701 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R4710:4714 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R4723:4723 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R4702:4706 LF.Imp <> aeval def
R4715:4719 LF.Imp <> aeval def
R4729:4734 LF.Imp AExp AMinus constr
R4745:4745 Coq.Init.Peano <> ::nat_scope:x_'-'_x not
R4754:4758 Coq.Init.Peano <> ::nat_scope:x_'-'_x not
R4767:4767 Coq.Init.Peano <> ::nat_scope:x_'-'_x not
R4746:4750 LF.Imp <> aeval def
R4759:4763 LF.Imp <> aeval def
R4773:4777 LF.Imp AExp AMult constr
R4789:4789 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R4798:4802 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R4811:4811 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R4790:4794 LF.Imp <> aeval def
R4803:4807 LF.Imp <> aeval def
def 4829:4839 AExp test_aeval1
R4875:4877 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4844:4848 LF.Imp AExp aeval def
R4851:4855 LF.Imp AExp APlus constr
R4867:4870 LF.Imp AExp ANum constr
R4858:4861 LF.Imp AExp ANum constr
def 4985:4989 AExp beval
R4996:4999 LF.Imp AExp bexp ind
R5004:5007 Coq.Init.Datatypes <> bool ind
R5020:5020 LF.Imp <> b var
R5031:5035 LF.Imp AExp BTrue constr
R5046:5049 Coq.Init.Datatypes <> true constr
R5055:5060 LF.Imp AExp BFalse constr
R5070:5074 Coq.Init.Datatypes <> false constr
R5080:5082 LF.Imp AExp BEq constr
R5095:5095 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R5104:5109 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R5118:5118 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R5096:5100 LF.Imp AExp aeval def
R5110:5114 LF.Imp AExp aeval def
R5124:5126 LF.Imp AExp BLe constr
R5139:5139 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R5148:5154 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R5163:5163 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R5140:5144 LF.Imp AExp aeval def
R5155:5159 LF.Imp AExp aeval def
R5169:5172 LF.Imp AExp BNot constr
R5184:5187 Coq.Init.Datatypes <> negb def
R5190:5194 LF.Imp <> beval def
R5204:5207 LF.Imp AExp BAnd constr
R5219:5222 Coq.Init.Datatypes <> andb def
R5236:5240 LF.Imp <> beval def
R5225:5229 LF.Imp <> beval def
def 5651:5664 AExp optimize_0plus
R5669:5672 LF.Imp AExp aexp ind
R5677:5680 LF.Imp AExp aexp ind
R5693:5693 LF.Imp <> a var
R5704:5707 LF.Imp AExp ANum constr
R5714:5717 LF.Imp AExp ANum constr
R5725:5729 LF.Imp AExp APlus constr
R5732:5735 LF.Imp AExp ANum constr
R5746:5759 LF.Imp <> optimize_0plus def
R5768:5772 LF.Imp AExp APlus constr
R5784:5788 LF.Imp AExp APlus constr
R5812:5825 LF.Imp <> optimize_0plus def
R5792:5805 LF.Imp <> optimize_0plus def
R5835:5840 LF.Imp AExp AMinus constr
R5851:5856 LF.Imp AExp AMinus constr
R5879:5892 LF.Imp <> optimize_0plus def
R5859:5872 LF.Imp <> optimize_0plus def
R5902:5906 LF.Imp AExp AMult constr
R5918:5922 LF.Imp AExp AMult constr
R5946:5959 LF.Imp <> optimize_0plus def
R5926:5939 LF.Imp <> optimize_0plus def
def 6112:6130 AExp test_optimize_0plus
R6264:6268 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6135:6148 LF.Imp AExp optimize_0plus def
R6151:6155 LF.Imp AExp APlus constr
R6191:6195 LF.Imp AExp APlus constr
R6238:6242 LF.Imp AExp APlus constr
R6254:6257 LF.Imp AExp ANum constr
R6245:6248 LF.Imp AExp ANum constr
R6198:6201 LF.Imp AExp ANum constr
R6158:6161 LF.Imp AExp ANum constr
R6269:6273 LF.Imp AExp APlus constr
R6285:6288 LF.Imp AExp ANum constr
R6276:6279 LF.Imp AExp ANum constr
prf 6508:6527 AExp optimize_0plus_sound
R6566:6568 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6542:6546 LF.Imp AExp aeval def
R6549:6562 LF.Imp AExp optimize_0plus def
R6564:6564 LF.Imp <> a var
R6569:6573 LF.Imp AExp aeval def
R6575:6575 LF.Imp <> a var
prf 8716:8721 AExp silly1
R8744:8746 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8736:8740 LF.Imp AExp aeval def
R8742:8743 LF.Imp <> ae var
R8747:8751 LF.Imp AExp aeval def
R8753:8754 LF.Imp <> ae var
prf 8831:8836 AExp silly2
R8860:8863 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8864:8864 LF.Imp <> P var
R8859:8859 LF.Imp <> P var
prf 9605:9607 AExp foo
R9628:9630 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9622:9626 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R9627:9627 LF.Imp <> n var
R9631:9634 Coq.Init.Datatypes <> true constr
prf 9881:9884 AExp foo'
R9905:9907 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9899:9903 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R9904:9904 LF.Imp <> n var
R9908:9911 Coq.Init.Datatypes <> true constr
prf 10248:10268 AExp optimize_0plus_sound'
R10307:10309 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10283:10287 LF.Imp AExp aeval def
R10290:10303 LF.Imp AExp optimize_0plus def
R10305:10305 LF.Imp <> a var
R10310:10314 LF.Imp AExp aeval def
R10316:10316 LF.Imp <> a var
prf 13149:13170 AExp optimize_0plus_sound''
R13209:13211 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13185:13189 LF.Imp AExp aeval def
R13192:13205 LF.Imp AExp optimize_0plus def
R13207:13207 LF.Imp <> a var
R13212:13216 LF.Imp AExp aeval def
R13218:13218 LF.Imp <> a var
prf 14584:14587 AExp In10
R14591:14592 Coq.Lists.List <> In def
R14597:14597 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14599:14599 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14601:14601 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14603:14603 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14605:14605 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14607:14607 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14609:14609 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14611:14611 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14613:14613 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14615:14615 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14618:14618 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
prf 14883:14887 AExp In10'
R14891:14892 Coq.Lists.List <> In def
R14897:14897 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14899:14899 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14901:14901 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14903:14903 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14905:14905 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14907:14907 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14909:14909 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14911:14911 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14913:14913 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14915:14915 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14918:14918 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
def 16159:16174 AExp optimize_0plus_b
R16181:16184 LF.Imp AExp bexp ind
R16189:16192 LF.Imp AExp bexp ind
R16205:16205 LF.Imp <> b var
R16216:16220 LF.Imp AExp BTrue constr
R16225:16229 LF.Imp AExp BTrue constr
R16235:16240 LF.Imp AExp BFalse constr
R16245:16250 LF.Imp AExp BFalse constr
R16256:16258 LF.Imp AExp BEq constr
R16269:16271 LF.Imp AExp BEq constr
R16294:16307 LF.Imp AExp optimize_0plus def
R16274:16287 LF.Imp AExp optimize_0plus def
R16317:16319 LF.Imp AExp BLe constr
R16330:16332 LF.Imp AExp BLe constr
R16355:16368 LF.Imp AExp optimize_0plus def
R16335:16348 LF.Imp AExp optimize_0plus def
R16378:16381 LF.Imp AExp BNot constr
R16388:16391 LF.Imp AExp BNot constr
R16394:16409 LF.Imp <> optimize_0plus_b def
R16411:16411 LF.Imp <> b var
R16418:16421 LF.Imp AExp BAnd constr
R16432:16435 LF.Imp AExp BAnd constr
R16460:16475 LF.Imp <> optimize_0plus_b def
R16438:16453 LF.Imp <> optimize_0plus_b def
prf 16497:16518 AExp optimize_0plus_b_sound
R16560:16562 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16534:16538 LF.Imp AExp beval def
R16541:16556 LF.Imp AExp optimize_0plus_b def
R16558:16558 LF.Imp <> b var
R16563:16567 LF.Imp AExp beval def
R16569:16569 LF.Imp <> b var
R16656:16675 LF.Imp AExp optimize_0plus_sound thm
R16686:16705 LF.Imp AExp optimize_0plus_sound thm
R16656:16675 LF.Imp AExp optimize_0plus_sound thm
R16656:16675 LF.Imp AExp optimize_0plus_sound thm
R16686:16705 LF.Imp AExp optimize_0plus_sound thm
R16686:16705 LF.Imp AExp optimize_0plus_sound thm
R16656:16675 LF.Imp AExp optimize_0plus_sound thm
R16656:16675 LF.Imp AExp optimize_0plus_sound thm
R16686:16705 LF.Imp AExp optimize_0plus_sound thm
R16686:16705 LF.Imp AExp optimize_0plus_sound thm
R16656:16675 LF.Imp AExp optimize_0plus_sound thm
R16656:16675 LF.Imp AExp optimize_0plus_sound thm
def 19790:19813 AExp silly_presburger_example
R19866:19871 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19873:19876 Coq.Init.Peano <> ::nat_scope:x_'<='_x not
R19872:19872 LF.Imp <> m var
R19877:19877 LF.Imp <> p var
R19849:19852 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R19840:19843 Coq.Init.Peano <> ::nat_scope:x_'<='_x not
R19836:19838 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R19835:19835 LF.Imp <> m var
R19839:19839 LF.Imp <> n var
R19845:19847 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R19844:19844 LF.Imp <> n var
R19848:19848 LF.Imp <> o var
R19858:19860 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19854:19856 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R19853:19853 LF.Imp <> o var
R19862:19864 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R19861:19861 LF.Imp <> p var
mod 21849:21864 <> AExp.aevalR_first_try
ind 21878:21883 AExp.aevalR_first_try aevalR
constr 21914:21919 AExp.aevalR_first_try E_ANum
constr 21953:21959 AExp.aevalR_first_try E_APlus
constr 22075:22082 AExp.aevalR_first_try E_AMinus
constr 22199:22205 AExp.aevalR_first_try E_AMult
R21891:21894 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21898:21901 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21895:21897 Coq.Init.Datatypes <> nat ind
R21887:21890 LF.Imp AExp aexp ind
R21931:21936 LF.Imp <> aevalR ind
R21947:21947 LF.Imp <> n var
R21939:21942 LF.Imp AExp ANum constr
R21944:21944 LF.Imp <> n var
R21969:21972 LF.Imp AExp aexp ind
R21983:21985 Coq.Init.Datatypes <> nat ind
R22008:22017 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22030:22039 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22040:22045 LF.Imp <> aevalR ind
R22064:22066 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R22062:22063 LF.Imp <> n1 var
R22067:22068 LF.Imp <> n2 var
R22048:22052 LF.Imp AExp APlus constr
R22057:22058 LF.Imp <> e2 var
R22054:22055 LF.Imp <> e1 var
R22018:22023 LF.Imp <> aevalR ind
R22028:22029 LF.Imp <> n2 var
R22025:22026 LF.Imp <> e2 var
R21996:22001 LF.Imp <> aevalR ind
R22006:22007 LF.Imp <> n1 var
R22003:22004 LF.Imp <> e1 var
R22092:22095 LF.Imp AExp aexp ind
R22106:22108 Coq.Init.Datatypes <> nat ind
R22131:22140 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22153:22162 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22163:22168 LF.Imp <> aevalR ind
R22188:22190 Coq.Init.Peano <> ::nat_scope:x_'-'_x not
R22186:22187 LF.Imp <> n1 var
R22191:22192 LF.Imp <> n2 var
R22171:22176 LF.Imp AExp AMinus constr
R22181:22182 LF.Imp <> e2 var
R22178:22179 LF.Imp <> e1 var
R22141:22146 LF.Imp <> aevalR ind
R22151:22152 LF.Imp <> n2 var
R22148:22149 LF.Imp <> e2 var
R22119:22124 LF.Imp <> aevalR ind
R22129:22130 LF.Imp <> n1 var
R22126:22127 LF.Imp <> e1 var
R22215:22218 LF.Imp AExp aexp ind
R22229:22231 Coq.Init.Datatypes <> nat ind
R22254:22263 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22276:22285 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22286:22291 LF.Imp <> aevalR ind
R22310:22312 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R22308:22309 LF.Imp <> n1 var
R22313:22314 LF.Imp <> n2 var
R22294:22298 LF.Imp AExp AMult constr
R22303:22304 LF.Imp <> e2 var
R22300:22301 LF.Imp <> e1 var
R22264:22269 LF.Imp <> aevalR ind
R22274:22275 LF.Imp <> n2 var
R22271:22272 LF.Imp <> e2 var
R22242:22247 LF.Imp <> aevalR ind
R22252:22253 LF.Imp <> n1 var
R22249:22250 LF.Imp <> e1 var
mod 22326:22338 <> AExp.aevalR_first_try.TooHardToRead
ind 22515:22520 AExp.aevalR_first_try.TooHardToRead aevalR
constr 22551:22556 AExp.aevalR_first_try.TooHardToRead E_ANum
constr 22590:22596 AExp.aevalR_first_try.TooHardToRead E_APlus
constr 22720:22727 AExp.aevalR_first_try.TooHardToRead E_AMinus
constr 22852:22858 AExp.aevalR_first_try.TooHardToRead E_AMult
R22528:22531 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22535:22538 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22532:22534 Coq.Init.Datatypes <> nat ind
R22524:22527 LF.Imp AExp aexp ind
R22568:22573 LF.Imp <> aevalR ind
R22584:22584 LF.Imp <> n var
R22576:22579 LF.Imp AExp ANum constr
R22581:22581 LF.Imp <> n var
R22606:22609 LF.Imp AExp aexp ind
R22620:22622 Coq.Init.Datatypes <> nat ind
R22637:22642 LF.Imp <> aevalR ind
R22647:22648 LF.Imp <> n1 var
R22644:22645 LF.Imp <> e1 var
R22663:22668 LF.Imp <> aevalR ind
R22673:22674 LF.Imp <> n2 var
R22670:22671 LF.Imp <> e2 var
R22685:22690 LF.Imp <> aevalR ind
R22709:22711 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R22707:22708 LF.Imp <> n1 var
R22712:22713 LF.Imp <> n2 var
R22693:22697 LF.Imp AExp APlus constr
R22702:22703 LF.Imp <> e2 var
R22699:22700 LF.Imp <> e1 var
R22737:22740 LF.Imp AExp aexp ind
R22751:22753 Coq.Init.Datatypes <> nat ind
R22768:22773 LF.Imp <> aevalR ind
R22778:22779 LF.Imp <> n1 var
R22775:22776 LF.Imp <> e1 var
R22794:22799 LF.Imp <> aevalR ind
R22804:22805 LF.Imp <> n2 var
R22801:22802 LF.Imp <> e2 var
R22816:22821 LF.Imp <> aevalR ind
R22841:22843 Coq.Init.Peano <> ::nat_scope:x_'-'_x not
R22839:22840 LF.Imp <> n1 var
R22844:22845 LF.Imp <> n2 var
R22824:22829 LF.Imp AExp AMinus constr
R22834:22835 LF.Imp <> e2 var
R22831:22832 LF.Imp <> e1 var
R22868:22871 LF.Imp AExp aexp ind
R22882:22884 Coq.Init.Datatypes <> nat ind
R22899:22904 LF.Imp <> aevalR ind
R22909:22910 LF.Imp <> n1 var
R22906:22907 LF.Imp <> e1 var
R22925:22930 LF.Imp <> aevalR ind
R22935:22936 LF.Imp <> n2 var
R22932:22933 LF.Imp <> e2 var
R22947:22952 LF.Imp <> aevalR ind
R22971:22973 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R22969:22970 LF.Imp <> n1 var
R22974:22975 LF.Imp <> n2 var
R22955:22959 LF.Imp AExp AMult constr
R22964:22965 LF.Imp <> e2 var
R22961:22962 LF.Imp <> e1 var
R23242:23254 LF.Imp AExp.aevalR_first_try.TooHardToRead <> mod
R23454:23459 LF.Imp AExp.aevalR_first_try aevalR ind
not 23430:23430 AExp.aevalR_first_try ::type_scope:x_'\\'_x
R23540:23555 LF.Imp AExp.aevalR_first_try <> mod
ind 24086:24091 AExp aevalR
constr 24122:24127 AExp E_ANum
constr 24165:24171 AExp E_APlus
constr 24269:24276 AExp E_AMinus
constr 24375:24381 AExp E_AMult
R24099:24102 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24106:24109 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24103:24105 Coq.Init.Datatypes <> nat ind
R24095:24098 LF.Imp AExp aexp ind
R24499:24504 LF.Imp <> aevalR ind
R24134:24136 Coq.Init.Datatypes <> nat ind
R24147:24147 LF.Imp AExp ::type_scope:x_'\\'_x not
R24154:24158 LF.Imp AExp ::type_scope:x_'\\'_x not
R24148:24151 LF.Imp AExp ANum constr
R24153:24153 LF.Imp <> n var
R24159:24159 LF.Imp <> n var
R24182:24185 LF.Imp AExp aexp ind
R24197:24199 Coq.Init.Datatypes <> nat ind
R24210:24210 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24219:24223 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24224:24224 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24233:24237 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24238:24238 LF.Imp AExp ::type_scope:x_'\\'_x not
R24250:24255 LF.Imp AExp ::type_scope:x_'\\'_x not
R24263:24263 LF.Imp AExp ::type_scope:x_'\\'_x not
R24239:24243 LF.Imp AExp APlus constr
R24248:24249 LF.Imp <> e2 var
R24245:24246 LF.Imp <> e1 var
R24258:24260 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R24256:24257 LF.Imp <> n1 var
R24261:24262 LF.Imp <> n2 var
R24227:24230 LF.Imp AExp ::type_scope:x_'\\'_x not
R24225:24226 LF.Imp <> e2 var
R24231:24232 LF.Imp <> n2 var
R24213:24216 LF.Imp AExp ::type_scope:x_'\\'_x not
R24211:24212 LF.Imp <> e1 var
R24217:24218 LF.Imp <> n1 var
R24287:24290 LF.Imp AExp aexp ind
R24302:24304 Coq.Init.Datatypes <> nat ind
R24315:24315 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24324:24328 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24329:24329 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24338:24342 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24343:24343 LF.Imp AExp ::type_scope:x_'\\'_x not
R24356:24361 LF.Imp AExp ::type_scope:x_'\\'_x not
R24369:24369 LF.Imp AExp ::type_scope:x_'\\'_x not
R24344:24349 LF.Imp AExp AMinus constr
R24354:24355 LF.Imp <> e2 var
R24351:24352 LF.Imp <> e1 var
R24364:24366 Coq.Init.Peano <> ::nat_scope:x_'-'_x not
R24362:24363 LF.Imp <> n1 var
R24367:24368 LF.Imp <> n2 var
R24332:24335 LF.Imp AExp ::type_scope:x_'\\'_x not
R24330:24331 LF.Imp <> e2 var
R24336:24337 LF.Imp <> n2 var
R24318:24321 LF.Imp AExp ::type_scope:x_'\\'_x not
R24316:24317 LF.Imp <> e1 var
R24322:24323 LF.Imp <> n1 var
R24392:24395 LF.Imp AExp aexp ind
R24407:24409 Coq.Init.Datatypes <> nat ind
R24420:24420 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24429:24433 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24434:24434 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24443:24447 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24448:24448 LF.Imp AExp ::type_scope:x_'\\'_x not
R24460:24465 LF.Imp AExp ::type_scope:x_'\\'_x not
R24473:24473 LF.Imp AExp ::type_scope:x_'\\'_x not
R24449:24453 LF.Imp AExp AMult constr
R24458:24459 LF.Imp <> e2 var
R24455:24456 LF.Imp <> e1 var
R24468:24470 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R24466:24467 LF.Imp <> n1 var
R24471:24472 LF.Imp <> n2 var
R24437:24440 LF.Imp AExp ::type_scope:x_'\\'_x not
R24435:24436 LF.Imp <> e2 var
R24441:24442 LF.Imp <> n2 var
R24423:24426 LF.Imp AExp ::type_scope:x_'\\'_x not
R24421:24422 LF.Imp <> e1 var
R24427:24428 LF.Imp <> n1 var
R24499:24504 LF.Imp AExp aevalR ind
not 24484:24484 AExp ::type_scope:x_'\\'_x
def 27743:27770 AExp manual_grade_for_beval_rules
R27774:27779 Coq.Init.Datatypes <> option ind
R27785:27785 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R27782:27784 Coq.Init.Datatypes <> nat ind
R27786:27791 Coq.Strings.String <> string ind
R27797:27800 Coq.Init.Datatypes <> None constr
prf 28047:28062 AExp aeval_iff_aevalR
R28080:28080 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R28087:28092 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R28082:28085 LF.Imp AExp ::type_scope:x_'\\'_x not
R28081:28081 LF.Imp <> a var
R28086:28086 LF.Imp <> n var
R28100:28102 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28093:28097 LF.Imp AExp aeval def
R28099:28099 LF.Imp <> a var
R28103:28103 LF.Imp <> n var
R28547:28552 LF.Imp AExp E_ANum constr
R28547:28552 LF.Imp AExp E_ANum constr
R28583:28589 LF.Imp AExp E_APlus constr
R28583:28589 LF.Imp AExp E_APlus constr
R28683:28690 LF.Imp AExp E_AMinus constr
R28683:28690 LF.Imp AExp E_AMinus constr
R28783:28789 LF.Imp AExp E_AMult constr
R28783:28789 LF.Imp AExp E_AMult constr
prf 28955:28971 AExp aeval_iff_aevalR'
R28989:28989 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R28996:29001 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R28991:28994 LF.Imp AExp ::type_scope:x_'\\'_x not
R28990:28990 LF.Imp <> a var
R28995:28995 LF.Imp <> n var
R29009:29011 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29002:29006 LF.Imp AExp aeval def
R29008:29008 LF.Imp <> a var
R29012:29012 LF.Imp <> n var
ind 29438:29443 AExp bevalR
constr 29473:29479 AExp E_Btrue
constr 29503:29510 AExp E_Bfalse
constr 29536:29540 AExp E_Beq
constr 29645:29649 AExp E_Ble
constr 29755:29760 AExp E_Bnot
constr 29837:29842 AExp E_Band
R29450:29453 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29458:29461 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29454:29457 Coq.Init.Datatypes <> bool ind
R29446:29449 LF.Imp AExp bexp ind
R29482:29487 LF.Imp <> bevalR ind
R29495:29498 Coq.Init.Datatypes <> true constr
R29489:29493 LF.Imp AExp BTrue constr
R29513:29518 LF.Imp <> bevalR ind
R29527:29531 Coq.Init.Datatypes <> false constr
R29520:29525 LF.Imp AExp BFalse constr
R29550:29553 LF.Imp AExp aexp ind
R29564:29566 Coq.Init.Datatypes <> nat ind
R29584:29593 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29602:29611 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29612:29617 LF.Imp <> bevalR ind
R29634:29637 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R29632:29633 LF.Imp <> n1 var
R29638:29639 LF.Imp <> n2 var
R29620:29622 LF.Imp AExp BEq constr
R29627:29628 LF.Imp <> a2 var
R29624:29625 LF.Imp <> a1 var
R29596:29599 LF.Imp AExp ::type_scope:x_'\\'_x not
R29594:29595 LF.Imp <> a2 var
R29600:29601 LF.Imp <> n2 var
R29578:29581 LF.Imp AExp ::type_scope:x_'\\'_x not
R29576:29577 LF.Imp <> a1 var
R29582:29583 LF.Imp <> n1 var
R29659:29662 LF.Imp AExp aexp ind
R29673:29675 Coq.Init.Datatypes <> nat ind
R29693:29702 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29711:29720 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29721:29726 LF.Imp <> bevalR ind
R29743:29747 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R29741:29742 LF.Imp <> n1 var
R29748:29749 LF.Imp <> n2 var
R29729:29731 LF.Imp AExp BLe constr
R29736:29737 LF.Imp <> a2 var
R29733:29734 LF.Imp <> a1 var
R29705:29708 LF.Imp AExp ::type_scope:x_'\\'_x not
R29703:29704 LF.Imp <> a2 var
R29709:29710 LF.Imp <> n2 var
R29687:29690 LF.Imp AExp ::type_scope:x_'\\'_x not
R29685:29686 LF.Imp <> a1 var
R29691:29692 LF.Imp <> n1 var
R29766:29769 LF.Imp AExp bexp ind
R29776:29779 Coq.Init.Datatypes <> bool ind
R29799:29808 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29809:29814 LF.Imp <> bevalR ind
R29826:29829 Coq.Init.Datatypes <> negb def
R29831:29831 LF.Imp <> b var
R29817:29820 LF.Imp AExp BNot constr
R29822:29822 LF.Imp <> B var
R29789:29794 LF.Imp <> bevalR ind
R29798:29798 LF.Imp <> b var
R29796:29796 LF.Imp <> B var
R29852:29855 LF.Imp AExp bexp ind
R29866:29869 Coq.Init.Datatypes <> bool ind
R29891:29900 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29913:29922 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29923:29928 LF.Imp <> bevalR ind
R29944:29947 Coq.Init.Datatypes <> andb def
R29952:29953 LF.Imp <> b2 var
R29949:29950 LF.Imp <> b1 var
R29931:29934 LF.Imp AExp BAnd constr
R29939:29940 LF.Imp <> B2 var
R29936:29937 LF.Imp <> B1 var
R29901:29906 LF.Imp <> bevalR ind
R29911:29912 LF.Imp <> b2 var
R29908:29909 LF.Imp <> B2 var
R29879:29884 LF.Imp <> bevalR ind
R29889:29890 LF.Imp <> b1 var
R29886:29887 LF.Imp <> B1 var
prf 29965:29980 AExp beval_iff_bevalR
R30010:30014 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R29999:30004 LF.Imp AExp bevalR ind
R30008:30009 LF.Imp <> bv var
R30006:30006 LF.Imp <> b var
R30022:30024 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30015:30019 LF.Imp AExp beval def
R30021:30021 LF.Imp <> b var
R30025:30026 LF.Imp <> bv var
R30119:30134 LF.Imp AExp aeval_iff_aevalR thm
R30157:30172 LF.Imp AExp aeval_iff_aevalR thm
R30119:30134 LF.Imp AExp aeval_iff_aevalR thm
R30157:30172 LF.Imp AExp aeval_iff_aevalR thm
R30119:30134 LF.Imp AExp aeval_iff_aevalR thm
R30157:30172 LF.Imp AExp aeval_iff_aevalR thm
R30119:30134 LF.Imp AExp aeval_iff_aevalR thm
R30119:30134 LF.Imp AExp aeval_iff_aevalR thm
R30360:30375 LF.Imp AExp aeval_iff_aevalR thm
R30360:30375 LF.Imp AExp aeval_iff_aevalR thm
R30360:30375 LF.Imp AExp aeval_iff_aevalR thm
R30360:30375 LF.Imp AExp aeval_iff_aevalR thm
R30360:30375 LF.Imp AExp aeval_iff_aevalR thm
R30360:30375 LF.Imp AExp aeval_iff_aevalR thm
R30360:30375 LF.Imp AExp aeval_iff_aevalR thm
R30567:30570 LF.Imp AExp <> mod
mod 31033:31047 <> aevalR_division
ind 31161:31164 aevalR_division aexp
constr 31180:31183 aevalR_division ANum
constr 31199:31203 aevalR_division APlus
constr 31224:31229 aevalR_division AMinus
constr 31250:31254 aevalR_division AMult
constr 31275:31278 aevalR_division ADiv
R31190:31192 Coq.Init.Datatypes <> nat ind
R31194:31194 LF.Imp <> aexp ind
R31214:31217 LF.Imp <> aexp ind
R31219:31219 LF.Imp <> aexp ind
R31240:31243 LF.Imp <> aexp ind
R31245:31245 LF.Imp <> aexp ind
R31265:31268 LF.Imp <> aexp ind
R31270:31270 LF.Imp <> aexp ind
R31289:31292 LF.Imp <> aexp ind
R31294:31294 LF.Imp <> aexp ind
ind 31639:31644 aevalR_division aevalR
constr 31675:31680 aevalR_division E_ANum
constr 31718:31724 aevalR_division E_APlus
constr 31822:31829 aevalR_division E_AMinus
constr 31928:31934 aevalR_division E_AMult
constr 32032:32037 aevalR_division E_ADiv
R31652:31655 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31659:31662 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31656:31658 Coq.Init.Datatypes <> nat ind
R31648:31651 LF.Imp aevalR_division aexp ind
R32187:32192 LF.Imp <> aevalR ind
R31687:31689 Coq.Init.Datatypes <> nat ind
R31700:31700 LF.Imp aevalR_division ::type_scope:x_'\\'_x not
R31707:31711 LF.Imp aevalR_division ::type_scope:x_'\\'_x not
R31701:31704 LF.Imp aevalR_division ANum constr
R31706:31706 LF.Imp <> n var
R31712:31712 LF.Imp <> n var
R31735:31738 LF.Imp aevalR_division aexp ind
R31750:31752 Coq.Init.Datatypes <> nat ind
R31763:31763 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31772:31776 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31777:31777 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31786:31790 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31791:31791 LF.Imp aevalR_division ::type_scope:x_'\\'_x not
R31803:31808 LF.Imp aevalR_division ::type_scope:x_'\\'_x not
R31816:31816 LF.Imp aevalR_division ::type_scope:x_'\\'_x not
R31792:31796 LF.Imp aevalR_division APlus constr
R31801:31802 LF.Imp <> a2 var
R31798:31799 LF.Imp <> a1 var
R31811:31813 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R31809:31810 LF.Imp <> n1 var
R31814:31815 LF.Imp <> n2 var
R31780:31783 LF.Imp aevalR_division ::type_scope:x_'\\'_x not
R31778:31779 LF.Imp <> a2 var
R31784:31785 LF.Imp <> n2 var
R31766:31769 LF.Imp aevalR_division ::type_scope:x_'\\'_x not
R31764:31765 LF.Imp <> a1 var
R31770:31771 LF.Imp <> n1 var
R31840:31843 LF.Imp aevalR_division aexp ind
R31855:31857 Coq.Init.Datatypes <> nat ind
R31868:31868 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31877:31881 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31882:31882 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31891:31895 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31896:31896 LF.Imp aevalR_division ::type_scope:x_'\\'_x not
R31909:31914 LF.Imp aevalR_division ::type_scope:x_'\\'_x not
R31922:31922 LF.Imp aevalR_division ::type_scope:x_'\\'_x not
R31897:31902 LF.Imp aevalR_division AMinus constr
R31907:31908 LF.Imp <> a2 var
R31904:31905 LF.Imp <> a1 var
R31917:31919 Coq.Init.Peano <> ::nat_scope:x_'-'_x not
R31915:31916 LF.Imp <> n1 var
R31920:31921 LF.Imp <> n2 var
R31885:31888 LF.Imp aevalR_division ::type_scope:x_'\\'_x not
R31883:31884 LF.Imp <> a2 var
R31889:31890 LF.Imp <> n2 var
R31871:31874 LF.Imp aevalR_division ::type_scope:x_'\\'_x not
R31869:31870 LF.Imp <> a1 var
R31875:31876 LF.Imp <> n1 var
R31945:31948 LF.Imp aevalR_division aexp ind
R31960:31962 Coq.Init.Datatypes <> nat ind
R31973:31973 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31982:31986 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31987:31987 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31996:32000 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32001:32001 LF.Imp aevalR_division ::type_scope:x_'\\'_x not
R32013:32018 LF.Imp aevalR_division ::type_scope:x_'\\'_x not
R32026:32026 LF.Imp aevalR_division ::type_scope:x_'\\'_x not
R32002:32006 LF.Imp aevalR_division AMult constr
R32011:32012 LF.Imp <> a2 var
R32008:32009 LF.Imp <> a1 var
R32021:32023 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R32019:32020 LF.Imp <> n1 var
R32024:32025 LF.Imp <> n2 var
R31990:31993 LF.Imp aevalR_division ::type_scope:x_'\\'_x not
R31988:31989 LF.Imp <> a2 var
R31994:31995 LF.Imp <> n2 var
R31976:31979 LF.Imp aevalR_division ::type_scope:x_'\\'_x not
R31974:31975 LF.Imp <> a1 var
R31980:31981 LF.Imp <> n1 var
R32048:32051 LF.Imp aevalR_division aexp ind
R32066:32068 Coq.Init.Datatypes <> nat ind
R32079:32079 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32088:32092 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32093:32093 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32102:32106 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32107:32107 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32114:32124 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32125:32125 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32141:32145 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32146:32146 LF.Imp aevalR_division ::type_scope:x_'\\'_x not
R32157:32161 LF.Imp aevalR_division ::type_scope:x_'\\'_x not
R32147:32150 LF.Imp aevalR_division ADiv constr
R32155:32156 LF.Imp <> a2 var
R32152:32153 LF.Imp <> a1 var
R32162:32163 LF.Imp <> n3 var
R32136:32138 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32126:32129 Coq.Init.Peano <> mult syndef
R32134:32135 LF.Imp <> n3 var
R32131:32132 LF.Imp <> n2 var
R32139:32140 LF.Imp <> n1 var
R32110:32112 Coq.Init.Peano <> ::nat_scope:x_'>'_x not
R32108:32109 LF.Imp <> n2 var
R32096:32099 LF.Imp aevalR_division ::type_scope:x_'\\'_x not
R32094:32095 LF.Imp <> a2 var
R32100:32101 LF.Imp <> n2 var
R32082:32085 LF.Imp aevalR_division ::type_scope:x_'\\'_x not
R32080:32081 LF.Imp <> a1 var
R32086:32087 LF.Imp <> n1 var
R32187:32192 LF.Imp aevalR_division aevalR ind
not 32172:32172 aevalR_division ::type_scope:x_'\\'_x
R32218:32232 LF.Imp aevalR_division <> mod
mod 32243:32257 <> aevalR_extended
ind 32731:32734 aevalR_extended aexp
constr 32750:32753 aevalR_extended AAny
constr 32800:32803 aevalR_extended ANum
constr 32819:32823 aevalR_extended APlus
constr 32844:32849 aevalR_extended AMinus
constr 32870:32874 aevalR_extended AMult
R32754:32754 LF.Imp <> aexp ind
R32810:32812 Coq.Init.Datatypes <> nat ind
R32814:32814 LF.Imp <> aexp ind
R32834:32837 LF.Imp <> aexp ind
R32839:32839 LF.Imp <> aexp ind
R32860:32863 LF.Imp <> aexp ind
R32865:32865 LF.Imp <> aexp ind
R32885:32888 LF.Imp <> aexp ind
R32890:32890 LF.Imp <> aexp ind
ind 33085:33090 aevalR_extended aevalR
constr 33121:33125 aevalR_extended E_Any
constr 33197:33202 aevalR_extended E_ANum
constr 33240:33246 aevalR_extended E_APlus
constr 33344:33351 aevalR_extended E_AMinus
constr 33450:33456 aevalR_extended E_AMult
R33098:33101 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33105:33108 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33102:33104 Coq.Init.Datatypes <> nat ind
R33094:33097 LF.Imp aevalR_extended aexp ind
R33572:33577 LF.Imp <> aevalR ind
R33132:33134 Coq.Init.Datatypes <> nat ind
R33149:33152 LF.Imp aevalR_extended ::type_scope:x_'\\'_x not
R33145:33148 LF.Imp aevalR_extended AAny constr
R33153:33153 LF.Imp <> n var
R33209:33211 Coq.Init.Datatypes <> nat ind
R33222:33222 LF.Imp aevalR_extended ::type_scope:x_'\\'_x not
R33229:33233 LF.Imp aevalR_extended ::type_scope:x_'\\'_x not
R33223:33226 LF.Imp aevalR_extended ANum constr
R33228:33228 LF.Imp <> n var
R33234:33234 LF.Imp <> n var
R33257:33260 LF.Imp aevalR_extended aexp ind
R33272:33274 Coq.Init.Datatypes <> nat ind
R33285:33285 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33294:33298 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33299:33299 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33308:33312 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33313:33313 LF.Imp aevalR_extended ::type_scope:x_'\\'_x not
R33325:33330 LF.Imp aevalR_extended ::type_scope:x_'\\'_x not
R33338:33338 LF.Imp aevalR_extended ::type_scope:x_'\\'_x not
R33314:33318 LF.Imp aevalR_extended APlus constr
R33323:33324 LF.Imp <> a2 var
R33320:33321 LF.Imp <> a1 var
R33333:33335 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R33331:33332 LF.Imp <> n1 var
R33336:33337 LF.Imp <> n2 var
R33302:33305 LF.Imp aevalR_extended ::type_scope:x_'\\'_x not
R33300:33301 LF.Imp <> a2 var
R33306:33307 LF.Imp <> n2 var
R33288:33291 LF.Imp aevalR_extended ::type_scope:x_'\\'_x not
R33286:33287 LF.Imp <> a1 var
R33292:33293 LF.Imp <> n1 var
R33362:33365 LF.Imp aevalR_extended aexp ind
R33377:33379 Coq.Init.Datatypes <> nat ind
R33390:33390 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33399:33403 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33404:33404 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33413:33417 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33418:33418 LF.Imp aevalR_extended ::type_scope:x_'\\'_x not
R33431:33436 LF.Imp aevalR_extended ::type_scope:x_'\\'_x not
R33444:33444 LF.Imp aevalR_extended ::type_scope:x_'\\'_x not
R33419:33424 LF.Imp aevalR_extended AMinus constr
R33429:33430 LF.Imp <> a2 var
R33426:33427 LF.Imp <> a1 var
R33439:33441 Coq.Init.Peano <> ::nat_scope:x_'-'_x not
R33437:33438 LF.Imp <> n1 var
R33442:33443 LF.Imp <> n2 var
R33407:33410 LF.Imp aevalR_extended ::type_scope:x_'\\'_x not
R33405:33406 LF.Imp <> a2 var
R33411:33412 LF.Imp <> n2 var
R33393:33396 LF.Imp aevalR_extended ::type_scope:x_'\\'_x not
R33391:33392 LF.Imp <> a1 var
R33397:33398 LF.Imp <> n1 var
R33467:33470 LF.Imp aevalR_extended aexp ind
R33482:33484 Coq.Init.Datatypes <> nat ind
R33495:33495 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33504:33508 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33509:33509 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33518:33522 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33523:33523 LF.Imp aevalR_extended ::type_scope:x_'\\'_x not
R33535:33540 LF.Imp aevalR_extended ::type_scope:x_'\\'_x not
R33548:33548 LF.Imp aevalR_extended ::type_scope:x_'\\'_x not
R33524:33528 LF.Imp aevalR_extended AMult constr
R33533:33534 LF.Imp <> a2 var
R33530:33531 LF.Imp <> a1 var
R33543:33545 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R33541:33542 LF.Imp <> n1 var
R33546:33547 LF.Imp <> n2 var
R33512:33515 LF.Imp aevalR_extended ::type_scope:x_'\\'_x not
R33510:33511 LF.Imp <> a2 var
R33516:33517 LF.Imp <> n2 var
R33498:33501 LF.Imp aevalR_extended ::type_scope:x_'\\'_x not
R33496:33497 LF.Imp <> a1 var
R33502:33503 LF.Imp <> n1 var
R33572:33577 LF.Imp aevalR_extended aevalR ind
not 33557:33557 aevalR_extended ::type_scope:x_'\\'_x
R33603:33617 LF.Imp aevalR_extended <> mod
def 36437:36441 <> state
R36446:36454 LF.Maps <> total_map def
R36456:36458 Coq.Init.Datatypes <> nat ind
ind 36679:36682 <> aexp
constr 36698:36701 <> ANum
constr 36717:36719 <> AId
constr 36766:36770 <> APlus
constr 36791:36796 <> AMinus
constr 36817:36821 <> AMult
R36708:36710 Coq.Init.Datatypes <> nat ind
R36712:36712 LF.Imp <> aexp ind
R36726:36731 Coq.Strings.String <> string ind
R36733:36733 LF.Imp <> aexp ind
R36781:36784 LF.Imp <> aexp ind
R36786:36786 LF.Imp <> aexp ind
R36807:36810 LF.Imp <> aexp ind
R36812:36812 LF.Imp <> aexp ind
R36832:36835 LF.Imp <> aexp ind
R36837:36837 LF.Imp <> aexp ind
def 36953:36953 <> W
R36957:36962 Coq.Strings.String <> string ind
def 36983:36983 <> X
R36987:36992 Coq.Strings.String <> string ind
def 37013:37013 <> Y
R37017:37022 Coq.Strings.String <> string ind
def 37043:37043 <> Z
R37047:37052 Coq.Strings.String <> string ind
ind 37445:37448 <> bexp
constr 37464:37468 <> BTrue
constr 37474:37479 <> BFalse
constr 37485:37487 <> BEq
constr 37508:37510 <> BLe
constr 37531:37534 <> BNot
constr 37551:37554 <> BAnd
R37469:37469 LF.Imp <> bexp ind
R37480:37480 LF.Imp <> bexp ind
R37498:37501 LF.Imp <> aexp ind
R37503:37503 LF.Imp <> bexp ind
R37521:37524 LF.Imp <> aexp ind
R37526:37526 LF.Imp <> bexp ind
R37541:37544 LF.Imp <> bexp ind
R37546:37546 LF.Imp <> bexp ind
R37565:37568 LF.Imp <> bexp ind
R37570:37570 LF.Imp <> bexp ind
R38597:38626 LF.Imp <> AId constr
R38629:38656 LF.Imp <> ANum constr
def 38671:38682 <> bool_to_bexp
R38689:38692 Coq.Init.Datatypes <> bool ind
R38697:38700 LF.Imp <> bexp ind
R38710:38710 LF.Imp <> b var
R38728:38733 LF.Imp <> BFalse constr
R38717:38721 LF.Imp <> BTrue constr
R38736:38772 LF.Imp <> bool_to_bexp def
R38896:38900 LF.Imp <> APlus constr
not 38884:38884 <> ::imp_scope:x_'+'_x
R38975:38980 LF.Imp <> AMinus constr
not 38963:38963 <> ::imp_scope:x_'-'_x
R39055:39059 LF.Imp <> AMult constr
not 39043:39043 <> ::imp_scope:x_'*'_x
R39135:39137 LF.Imp <> BLe constr
not 39122:39122 <> ::imp_scope:x_'<='_x
R39210:39212 LF.Imp <> BEq constr
not 39198:39198 <> ::imp_scope:x_'='_x
R39286:39289 LF.Imp <> BAnd constr
not 39273:39273 <> ::imp_scope:x_'&&'_x
R39364:39367 LF.Imp <> BNot constr
not 39352:39352 <> ::imp_scope:'~'_x
def 39432:39443 <> example_aexp
R39468:39471 LF.Imp <> aexp ind
R39450:39453 LF.Imp <> ::imp_scope:x_'+'_x not
R39459:39459 LF.Imp <> ::imp_scope:x_'+'_x not
R39455:39457 LF.Imp <> ::imp_scope:x_'*'_x not
R39454:39454 LF.Imp <> X def
def 39485:39496 <> example_bexp
R39527:39530 LF.Imp <> bexp ind
R39506:39509 LF.Imp <> ::imp_scope:x_'&&'_x not
R39502:39505 Coq.Init.Datatypes <> true constr
R39510:39511 LF.Imp <> ::imp_scope:'~'_x not
R39518:39518 LF.Imp <> ::imp_scope:'~'_x not
R39513:39516 LF.Imp <> ::imp_scope:x_'<='_x not
R39512:39512 LF.Imp <> X def
R39798:39809 LF.Imp <> example_bexp def
def 40149:40153 <> aeval
R40161:40165 LF.Imp <> state def
R40173:40176 LF.Imp <> aexp ind
R40181:40183 Coq.Init.Datatypes <> nat ind
R40196:40196 LF.Imp <> a var
R40207:40210 LF.Imp <> ANum constr
R40223:40225 LF.Imp <> AId constr
R40232:40233 LF.Imp <> st var
R40287:40291 LF.Imp <> APlus constr
R40302:40302 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R40314:40318 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R40330:40330 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R40303:40307 LF.Imp <> aeval def
R40309:40310 LF.Imp <> st var
R40319:40323 LF.Imp <> aeval def
R40325:40326 LF.Imp <> st var
R40336:40341 LF.Imp <> AMinus constr
R40353:40353 Coq.Init.Peano <> ::nat_scope:x_'-'_x not
R40365:40369 Coq.Init.Peano <> ::nat_scope:x_'-'_x not
R40381:40381 Coq.Init.Peano <> ::nat_scope:x_'-'_x not
R40354:40358 LF.Imp <> aeval def
R40360:40361 LF.Imp <> st var
R40370:40374 LF.Imp <> aeval def
R40376:40377 LF.Imp <> st var
R40387:40391 LF.Imp <> AMult constr
R40402:40402 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R40414:40418 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R40430:40430 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R40403:40407 LF.Imp <> aeval def
R40409:40410 LF.Imp <> st var
R40419:40423 LF.Imp <> aeval def
R40425:40426 LF.Imp <> st var
def 40449:40453 <> beval
R40461:40465 LF.Imp <> state def
R40473:40476 LF.Imp <> bexp ind
R40481:40484 Coq.Init.Datatypes <> bool ind
R40497:40497 LF.Imp <> b var
R40508:40512 LF.Imp <> BTrue constr
R40523:40526 Coq.Init.Datatypes <> true constr
R40532:40537 LF.Imp <> BFalse constr
R40547:40551 Coq.Init.Datatypes <> false constr
R40557:40559 LF.Imp <> BEq constr
R40572:40572 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R40584:40589 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R40601:40601 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R40573:40577 LF.Imp <> aeval def
R40579:40580 LF.Imp <> st var
R40590:40594 LF.Imp <> aeval def
R40596:40597 LF.Imp <> st var
R40607:40609 LF.Imp <> BLe constr
R40622:40622 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R40634:40640 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R40652:40652 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R40623:40627 LF.Imp <> aeval def
R40629:40630 LF.Imp <> st var
R40641:40645 LF.Imp <> aeval def
R40647:40648 LF.Imp <> st var
R40658:40661 LF.Imp <> BNot constr
R40673:40676 Coq.Init.Datatypes <> negb def
R40679:40683 LF.Imp <> beval def
R40685:40686 LF.Imp <> st var
R40696:40699 LF.Imp <> BAnd constr
R40711:40714 Coq.Init.Datatypes <> andb def
R40731:40735 LF.Imp <> beval def
R40737:40738 LF.Imp <> st var
R40717:40721 LF.Imp <> beval def
R40723:40724 LF.Imp <> st var
def 40888:40895 <> empty_st
R40901:40906 LF.Maps <> :::'''_'''_'!->'_x not
R41039:41046 LF.Maps <> t_update def
R41048:41055 LF.Imp <> empty_st def
not 41023:41023 <> :::x_'!->'_x
def 41087:41091 <> aexp1
R41132:41136 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41099:41103 LF.Imp <> aeval def
R41117:41120 LF.Imp <> ::imp_scope:x_'+'_x not
R41126:41126 LF.Imp <> ::imp_scope:x_'+'_x not
R41122:41124 LF.Imp <> ::imp_scope:x_'*'_x not
R41121:41121 LF.Imp <> X def
R41107:41111 LF.Imp <> :::x_'!->'_x not
R41106:41106 LF.Imp <> X def
def 41175:41179 <> bexp1
R41226:41230 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41187:41191 LF.Imp <> beval def
R41208:41211 LF.Imp <> ::imp_scope:x_'&&'_x not
R41204:41207 Coq.Init.Datatypes <> true constr
R41212:41213 LF.Imp <> ::imp_scope:'~'_x not
R41220:41220 LF.Imp <> ::imp_scope:'~'_x not
R41215:41218 LF.Imp <> ::imp_scope:x_'<='_x not
R41214:41214 LF.Imp <> X def
R41195:41199 LF.Imp <> :::x_'!->'_x not
R41194:41194 LF.Imp <> X def
R41231:41234 Coq.Init.Datatypes <> true constr
ind 42328:42330 <> com
constr 42346:42350 <> CSkip
constr 42356:42359 <> CAss
constr 42389:42392 <> CSeq
constr 42412:42414 <> CIf
constr 42445:42450 <> CWhile
R42351:42351 LF.Imp <> com ind
R42366:42371 Coq.Strings.String <> string ind
R42379:42382 LF.Imp <> aexp ind
R42384:42384 LF.Imp <> com ind
R42403:42405 LF.Imp <> com ind
R42407:42407 LF.Imp <> com ind
R42421:42424 LF.Imp <> bexp ind
R42436:42438 LF.Imp <> com ind
R42440:42440 LF.Imp <> com ind
R42457:42460 LF.Imp <> bexp ind
R42468:42470 LF.Imp <> com ind
R42472:42472 LF.Imp <> com ind
R42661:42665 LF.Imp <> CSkip constr
not 42646:42646 <> ::imp_scope:'SKIP'
R42707:42710 LF.Imp <> CAss constr
not 42689:42689 <> ::imp_scope:x_'::='_x
R42770:42773 LF.Imp <> CSeq constr
not 42753:42753 <> ::imp_scope:x_';;'_x
R42870:42875 LF.Imp <> CWhile constr
not 42839:42839 <> ::imp_scope:'WHILE'_x_'DO'_x_'END'
R42982:42984 LF.Imp <> CIf constr
not 42939:42939 <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI'
def 43158:43168 <> fact_in_coq
R43172:43174 LF.Imp <> com ind
R43189:43193 LF.Imp <> ::imp_scope:x_';;'_x not
R43183:43187 LF.Imp <> ::imp_scope:x_'::='_x not
R43182:43182 LF.Imp <> Z def
R43188:43188 LF.Imp <> X def
R43201:43205 LF.Imp <> ::imp_scope:x_';;'_x not
R43195:43199 LF.Imp <> ::imp_scope:x_'::='_x not
R43194:43194 LF.Imp <> Y def
R43206:43211 LF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R43220:43227 LF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R43257:43262 LF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R43212:43213 LF.Imp <> ::imp_scope:'~'_x not
R43219:43219 LF.Imp <> ::imp_scope:'~'_x not
R43215:43217 LF.Imp <> ::imp_scope:x_'='_x not
R43214:43214 LF.Imp <> Z def
R43239:43245 LF.Imp <> ::imp_scope:x_';;'_x not
R43229:43233 LF.Imp <> ::imp_scope:x_'::='_x not
R43228:43228 LF.Imp <> Y def
R43235:43237 LF.Imp <> ::imp_scope:x_'*'_x not
R43234:43234 LF.Imp <> Y def
R43238:43238 LF.Imp <> Z def
R43247:43251 LF.Imp <> ::imp_scope:x_'::='_x not
R43246:43246 LF.Imp <> Z def
R43253:43255 LF.Imp <> ::imp_scope:x_'-'_x not
R43252:43252 LF.Imp <> Z def
R44071:44081 LF.Imp <> fact_in_coq def
R44374:44384 LF.Imp <> fact_in_coq def
def 46059:46063 <> plus2
R46067:46069 LF.Imp <> com ind
R46077:46081 LF.Imp <> ::imp_scope:x_'::='_x not
R46076:46076 LF.Imp <> X def
R46083:46085 LF.Imp <> ::imp_scope:x_'+'_x not
R46082:46082 LF.Imp <> X def
def 46101:46110 <> XtimesYinZ
R46114:46116 LF.Imp <> com ind
R46124:46128 LF.Imp <> ::imp_scope:x_'::='_x not
R46123:46123 LF.Imp <> Z def
R46130:46132 LF.Imp <> ::imp_scope:x_'*'_x not
R46129:46129 LF.Imp <> X def
R46133:46133 LF.Imp <> Y def
def 46148:46167 <> subtract_slowly_body
R46171:46173 LF.Imp <> com ind
R46191:46196 LF.Imp <> ::imp_scope:x_';;'_x not
R46181:46185 LF.Imp <> ::imp_scope:x_'::='_x not
R46180:46180 LF.Imp <> Z def
R46187:46189 LF.Imp <> ::imp_scope:x_'-'_x not
R46186:46186 LF.Imp <> Z def
R46198:46202 LF.Imp <> ::imp_scope:x_'::='_x not
R46197:46197 LF.Imp <> X def
R46204:46206 LF.Imp <> ::imp_scope:x_'-'_x not
R46203:46203 LF.Imp <> X def
def 46312:46326 <> subtract_slowly
R46330:46332 LF.Imp <> com ind
R46340:46345 LF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R46354:46361 LF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R46382:46387 LF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R46346:46347 LF.Imp <> ::imp_scope:'~'_x not
R46353:46353 LF.Imp <> ::imp_scope:'~'_x not
R46349:46351 LF.Imp <> ::imp_scope:x_'='_x not
R46348:46348 LF.Imp <> X def
R46362:46381 LF.Imp <> subtract_slowly_body def
def 46407:46430 <> subtract_3_from_5_slowly
R46434:46436 LF.Imp <> com ind
R46450:46455 LF.Imp <> ::imp_scope:x_';;'_x not
R46444:46448 LF.Imp <> ::imp_scope:x_'::='_x not
R46443:46443 LF.Imp <> X def
R46463:46468 LF.Imp <> ::imp_scope:x_';;'_x not
R46457:46461 LF.Imp <> ::imp_scope:x_'::='_x not
R46456:46456 LF.Imp <> Z def
R46469:46483 LF.Imp <> subtract_slowly def
def 46600:46603 <> loop
R46607:46609 LF.Imp <> com ind
R46616:46621 LF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R46626:46633 LF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R46638:46643 LF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R46622:46625 Coq.Init.Datatypes <> true constr
R46634:46637 LF.Imp <> ::imp_scope:'SKIP' not
def 47294:47311 <> ceval_fun_no_while
R47319:47323 LF.Imp <> state def
R47331:47333 LF.Imp <> com ind
R47364:47368 LF.Imp <> state def
R47381:47381 LF.Imp <> c var
R47394:47397 LF.Imp <> ::imp_scope:'SKIP' not
R47410:47411 LF.Imp <> st var
R47420:47424 LF.Imp <> ::imp_scope:x_'::='_x not
R47441:47446 LF.Maps <> :::x_'!->'_x_';'_x not
R47458:47461 LF.Maps <> :::x_'!->'_x_';'_x not
R47462:47463 LF.Imp <> st var
R47447:47451 LF.Imp <> aeval def
R47453:47454 LF.Imp <> st var
R47474:47477 LF.Imp <> ::imp_scope:x_';;'_x not
R47503:47520 LF.Imp <> ceval_fun_no_while def
R47522:47523 LF.Imp <> st var
R47539:47556 LF.Imp <> ceval_fun_no_while def
R47558:47560 LF.Imp <> st' var
R47571:47575 LF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R47577:47582 LF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R47585:47590 LF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R47593:47595 LF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R47612:47616 LF.Imp <> beval def
R47618:47619 LF.Imp <> st var
R47679:47696 LF.Imp <> ceval_fun_no_while def
R47698:47699 LF.Imp <> st var
R47639:47656 LF.Imp <> ceval_fun_no_while def
R47658:47659 LF.Imp <> st var
R47710:47715 LF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R47717:47720 LF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R47722:47725 LF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R47738:47739 LF.Imp <> st var
ind 52004:52008 <> ceval
constr 52049:52054 <> E_Skip
constr 52097:52101 <> E_Ass
constr 52193:52197 <> E_Seq
constr 52318:52325 <> E_IfTrue
constr 52455:52463 <> E_IfFalse
constr 52594:52605 <> E_WhileFalse
constr 52692:52702 <> E_WhileTrue
R52015:52018 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52024:52027 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52033:52036 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52028:52032 LF.Imp <> state def
R52019:52023 LF.Imp <> state def
R52012:52014 LF.Imp <> com ind
R52895:52899 LF.Imp <> ceval ind
R52077:52080 LF.Imp <> :::x_'=['_x_']=>'_x not
R52085:52089 LF.Imp <> :::x_'=['_x_']=>'_x not
R52081:52084 LF.Imp <> ::imp_scope:'SKIP' not
R52075:52076 LF.Imp <> st var
R52090:52091 LF.Imp <> st var
R52145:52154 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52157:52160 LF.Imp <> :::x_'=['_x_']=>'_x not
R52169:52174 LF.Imp <> :::x_'=['_x_']=>'_x not
R52187:52187 LF.Imp <> :::x_'=['_x_']=>'_x not
R52162:52166 LF.Imp <> ::imp_scope:x_'::='_x not
R52161:52161 LF.Imp <> x var
R52167:52168 LF.Imp <> a1 var
R52155:52156 LF.Imp <> st var
R52176:52180 LF.Maps <> :::x_'!->'_x_';'_x not
R52182:52184 LF.Maps <> :::x_'!->'_x_';'_x not
R52185:52186 LF.Imp <> st var
R52175:52175 LF.Imp <> x var
R52181:52181 LF.Imp <> n var
R52141:52143 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52130:52134 LF.Imp <> aeval def
R52139:52140 LF.Imp <> a1 var
R52136:52137 LF.Imp <> st var
R52144:52144 LF.Imp <> n var
R52250:52260 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52279:52288 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52291:52295 LF.Imp <> :::x_'=['_x_']=>'_x not
R52304:52308 LF.Imp <> :::x_'=['_x_']=>'_x not
R52298:52301 LF.Imp <> ::imp_scope:x_';;'_x not
R52296:52297 LF.Imp <> c1 var
R52302:52303 LF.Imp <> c2 var
R52289:52290 LF.Imp <> st var
R52309:52312 LF.Imp <> st'' var
R52264:52267 LF.Imp <> :::x_'=['_x_']=>'_x not
R52270:52274 LF.Imp <> :::x_'=['_x_']=>'_x not
R52268:52269 LF.Imp <> c2 var
R52261:52263 LF.Imp <> st' var
R52275:52278 LF.Imp <> st'' var
R52235:52239 LF.Imp <> :::x_'=['_x_']=>'_x not
R52242:52246 LF.Imp <> :::x_'=['_x_']=>'_x not
R52240:52241 LF.Imp <> c1 var
R52233:52234 LF.Imp <> st var
R52247:52249 LF.Imp <> st' var
R52375:52384 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52401:52410 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52413:52416 LF.Imp <> :::x_'=['_x_']=>'_x not
R52442:52446 LF.Imp <> :::x_'=['_x_']=>'_x not
R52417:52421 LF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R52423:52428 LF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R52431:52436 LF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R52439:52441 LF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R52422:52422 LF.Imp <> b var
R52429:52430 LF.Imp <> c1 var
R52437:52438 LF.Imp <> c2 var
R52411:52412 LF.Imp <> st var
R52447:52449 LF.Imp <> st' var
R52387:52390 LF.Imp <> :::x_'=['_x_']=>'_x not
R52393:52397 LF.Imp <> :::x_'=['_x_']=>'_x not
R52391:52392 LF.Imp <> c1 var
R52385:52386 LF.Imp <> st var
R52398:52400 LF.Imp <> st' var
R52368:52370 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52358:52362 LF.Imp <> beval def
R52367:52367 LF.Imp <> b var
R52364:52365 LF.Imp <> st var
R52371:52374 Coq.Init.Datatypes <> true constr
R52514:52523 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52540:52549 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52552:52555 LF.Imp <> :::x_'=['_x_']=>'_x not
R52581:52585 LF.Imp <> :::x_'=['_x_']=>'_x not
R52556:52560 LF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R52562:52567 LF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R52570:52575 LF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R52578:52580 LF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R52561:52561 LF.Imp <> b var
R52568:52569 LF.Imp <> c1 var
R52576:52577 LF.Imp <> c2 var
R52550:52551 LF.Imp <> st var
R52586:52588 LF.Imp <> st' var
R52526:52529 LF.Imp <> :::x_'=['_x_']=>'_x not
R52532:52536 LF.Imp <> :::x_'=['_x_']=>'_x not
R52530:52531 LF.Imp <> c2 var
R52524:52525 LF.Imp <> st var
R52537:52539 LF.Imp <> st' var
R52506:52508 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52496:52500 LF.Imp <> beval def
R52505:52505 LF.Imp <> b var
R52502:52503 LF.Imp <> st var
R52509:52513 Coq.Init.Datatypes <> false constr
R52648:52657 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52660:52663 LF.Imp <> :::x_'=['_x_']=>'_x not
R52680:52684 LF.Imp <> :::x_'=['_x_']=>'_x not
R52664:52669 LF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R52671:52674 LF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R52676:52679 LF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R52670:52670 LF.Imp <> b var
R52675:52675 LF.Imp <> c var
R52658:52659 LF.Imp <> st var
R52685:52686 LF.Imp <> st var
R52640:52642 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52630:52634 LF.Imp <> beval def
R52639:52639 LF.Imp <> b var
R52636:52637 LF.Imp <> st var
R52643:52647 Coq.Init.Datatypes <> false constr
R52753:52762 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52779:52788 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52821:52830 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52833:52837 LF.Imp <> :::x_'=['_x_']=>'_x not
R52854:52858 LF.Imp <> :::x_'=['_x_']=>'_x not
R52838:52843 LF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R52845:52848 LF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R52850:52853 LF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R52844:52844 LF.Imp <> b var
R52849:52849 LF.Imp <> c var
R52831:52832 LF.Imp <> st var
R52859:52862 LF.Imp <> st'' var
R52792:52795 LF.Imp <> :::x_'=['_x_']=>'_x not
R52812:52816 LF.Imp <> :::x_'=['_x_']=>'_x not
R52796:52801 LF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R52803:52806 LF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R52808:52811 LF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R52802:52802 LF.Imp <> b var
R52807:52807 LF.Imp <> c var
R52789:52791 LF.Imp <> st' var
R52817:52820 LF.Imp <> st'' var
R52765:52769 LF.Imp <> :::x_'=['_x_']=>'_x not
R52771:52775 LF.Imp <> :::x_'=['_x_']=>'_x not
R52770:52770 LF.Imp <> c var
R52763:52764 LF.Imp <> st var
R52776:52778 LF.Imp <> st' var
R52746:52748 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52736:52740 LF.Imp <> beval def
R52745:52745 LF.Imp <> b var
R52742:52743 LF.Imp <> st var
R52749:52752 Coq.Init.Datatypes <> true constr
R52895:52899 LF.Imp <> ceval ind
not 52873:52873 <> :::x_'=['_x_']=>'_x
def 53168:53181 <> ceval_example1
R53194:53202 LF.Imp <> :::x_'=['_x_']=>'_x not
R53277:53284 LF.Imp <> :::x_'=['_x_']=>'_x not
R53302:53302 LF.Imp <> :::x_'=['_x_']=>'_x not
R53210:53217 LF.Imp <> ::imp_scope:x_';;'_x not
R53204:53208 LF.Imp <> ::imp_scope:x_'::='_x not
R53203:53203 LF.Imp <> X def
R53218:53222 LF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R53229:53241 LF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R53249:53261 LF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R53269:53276 LF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R53224:53227 LF.Imp <> ::imp_scope:x_'<='_x not
R53223:53223 LF.Imp <> X def
R53243:53247 LF.Imp <> ::imp_scope:x_'::='_x not
R53242:53242 LF.Imp <> Y def
R53263:53267 LF.Imp <> ::imp_scope:x_'::='_x not
R53262:53262 LF.Imp <> Z def
R53186:53193 LF.Imp <> empty_st def
R53286:53290 LF.Maps <> :::x_'!->'_x_';'_x not
R53292:53294 LF.Maps <> :::x_'!->'_x_';'_x not
R53296:53300 LF.Imp <> :::x_'!->'_x not
R53295:53295 LF.Imp <> X def
R53285:53285 LF.Imp <> Z def
R53379:53383 LF.Imp <> :::x_'!->'_x not
R53378:53378 LF.Imp <> X def
R53366:53370 LF.Imp <> E_Seq constr
R53379:53383 LF.Imp <> :::x_'!->'_x not
R53378:53378 LF.Imp <> X def
R53366:53370 LF.Imp <> E_Seq constr
R53427:53431 LF.Imp <> E_Ass constr
R53427:53431 LF.Imp <> E_Ass constr
R53478:53486 LF.Imp <> E_IfFalse constr
R53478:53486 LF.Imp <> E_IfFalse constr
R53516:53520 LF.Imp <> E_Ass constr
R53516:53520 LF.Imp <> E_Ass constr
def 53608:53621 <> ceval_example2
R53634:53641 LF.Imp <> :::x_'=['_x_']=>'_x not
R53669:53676 LF.Imp <> :::x_'=['_x_']=>'_x not
R53704:53704 LF.Imp <> :::x_'=['_x_']=>'_x not
R53649:53651 LF.Imp <> ::imp_scope:x_';;'_x not
R53643:53647 LF.Imp <> ::imp_scope:x_'::='_x not
R53642:53642 LF.Imp <> X def
R53659:53661 LF.Imp <> ::imp_scope:x_';;'_x not
R53653:53657 LF.Imp <> ::imp_scope:x_'::='_x not
R53652:53652 LF.Imp <> Y def
R53663:53667 LF.Imp <> ::imp_scope:x_'::='_x not
R53662:53662 LF.Imp <> Z def
R53626:53633 LF.Imp <> empty_st def
R53678:53682 LF.Maps <> :::x_'!->'_x_';'_x not
R53684:53686 LF.Maps <> :::x_'!->'_x_';'_x not
R53688:53692 LF.Maps <> :::x_'!->'_x_';'_x not
R53694:53696 LF.Maps <> :::x_'!->'_x_';'_x not
R53698:53702 LF.Imp <> :::x_'!->'_x not
R53697:53697 LF.Imp <> X def
R53687:53687 LF.Imp <> Y def
R53677:53677 LF.Imp <> Z def
R53735:53739 LF.Imp <> :::x_'!->'_x not
R53734:53734 LF.Imp <> X def
R53722:53726 LF.Imp <> E_Seq constr
R53735:53739 LF.Imp <> :::x_'!->'_x not
R53734:53734 LF.Imp <> X def
R53722:53726 LF.Imp <> E_Seq constr
R53754:53758 LF.Imp <> E_Ass constr
R53754:53758 LF.Imp <> E_Ass constr
R53797:53801 LF.Maps <> :::x_'!->'_x_';'_x not
R53803:53804 LF.Maps <> :::x_'!->'_x_';'_x not
R53806:53810 LF.Imp <> :::x_'!->'_x not
R53805:53805 LF.Imp <> Y def
R53796:53796 LF.Imp <> X def
R53784:53788 LF.Imp <> E_Seq constr
R53797:53801 LF.Maps <> :::x_'!->'_x_';'_x not
R53803:53804 LF.Maps <> :::x_'!->'_x_';'_x not
R53806:53810 LF.Imp <> :::x_'!->'_x not
R53805:53805 LF.Imp <> Y def
R53796:53796 LF.Imp <> X def
R53784:53788 LF.Imp <> E_Seq constr
R53831:53835 LF.Maps <> :::x_'!->'_x_';'_x not
R53837:53838 LF.Maps <> :::x_'!->'_x_';'_x not
R53840:53844 LF.Imp <> :::x_'!->'_x not
R53839:53839 LF.Imp <> Y def
R53830:53830 LF.Imp <> X def
R53855:53859 LF.Maps <> :::x_'!->'_x_';'_x not
R53861:53862 LF.Maps <> :::x_'!->'_x_';'_x not
R53864:53868 LF.Imp <> :::x_'!->'_x not
R53863:53863 LF.Imp <> X def
R53854:53854 LF.Imp <> Y def
R53831:53835 LF.Maps <> :::x_'!->'_x_';'_x not
R53837:53838 LF.Maps <> :::x_'!->'_x_';'_x not
R53840:53844 LF.Imp <> :::x_'!->'_x not
R53839:53839 LF.Imp <> Y def
R53830:53830 LF.Imp <> X def
R53855:53859 LF.Maps <> :::x_'!->'_x_';'_x not
R53861:53862 LF.Maps <> :::x_'!->'_x_';'_x not
R53864:53868 LF.Imp <> :::x_'!->'_x not
R53863:53863 LF.Imp <> X def
R53854:53854 LF.Imp <> Y def
R53887:53891 LF.Imp <> E_Ass constr
R53887:53891 LF.Imp <> E_Ass constr
R53921:53936 LF.Maps <> t_update_permute thm
R53921:53936 LF.Maps <> t_update_permute thm
R53979:53983 LF.Maps <> :::x_'!->'_x_';'_x not
R53985:53986 LF.Maps <> :::x_'!->'_x_';'_x not
R53988:53992 LF.Imp <> :::x_'!->'_x not
R53987:53987 LF.Imp <> Y def
R53978:53978 LF.Imp <> X def
R54003:54007 LF.Maps <> :::x_'!->'_x_';'_x not
R54009:54010 LF.Maps <> :::x_'!->'_x_';'_x not
R54012:54016 LF.Imp <> :::x_'!->'_x not
R54011:54011 LF.Imp <> X def
R54002:54002 LF.Imp <> Y def
R53979:53983 LF.Maps <> :::x_'!->'_x_';'_x not
R53985:53986 LF.Maps <> :::x_'!->'_x_';'_x not
R53988:53992 LF.Imp <> :::x_'!->'_x not
R53987:53987 LF.Imp <> Y def
R53978:53978 LF.Imp <> X def
R54003:54007 LF.Maps <> :::x_'!->'_x_';'_x not
R54009:54010 LF.Maps <> :::x_'!->'_x_';'_x not
R54012:54016 LF.Imp <> :::x_'!->'_x not
R54011:54011 LF.Imp <> X def
R54002:54002 LF.Imp <> Y def
R54035:54039 LF.Imp <> E_Ass constr
R54035:54039 LF.Imp <> E_Ass constr
R54069:54084 LF.Maps <> t_update_permute thm
R54069:54084 LF.Maps <> t_update_permute thm
def 54428:54435 <> pup_to_n
R54439:54441 LF.Imp <> com ind
R54456:54460 LF.Imp <> ::imp_scope:x_';;'_x not
R54450:54454 LF.Imp <> ::imp_scope:x_'::='_x not
R54449:54449 LF.Imp <> Y def
R54461:54466 LF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R54475:54482 LF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R54512:54517 LF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R54467:54468 LF.Imp <> ::imp_scope:'~'_x not
R54474:54474 LF.Imp <> ::imp_scope:'~'_x not
R54470:54472 LF.Imp <> ::imp_scope:x_'='_x not
R54469:54469 LF.Imp <> X def
R54494:54500 LF.Imp <> ::imp_scope:x_';;'_x not
R54484:54488 LF.Imp <> ::imp_scope:x_'::='_x not
R54483:54483 LF.Imp <> Y def
R54490:54492 LF.Imp <> ::imp_scope:x_'+'_x not
R54489:54489 LF.Imp <> Y def
R54493:54493 LF.Imp <> X def
R54502:54506 LF.Imp <> ::imp_scope:x_'::='_x not
R54501:54501 LF.Imp <> X def
R54508:54510 LF.Imp <> ::imp_scope:x_'-'_x not
R54507:54507 LF.Imp <> X def
prf 54529:54542 <> pup_to_2_ceval
R54548:54548 LF.Imp <> :::x_'=['_x_']=>'_x not
R54556:54564 LF.Imp <> :::x_'=['_x_']=>'_x not
R54573:54580 LF.Imp <> :::x_'=['_x_']=>'_x not
R54638:54638 LF.Imp <> :::x_'=['_x_']=>'_x not
R54565:54572 LF.Imp <> pup_to_n def
R54550:54554 LF.Imp <> :::x_'!->'_x not
R54549:54549 LF.Imp <> X def
R54582:54586 LF.Maps <> :::x_'!->'_x_';'_x not
R54588:54590 LF.Maps <> :::x_'!->'_x_';'_x not
R54592:54596 LF.Maps <> :::x_'!->'_x_';'_x not
R54598:54600 LF.Maps <> :::x_'!->'_x_';'_x not
R54602:54606 LF.Maps <> :::x_'!->'_x_';'_x not
R54608:54610 LF.Maps <> :::x_'!->'_x_';'_x not
R54612:54616 LF.Maps <> :::x_'!->'_x_';'_x not
R54618:54620 LF.Maps <> :::x_'!->'_x_';'_x not
R54622:54626 LF.Maps <> :::x_'!->'_x_';'_x not
R54628:54630 LF.Maps <> :::x_'!->'_x_';'_x not
R54632:54636 LF.Imp <> :::x_'!->'_x not
R54631:54631 LF.Imp <> X def
R54621:54621 LF.Imp <> Y def
R54611:54611 LF.Imp <> Y def
R54601:54601 LF.Imp <> X def
R54591:54591 LF.Imp <> Y def
R54581:54581 LF.Imp <> X def
R54669:54673 LF.Maps <> :::x_'!->'_x_';'_x not
R54675:54676 LF.Maps <> :::x_'!->'_x_';'_x not
R54678:54682 LF.Imp <> :::x_'!->'_x not
R54677:54677 LF.Imp <> X def
R54668:54668 LF.Imp <> Y def
R54656:54660 LF.Imp <> E_Seq constr
R54669:54673 LF.Maps <> :::x_'!->'_x_';'_x not
R54675:54676 LF.Maps <> :::x_'!->'_x_';'_x not
R54678:54682 LF.Imp <> :::x_'!->'_x not
R54677:54677 LF.Imp <> X def
R54668:54668 LF.Imp <> Y def
R54656:54660 LF.Imp <> E_Seq constr
R54699:54703 LF.Imp <> E_Ass constr
R54699:54703 LF.Imp <> E_Ass constr
R54750:54754 LF.Maps <> :::x_'!->'_x_';'_x not
R54756:54756 LF.Maps <> :::x_'!->'_x_';'_x not
R54758:54762 LF.Maps <> :::x_'!->'_x_';'_x not
R54764:54765 LF.Maps <> :::x_'!->'_x_';'_x not
R54767:54771 LF.Maps <> :::x_'!->'_x_';'_x not
R54773:54774 LF.Maps <> :::x_'!->'_x_';'_x not
R54776:54780 LF.Imp <> :::x_'!->'_x not
R54775:54775 LF.Imp <> X def
R54766:54766 LF.Imp <> Y def
R54757:54757 LF.Imp <> Y def
R54749:54749 LF.Imp <> X def
R54731:54741 LF.Imp <> E_WhileTrue constr
R54750:54754 LF.Maps <> :::x_'!->'_x_';'_x not
R54756:54756 LF.Maps <> :::x_'!->'_x_';'_x not
R54758:54762 LF.Maps <> :::x_'!->'_x_';'_x not
R54764:54765 LF.Maps <> :::x_'!->'_x_';'_x not
R54767:54771 LF.Maps <> :::x_'!->'_x_';'_x not
R54773:54774 LF.Maps <> :::x_'!->'_x_';'_x not
R54776:54780 LF.Imp <> :::x_'!->'_x not
R54775:54775 LF.Imp <> X def
R54766:54766 LF.Imp <> Y def
R54757:54757 LF.Imp <> Y def
R54749:54749 LF.Imp <> X def
R54731:54741 LF.Imp <> E_WhileTrue constr
R54825:54829 LF.Maps <> :::x_'!->'_x_';'_x not
R54831:54832 LF.Maps <> :::x_'!->'_x_';'_x not
R54834:54838 LF.Maps <> :::x_'!->'_x_';'_x not
R54840:54841 LF.Maps <> :::x_'!->'_x_';'_x not
R54843:54847 LF.Imp <> :::x_'!->'_x not
R54842:54842 LF.Imp <> X def
R54833:54833 LF.Imp <> Y def
R54824:54824 LF.Imp <> Y def
R54812:54816 LF.Imp <> E_Seq constr
R54862:54866 LF.Imp <> E_Ass constr
R54825:54829 LF.Maps <> :::x_'!->'_x_';'_x not
R54831:54832 LF.Maps <> :::x_'!->'_x_';'_x not
R54834:54838 LF.Maps <> :::x_'!->'_x_';'_x not
R54840:54841 LF.Maps <> :::x_'!->'_x_';'_x not
R54843:54847 LF.Imp <> :::x_'!->'_x not
R54842:54842 LF.Imp <> X def
R54833:54833 LF.Imp <> Y def
R54824:54824 LF.Imp <> Y def
R54812:54816 LF.Imp <> E_Seq constr
R54862:54866 LF.Imp <> E_Ass constr
R54862:54866 LF.Imp <> E_Ass constr
R54912:54916 LF.Maps <> :::x_'!->'_x_';'_x not
R54918:54919 LF.Maps <> :::x_'!->'_x_';'_x not
R54921:54925 LF.Maps <> :::x_'!->'_x_';'_x not
R54927:54928 LF.Maps <> :::x_'!->'_x_';'_x not
R54930:54934 LF.Maps <> :::x_'!->'_x_';'_x not
R54936:54937 LF.Maps <> :::x_'!->'_x_';'_x not
R54939:54943 LF.Maps <> :::x_'!->'_x_';'_x not
R54945:54946 LF.Maps <> :::x_'!->'_x_';'_x not
R54948:54952 LF.Maps <> :::x_'!->'_x_';'_x not
R54954:54955 LF.Maps <> :::x_'!->'_x_';'_x not
R54957:54961 LF.Imp <> :::x_'!->'_x not
R54956:54956 LF.Imp <> X def
R54947:54947 LF.Imp <> Y def
R54938:54938 LF.Imp <> Y def
R54929:54929 LF.Imp <> X def
R54920:54920 LF.Imp <> Y def
R54911:54911 LF.Imp <> X def
R54893:54903 LF.Imp <> E_WhileTrue constr
R54912:54916 LF.Maps <> :::x_'!->'_x_';'_x not
R54918:54919 LF.Maps <> :::x_'!->'_x_';'_x not
R54921:54925 LF.Maps <> :::x_'!->'_x_';'_x not
R54927:54928 LF.Maps <> :::x_'!->'_x_';'_x not
R54930:54934 LF.Maps <> :::x_'!->'_x_';'_x not
R54936:54937 LF.Maps <> :::x_'!->'_x_';'_x not
R54939:54943 LF.Maps <> :::x_'!->'_x_';'_x not
R54945:54946 LF.Maps <> :::x_'!->'_x_';'_x not
R54948:54952 LF.Maps <> :::x_'!->'_x_';'_x not
R54954:54955 LF.Maps <> :::x_'!->'_x_';'_x not
R54957:54961 LF.Imp <> :::x_'!->'_x not
R54956:54956 LF.Imp <> X def
R54947:54947 LF.Imp <> Y def
R54938:54938 LF.Imp <> Y def
R54929:54929 LF.Imp <> X def
R54920:54920 LF.Imp <> Y def
R54911:54911 LF.Imp <> X def
R54893:54903 LF.Imp <> E_WhileTrue constr
R55010:55014 LF.Maps <> :::x_'!->'_x_';'_x not
R55016:55017 LF.Maps <> :::x_'!->'_x_';'_x not
R55019:55023 LF.Maps <> :::x_'!->'_x_';'_x not
R55025:55026 LF.Maps <> :::x_'!->'_x_';'_x not
R55028:55032 LF.Maps <> :::x_'!->'_x_';'_x not
R55034:55035 LF.Maps <> :::x_'!->'_x_';'_x not
R55037:55041 LF.Maps <> :::x_'!->'_x_';'_x not
R55043:55044 LF.Maps <> :::x_'!->'_x_';'_x not
R55046:55050 LF.Imp <> :::x_'!->'_x not
R55045:55045 LF.Imp <> X def
R55036:55036 LF.Imp <> Y def
R55027:55027 LF.Imp <> Y def
R55018:55018 LF.Imp <> X def
R55009:55009 LF.Imp <> Y def
R54997:55001 LF.Imp <> E_Seq constr
R55066:55070 LF.Imp <> E_Ass constr
R55010:55014 LF.Maps <> :::x_'!->'_x_';'_x not
R55016:55017 LF.Maps <> :::x_'!->'_x_';'_x not
R55019:55023 LF.Maps <> :::x_'!->'_x_';'_x not
R55025:55026 LF.Maps <> :::x_'!->'_x_';'_x not
R55028:55032 LF.Maps <> :::x_'!->'_x_';'_x not
R55034:55035 LF.Maps <> :::x_'!->'_x_';'_x not
R55037:55041 LF.Maps <> :::x_'!->'_x_';'_x not
R55043:55044 LF.Maps <> :::x_'!->'_x_';'_x not
R55046:55050 LF.Imp <> :::x_'!->'_x not
R55045:55045 LF.Imp <> X def
R55036:55036 LF.Imp <> Y def
R55027:55027 LF.Imp <> Y def
R55018:55018 LF.Imp <> X def
R55009:55009 LF.Imp <> Y def
R54997:55001 LF.Imp <> E_Seq constr
R55066:55070 LF.Imp <> E_Ass constr
R55066:55070 LF.Imp <> E_Ass constr
R55099:55110 LF.Imp <> E_WhileFalse constr
R55099:55110 LF.Imp <> E_WhileFalse constr
prf 55817:55835 <> ceval_deterministic
R55879:55888 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R55904:55912 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R55916:55918 Coq.Init.Logic <> ::type_scope:x_'='_x not
R55913:55915 LF.Imp <> st1 var
R55919:55921 LF.Imp <> st2 var
R55891:55894 LF.Imp <> :::x_'=['_x_']=>'_x not
R55896:55900 LF.Imp <> :::x_'=['_x_']=>'_x not
R55895:55895 LF.Imp <> c var
R55889:55890 LF.Imp <> st var
R55901:55903 LF.Imp <> st2 var
R55866:55869 LF.Imp <> :::x_'=['_x_']=>'_x not
R55871:55875 LF.Imp <> :::x_'=['_x_']=>'_x not
R55870:55870 LF.Imp <> c var
R55864:55865 LF.Imp <> st var
R55876:55878 LF.Imp <> st1 var
R56141:56143 Coq.Init.Logic <> ::type_scope:x_'='_x not
R56141:56143 Coq.Init.Logic <> ::type_scope:x_'='_x not
R56926:56928 Coq.Init.Logic <> ::type_scope:x_'='_x not
R56926:56928 Coq.Init.Logic <> ::type_scope:x_'='_x not
prf 57441:57450 <> plus2_spec
R57481:57486 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R57506:57511 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R57517:57519 Coq.Init.Logic <> ::type_scope:x_'='_x not
R57512:57514 LF.Imp <> st' var
R57516:57516 LF.Imp <> X def
R57521:57523 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R57520:57520 LF.Imp <> n var
R57489:57492 LF.Imp <> :::x_'=['_x_']=>'_x not
R57498:57502 LF.Imp <> :::x_'=['_x_']=>'_x not
R57493:57497 LF.Imp <> plus2 def
R57487:57488 LF.Imp <> st var
R57503:57505 LF.Imp <> st' var
R57477:57479 Coq.Init.Logic <> ::type_scope:x_'='_x not
R57473:57474 LF.Imp <> st var
R57476:57476 LF.Imp <> X def
R57480:57480 LF.Imp <> n var
R57850:57860 LF.Maps <> t_update_eq thm
R57850:57860 LF.Maps <> t_update_eq thm
def 58069:58100 <> manual_grade_for_XtimesYinZ_spec
R58104:58109 Coq.Init.Datatypes <> option ind
R58115:58115 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R58112:58114 Coq.Init.Datatypes <> nat ind
R58116:58121 Coq.Strings.String <> string ind
R58127:58130 Coq.Init.Datatypes <> None constr
prf 58225:58240 <> loop_never_stops
R58261:58262 Coq.Init.Logic <> ::type_scope:'~'_x not
R58281:58281 Coq.Init.Logic <> ::type_scope:'~'_x not
R58265:58268 LF.Imp <> :::x_'=['_x_']=>'_x not
R58273:58277 LF.Imp <> :::x_'=['_x_']=>'_x not
R58269:58272 LF.Imp <> loop def
R58263:58264 LF.Imp <> st var
R58278:58280 LF.Imp <> st' var
R58322:58325 LF.Imp <> loop def
R58350:58355 LF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R58360:58363 LF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R58368:58371 LF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R58356:58359 Coq.Init.Datatypes <> true constr
R58364:58367 LF.Imp <> ::imp_scope:'SKIP' not
R58350:58355 LF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R58360:58363 LF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R58368:58371 LF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R58356:58359 Coq.Init.Datatypes <> true constr
R58364:58367 LF.Imp <> ::imp_scope:'SKIP' not
def 59006:59014 <> no_whiles
R59021:59023 LF.Imp <> com ind
R59028:59031 Coq.Init.Datatypes <> bool ind
R59044:59044 LF.Imp <> c var
R59055:59058 LF.Imp <> ::imp_scope:'SKIP' not
R59069:59072 Coq.Init.Datatypes <> true constr
R59079:59083 LF.Imp <> ::imp_scope:x_'::='_x not
R59095:59098 Coq.Init.Datatypes <> true constr
R59106:59109 LF.Imp <> ::imp_scope:x_';;'_x not
R59122:59125 Coq.Init.Datatypes <> andb def
R59143:59151 LF.Imp <> no_whiles def
R59128:59136 LF.Imp <> no_whiles def
R59161:59165 LF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R59167:59172 LF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R59175:59180 LF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R59183:59185 LF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R59196:59199 Coq.Init.Datatypes <> andb def
R59217:59225 LF.Imp <> no_whiles def
R59202:59210 LF.Imp <> no_whiles def
R59235:59240 LF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R59242:59245 LF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R59247:59250 LF.Imp <> ::imp_scope:'WHILE'_x_'DO'_x_'END' not
R59262:59266 Coq.Init.Datatypes <> false constr
ind 59585:59594 <> no_whilesR
constr 59615:59620 <> N_Skip
constr 59642:59646 <> N_Ass
constr 59677:59681 <> N_Seq
constr 59763:59768 <> N_Test
R59600:59603 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R59597:59599 LF.Imp <> com ind
R59623:59632 LF.Imp <> no_whilesR ind
R59634:59637 LF.Imp <> ::imp_scope:'SKIP' not
R59653:59662 LF.Imp <> no_whilesR ind
R59666:59670 LF.Imp <> ::imp_scope:x_'::='_x not
R59665:59665 LF.Imp <> x var
R59671:59671 LF.Imp <> a var
R59709:59717 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R59731:59739 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R59740:59749 LF.Imp <> no_whilesR ind
R59754:59755 LF.Imp <> ::imp_scope:x_';;'_x not
R59752:59753 LF.Imp <> c1 var
R59756:59757 LF.Imp <> c2 var
R59718:59727 LF.Imp <> no_whilesR ind
R59729:59730 LF.Imp <> c2 var
R59696:59705 LF.Imp <> no_whilesR ind
R59707:59708 LF.Imp <> c1 var
R59798:59806 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R59820:59828 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R59829:59838 LF.Imp <> no_whilesR ind
R59841:59845 LF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R59847:59852 LF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R59855:59860 LF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R59863:59865 LF.Imp <> ::imp_scope:'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R59846:59846 LF.Imp <> b var
R59853:59854 LF.Imp <> c1 var
R59861:59862 LF.Imp <> c2 var
R59807:59816 LF.Imp <> no_whilesR ind
R59818:59819 LF.Imp <> c2 var
R59785:59794 LF.Imp <> no_whilesR ind
R59796:59797 LF.Imp <> c1 var
prf 59879:59891 <> no_whiles_eqv
R59925:59929 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R59918:59920 Coq.Init.Logic <> ::type_scope:x_'='_x not
R59907:59915 LF.Imp <> no_whiles def
R59917:59917 LF.Imp <> c var
R59921:59924 Coq.Init.Datatypes <> true constr
R59930:59939 LF.Imp <> no_whilesR ind
R59941:59941 LF.Imp <> c var
R60036:60044 LF.Imp <> no_whiles def
R60036:60044 LF.Imp <> no_whiles def
R60128:60136 LF.Imp <> no_whiles def
R60128:60136 LF.Imp <> no_whiles def
R60198:60206 Coq.Bool.Bool <> andb_comm thm
R60198:60206 Coq.Bool.Bool <> andb_comm thm
R60198:60206 Coq.Bool.Bool <> andb_comm thm
R60244:60252 LF.Imp <> no_whiles def
R60244:60252 LF.Imp <> no_whiles def
R60336:60344 LF.Imp <> no_whiles def
R60336:60344 LF.Imp <> no_whiles def
R60406:60414 Coq.Bool.Bool <> andb_comm thm
R60406:60414 Coq.Bool.Bool <> andb_comm thm
R60406:60414 Coq.Bool.Bool <> andb_comm thm
prf 60877:60897 <> no_whiles_terminating
R60933:60936 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R60937:60943 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R60947:60948 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R60951:60952 LF.Imp <> :::x_'=['_x_']=>'_x not
R60954:60956 LF.Imp <> :::x_'=['_x_']=>'_x not
R60953:60953 LF.Imp <> c var
R60949:60950 LF.Imp <> st var
R60957:60959 LF.Imp <> st' var
R60926:60928 Coq.Init.Logic <> ::type_scope:x_'='_x not
R60915:60923 LF.Imp <> no_whiles def
R60925:60925 LF.Imp <> c var
R60929:60932 Coq.Init.Datatypes <> true constr
R61063:61068 LF.Imp <> E_Skip constr
R61063:61068 LF.Imp <> E_Skip constr
R61084:61088 LF.Maps <> :::x_'!->'_x_';'_x not
R61099:61100 LF.Maps <> :::x_'!->'_x_';'_x not
R61089:61093 LF.Imp <> aeval def
R61084:61088 LF.Maps <> :::x_'!->'_x_';'_x not
R61099:61100 LF.Maps <> :::x_'!->'_x_';'_x not
R61089:61093 LF.Imp <> aeval def
R61112:61116 LF.Imp <> E_Ass constr
R61112:61116 LF.Imp <> E_Ass constr
R61142:61154 Coq.Bool.Bool <> andb_true_iff thm
R61142:61154 Coq.Bool.Bool <> andb_true_iff thm
R61359:61363 LF.Imp <> E_Seq constr
R61359:61363 LF.Imp <> E_Seq constr
R61420:61424 LF.Imp <> beval def
R61420:61424 LF.Imp <> beval def
R61452:61464 Coq.Bool.Bool <> andb_true_iff thm
R61452:61464 Coq.Bool.Bool <> andb_true_iff thm
R61617:61624 LF.Imp <> E_IfTrue constr
R61617:61624 LF.Imp <> E_IfTrue constr
R61674:61686 Coq.Bool.Bool <> andb_true_iff thm
R61674:61686 Coq.Bool.Bool <> andb_true_iff thm
R61839:61847 LF.Imp <> E_IfFalse constr
R61839:61847 LF.Imp <> E_IfFalse constr
def 61959:61996 <> manual_grade_for_no_whiles_terminating
R62000:62005 Coq.Init.Datatypes <> option ind
R62011:62011 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R62008:62010 Coq.Init.Datatypes <> nat ind
R62012:62017 Coq.Strings.String <> string ind
R62023:62026 Coq.Init.Datatypes <> None constr
ind 63535:63540 <> sinstr
constr 63554:63558 <> SPush
constr 63572:63576 <> SLoad
constr 63593:63597 <> SPlus
constr 63601:63606 <> SMinus
constr 63610:63614 <> SMult
R63565:63567 Coq.Init.Datatypes <> nat ind
R63569:63569 LF.Imp <> sinstr ind
R63583:63588 Coq.Strings.String <> string ind
R63590:63590 LF.Imp <> sinstr ind
R63598:63598 LF.Imp <> sinstr ind
R63607:63607 LF.Imp <> sinstr ind
R63615:63615 LF.Imp <> sinstr ind
def 64279:64287 <> s_execute
R64295:64299 LF.Imp <> state def
R64311:64314 Coq.Init.Datatypes <> list ind
R64316:64318 Coq.Init.Datatypes <> nat ind
R64348:64351 Coq.Init.Datatypes <> list ind
R64353:64358 LF.Imp <> sinstr ind
R64380:64383 Coq.Init.Datatypes <> list ind
R64385:64387 Coq.Init.Datatypes <> nat ind
R64400:64403 LF.Imp <> prog var
R64414:64416 Coq.Init.Datatypes <> nil constr
R64421:64425 LF.Imp <> stack var
R64432:64435 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R64470:64474 LF.Imp <> SPush constr
R64481:64489 LF.Imp <> s_execute def
R64496:64499 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R64500:64504 LF.Imp <> stack var
R64491:64492 LF.Imp <> st var
R64525:64529 LF.Imp <> SLoad constr
R64536:64544 LF.Imp <> s_execute def
R64550:64550 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R64555:64559 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R64551:64552 LF.Imp <> st var
R64560:64564 LF.Imp <> stack var
R64546:64547 LF.Imp <> st var
R64585:64589 LF.Imp <> SPlus constr
R64600:64604 LF.Imp <> stack var
R64641:64644 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R64647:64650 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R64699:64701 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R64735:64743 LF.Imp <> s_execute def
R64752:64755 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R64749:64751 LF.Imp <> new var
R64745:64746 LF.Imp <> st var
R64796:64798 Coq.Init.Datatypes <> nil constr
R64845:64850 LF.Imp <> SMinus constr
R64861:64865 LF.Imp <> stack var
R64902:64905 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R64908:64911 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R64960:64962 Coq.Init.Peano <> ::nat_scope:x_'-'_x not
R64996:65004 LF.Imp <> s_execute def
R65013:65016 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R65010:65012 LF.Imp <> new var
R65006:65007 LF.Imp <> st var
R65057:65059 Coq.Init.Datatypes <> nil constr
R65106:65110 LF.Imp <> SMult constr
R65121:65125 LF.Imp <> stack var
R65162:65165 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R65168:65171 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R65220:65222 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R65256:65264 LF.Imp <> s_execute def
R65273:65276 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R65270:65272 LF.Imp <> new var
R65266:65267 LF.Imp <> st var
R65317:65319 Coq.Init.Datatypes <> nil constr
def 65384:65393 <> s_execute1
R65466:65471 Coq.Init.Logic <> ::type_scope:x_'='_x not
R65402:65410 LF.Imp <> s_execute def
R65431:65431 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R65439:65440 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R65448:65449 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R65457:65458 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R65465:65465 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R65432:65436 LF.Imp <> SPush constr
R65441:65445 LF.Imp <> SPush constr
R65450:65454 LF.Imp <> SPush constr
R65459:65464 LF.Imp <> SMinus constr
R65421:65422 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R65412:65419 LF.Imp <> empty_st def
R65472:65472 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R65474:65475 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R65477:65477 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
def 65514:65523 <> s_execute2
R65597:65602 Coq.Init.Logic <> ::type_scope:x_'='_x not
R65532:65540 LF.Imp <> s_execute def
R65565:65565 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R65573:65574 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R65582:65583 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R65589:65590 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R65596:65596 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R65566:65570 LF.Imp <> SPush constr
R65575:65579 LF.Imp <> SLoad constr
R65581:65581 LF.Imp <> X def
R65584:65588 LF.Imp <> SMult constr
R65591:65595 LF.Imp <> SPlus constr
R65552:65552 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R65554:65554 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R65556:65556 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R65544:65548 LF.Imp <> :::x_'!->'_x not
R65543:65543 LF.Imp <> X def
R65603:65603 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R65606:65607 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R65609:65609 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
def 65846:65854 <> s_compile
R65861:65864 LF.Imp <> aexp ind
R65869:65872 Coq.Init.Datatypes <> list ind
R65874:65879 LF.Imp <> sinstr ind
R65892:65892 LF.Imp <> e var
R65903:65906 LF.Imp <> ANum constr
R65913:65913 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R65921:65921 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R65914:65918 LF.Imp <> SPush constr
R65927:65929 LF.Imp <> AId constr
R65936:65936 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R65944:65944 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R65937:65941 LF.Imp <> SLoad constr
R65950:65954 LF.Imp <> APlus constr
R65965:65965 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R65978:65982 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R65966:65974 LF.Imp <> s_compile def
R65983:65983 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R65996:66000 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R65984:65992 LF.Imp <> s_compile def
R66001:66001 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R66007:66007 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R66002:66006 LF.Imp <> SPlus constr
R66013:66018 LF.Imp <> AMinus constr
R66029:66029 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R66042:66046 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R66030:66038 LF.Imp <> s_compile def
R66047:66047 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R66060:66064 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R66048:66056 LF.Imp <> s_compile def
R66065:66065 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R66072:66072 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R66066:66071 LF.Imp <> SMinus constr
R66078:66082 LF.Imp <> AMult constr
R66093:66093 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R66106:66110 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R66094:66102 LF.Imp <> s_compile def
R66111:66111 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R66124:66128 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R66112:66120 LF.Imp <> s_compile def
R66129:66129 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R66135:66135 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R66130:66134 LF.Imp <> SMult constr
def 66242:66251 <> s_compile1
R66284:66288 Coq.Init.Logic <> ::type_scope:x_'='_x not
R66257:66265 LF.Imp <> s_compile def
R66269:66272 LF.Imp <> ::imp_scope:x_'-'_x not
R66278:66278 LF.Imp <> ::imp_scope:x_'-'_x not
R66268:66268 LF.Imp <> X def
R66274:66276 LF.Imp <> ::imp_scope:x_'*'_x not
R66277:66277 LF.Imp <> Y def
R66289:66289 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R66297:66298 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R66306:66307 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R66315:66316 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R66322:66323 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R66330:66330 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R66290:66294 LF.Imp <> SLoad constr
R66296:66296 LF.Imp <> X def
R66299:66303 LF.Imp <> SPush constr
R66308:66312 LF.Imp <> SLoad constr
R66314:66314 LF.Imp <> Y def
R66317:66321 LF.Imp <> SMult constr
R66324:66329 LF.Imp <> SMinus constr
prf 67049:67061 <> s_compile_app
R67133:67137 Coq.Init.Logic <> ::type_scope:x_'='_x not
R67091:67099 LF.Imp <> s_execute def
R67111:67111 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R67123:67127 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R67112:67120 LF.Imp <> s_compile def
R67122:67122 LF.Imp <> e var
R67128:67131 LF.Imp <> prog var
R67104:67108 LF.Imp <> stack var
R67101:67102 LF.Imp <> st var
R67138:67146 LF.Imp <> s_execute def
R67175:67178 LF.Imp <> prog var
R67152:67152 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R67163:67167 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R67153:67157 LF.Imp <> aeval def
R67162:67162 LF.Imp <> e var
R67159:67160 LF.Imp <> st var
R67168:67172 LF.Imp <> stack var
R67148:67149 LF.Imp <> st var
R67262:67270 Coq.Lists.List <> app_assoc thm
R67262:67270 Coq.Lists.List <> app_assoc thm
R67262:67270 Coq.Lists.List <> app_assoc thm
R67284:67292 Coq.Lists.List <> app_assoc thm
R67284:67292 Coq.Lists.List <> app_assoc thm
R67284:67292 Coq.Lists.List <> app_assoc thm
R67356:67364 Coq.Arith.Plus <> plus_comm syndef
R67356:67364 Coq.Arith.Plus <> plus_comm syndef
R67356:67364 Coq.Arith.Plus <> plus_comm syndef
R67399:67407 Coq.Lists.List <> app_assoc thm
R67399:67407 Coq.Lists.List <> app_assoc thm
R67399:67407 Coq.Lists.List <> app_assoc thm
R67421:67429 Coq.Lists.List <> app_assoc thm
R67421:67429 Coq.Lists.List <> app_assoc thm
R67421:67429 Coq.Lists.List <> app_assoc thm
R67518:67526 Coq.Lists.List <> app_assoc thm
R67518:67526 Coq.Lists.List <> app_assoc thm
R67518:67526 Coq.Lists.List <> app_assoc thm
R67540:67548 Coq.Lists.List <> app_assoc thm
R67540:67548 Coq.Lists.List <> app_assoc thm
R67540:67548 Coq.Lists.List <> app_assoc thm
R67612:67620 Coq.Arith.Mult <> mult_comm syndef
R67612:67620 Coq.Arith.Mult <> mult_comm syndef
R67612:67620 Coq.Arith.Mult <> mult_comm syndef
prf 67655:67671 <> s_compile_correct
R67688:67692 LF.Imp <> state def
R67700:67703 LF.Imp <> aexp ind
R67738:67740 Coq.Init.Logic <> ::type_scope:x_'='_x not
R67709:67717 LF.Imp <> s_execute def
R67726:67734 LF.Imp <> s_compile def
R67736:67736 LF.Imp <> e var
R67722:67723 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R67719:67720 LF.Imp <> st var
R67741:67742 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R67753:67754 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R67743:67747 LF.Imp <> aeval def
R67752:67752 LF.Imp <> e var
R67749:67750 LF.Imp <> st var
R67793:67801 Coq.Lists.List <> app_nil_r thm
R67803:67803 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R67814:67814 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R67804:67808 LF.Imp <> aeval def
R67793:67801 Coq.Lists.List <> app_nil_r thm
R67803:67803 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R67814:67814 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R67804:67808 LF.Imp <> aeval def
R67793:67801 Coq.Lists.List <> app_nil_r thm
R67803:67803 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R67814:67814 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R67804:67808 LF.Imp <> aeval def
R67832:67840 Coq.Lists.List <> app_nil_r thm
R67843:67851 LF.Imp <> s_compile def
R67832:67840 Coq.Lists.List <> app_nil_r thm
R67843:67851 LF.Imp <> s_compile def
R67832:67840 Coq.Lists.List <> app_nil_r thm
R67843:67851 LF.Imp <> s_compile def
R67866:67878 LF.Imp <> s_compile_app thm
R67866:67878 LF.Imp <> s_compile_app thm
def 68781:68788 <> beval_sc
R68795:68799 LF.Imp <> state def
R68806:68809 LF.Imp <> bexp ind
R68813:68816 Coq.Init.Datatypes <> bool ind
R68829:68829 LF.Imp <> b var
R68840:68844 LF.Imp <> BTrue constr
R68855:68858 Coq.Init.Datatypes <> true constr
R68864:68869 LF.Imp <> BFalse constr
R68879:68883 Coq.Init.Datatypes <> false constr
R68889:68891 LF.Imp <> BEq constr
R68904:68904 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R68916:68921 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R68933:68933 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R68905:68909 LF.Imp <> aeval def
R68911:68912 LF.Imp <> st var
R68922:68926 LF.Imp <> aeval def
R68928:68929 LF.Imp <> st var
R68939:68941 LF.Imp <> BLe constr
R68954:68954 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R68966:68972 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R68984:68984 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R68955:68959 LF.Imp <> aeval def
R68961:68962 LF.Imp <> st var
R68973:68977 LF.Imp <> aeval def
R68979:68980 LF.Imp <> st var
R68990:68993 LF.Imp <> BNot constr
R69005:69008 Coq.Init.Datatypes <> negb def
R69011:69015 LF.Imp <> beval def
R69017:69018 LF.Imp <> st var
R69028:69031 LF.Imp <> BAnd constr
R69046:69053 LF.Imp <> beval_sc def
R69055:69056 LF.Imp <> st var
R69120:69124 Coq.Init.Datatypes <> false constr
R69066:69073 LF.Imp <> beval_sc def
R69075:69076 LF.Imp <> st var
prf 69142:69152 <> beval_equiv
R69183:69185 Coq.Init.Logic <> ::type_scope:x_'='_x not
R69170:69177 LF.Imp <> beval_sc def
R69182:69182 LF.Imp <> b var
R69179:69180 LF.Imp <> st var
R69186:69190 LF.Imp <> beval def
R69195:69195 LF.Imp <> b var
R69192:69193 LF.Imp <> st var
R69271:69278 LF.Imp <> beval_sc def
R69271:69278 LF.Imp <> beval_sc def
mod 69424:69431 <> BreakImp
ind 69771:69773 BreakImp com
constr 69789:69793 BreakImp CSkip
constr 69799:69804 BreakImp CBreak
constr 69848:69851 BreakImp CAss
constr 69881:69884 BreakImp CSeq
constr 69904:69906 BreakImp CIf
constr 69937:69942 BreakImp CWhile
R69794:69794 LF.Imp <> com ind
R69805:69805 LF.Imp <> com ind
R69858:69863 Coq.Strings.String <> string ind
R69871:69874 LF.Imp <> aexp ind
R69876:69876 LF.Imp <> com ind
R69895:69897 LF.Imp <> com ind
R69899:69899 LF.Imp <> com ind
R69913:69916 LF.Imp <> bexp ind
R69928:69930 LF.Imp <> com ind
R69932:69932 LF.Imp <> com ind
R69949:69952 LF.Imp <> bexp ind
R69960:69962 LF.Imp <> com ind
R69964:69964 LF.Imp <> com ind
R69990:69994 LF.Imp BreakImp CSkip constr
not 69976:69976 BreakImp :::'SKIP'
R70021:70026 LF.Imp BreakImp CBreak constr
not 70006:70006 BreakImp :::'BREAK'
R70056:70059 LF.Imp BreakImp CAss constr
not 70038:70038 BreakImp :::x_'::='_x
R70107:70110 LF.Imp BreakImp CSeq constr
not 70090:70090 BreakImp :::x_';;'_x
R70195:70200 LF.Imp BreakImp CWhile constr
not 70164:70164 BreakImp :::'WHILE'_x_'DO'_x_'END'
R70295:70297 LF.Imp BreakImp CIf constr
not 70252:70252 BreakImp :::'TEST'_x_'THEN'_x_'ELSE'_x_'FI'
ind 71400:71405 BreakImp result
constr 71421:71429 BreakImp SContinue
constr 71435:71440 BreakImp SBreak
R71430:71430 LF.Imp <> result ind
R71441:71441 LF.Imp <> result ind
ind 73828:73832 BreakImp ceval
constr 73883:73888 BreakImp E_Skip
constr 73944:73948 BreakImp E_Ass
constr 74033:74039 BreakImp E_Break
constr 74092:74097 BreakImp E_SeqB
constr 74197:74202 BreakImp E_SeqC
constr 74339:74346 BreakImp E_IfTrue
constr 74483:74491 BreakImp E_IfFalse
constr 74629:74640 BreakImp E_WhileFalse
constr 74739:74750 BreakImp E_WhileTrueB
constr 74885:74896 BreakImp E_WhileTrueC
R73839:73842 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R73848:73851 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R73858:73861 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R73867:73870 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R73862:73866 LF.Imp <> state def
R73852:73857 LF.Imp BreakImp result ind
R73843:73847 LF.Imp <> state def
R73836:73838 LF.Imp BreakImp com ind
R75127:75131 LF.Imp <> ceval ind
R73911:73914 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R73920:73924 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R73927:73929 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R73915:73919 LF.Imp BreakImp CSkip constr
R73909:73910 LF.Imp <> st var
R73930:73938 LF.Imp BreakImp SContinue constr
R73925:73926 LF.Imp <> st var
R73975:73978 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R73987:73992 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74015:74018 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R73979:73982 LF.Imp BreakImp CAss constr
R73986:73986 LF.Imp <> n var
R73984:73984 LF.Imp <> x var
R73973:73974 LF.Imp <> st var
R74019:74027 LF.Imp BreakImp SContinue constr
R73994:73999 LF.Maps <> :::x_'!->'_x_';'_x not
R74010:74012 LF.Maps <> :::x_'!->'_x_';'_x not
R74013:74014 LF.Imp <> st var
R73993:73993 LF.Imp <> x var
R74000:74004 LF.Imp <> aeval def
R74009:74009 LF.Imp <> n var
R74006:74007 LF.Imp <> st var
R74061:74064 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74071:74075 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74078:74080 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74065:74070 LF.Imp BreakImp CBreak constr
R74059:74060 LF.Imp <> st var
R74081:74086 LF.Imp BreakImp SBreak constr
R74076:74077 LF.Imp <> st var
R74152:74161 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R74164:74167 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74176:74179 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74183:74185 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74170:74173 LF.Imp BreakImp :::x_';;'_x not
R74168:74169 LF.Imp <> c1 var
R74174:74175 LF.Imp <> c2 var
R74162:74163 LF.Imp <> st var
R74186:74191 LF.Imp BreakImp SBreak constr
R74180:74182 LF.Imp <> st' var
R74129:74132 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74135:74139 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74143:74145 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74133:74134 LF.Imp <> c1 var
R74127:74128 LF.Imp <> st var
R74146:74151 LF.Imp BreakImp SBreak constr
R74140:74142 LF.Imp <> st' var
R74267:74276 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R74298:74307 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R74310:74313 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74322:74325 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74330:74332 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74316:74319 LF.Imp BreakImp :::x_';;'_x not
R74314:74315 LF.Imp <> c1 var
R74320:74321 LF.Imp <> c2 var
R74308:74309 LF.Imp <> st var
R74333:74333 LF.Imp <> r var
R74326:74329 LF.Imp <> st'' var
R74279:74282 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74285:74289 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74294:74296 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74283:74284 LF.Imp <> c1 var
R74277:74278 LF.Imp <> st var
R74297:74297 LF.Imp <> r var
R74290:74293 LF.Imp <> st'' var
R74241:74244 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74247:74251 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74255:74257 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74245:74246 LF.Imp <> c1 var
R74239:74240 LF.Imp <> st var
R74258:74266 LF.Imp BreakImp SContinue constr
R74252:74254 LF.Imp <> st' var
R74397:74406 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R74427:74436 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R74439:74442 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74468:74471 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74475:74476 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74443:74447 LF.Imp BreakImp :::'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R74449:74454 LF.Imp BreakImp :::'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R74457:74462 LF.Imp BreakImp :::'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R74465:74467 LF.Imp BreakImp :::'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R74448:74448 LF.Imp <> b var
R74455:74456 LF.Imp <> c1 var
R74463:74464 LF.Imp <> c2 var
R74437:74438 LF.Imp <> st var
R74477:74477 LF.Imp <> r var
R74472:74474 LF.Imp <> st' var
R74409:74412 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74415:74419 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74423:74425 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74413:74414 LF.Imp <> c1 var
R74407:74408 LF.Imp <> st var
R74426:74426 LF.Imp <> r var
R74420:74422 LF.Imp <> st' var
R74390:74392 Coq.Init.Logic <> ::type_scope:x_'='_x not
R74380:74384 LF.Imp <> beval def
R74389:74389 LF.Imp <> b var
R74386:74387 LF.Imp <> st var
R74393:74396 Coq.Init.Datatypes <> true constr
R74543:74552 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R74573:74582 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R74585:74588 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74614:74617 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74621:74622 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74589:74593 LF.Imp BreakImp :::'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R74595:74600 LF.Imp BreakImp :::'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R74603:74608 LF.Imp BreakImp :::'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R74611:74613 LF.Imp BreakImp :::'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R74594:74594 LF.Imp <> b var
R74601:74602 LF.Imp <> c1 var
R74609:74610 LF.Imp <> c2 var
R74583:74584 LF.Imp <> st var
R74623:74623 LF.Imp <> r var
R74618:74620 LF.Imp <> st' var
R74555:74558 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74561:74565 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74569:74571 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74559:74560 LF.Imp <> c2 var
R74553:74554 LF.Imp <> st var
R74572:74572 LF.Imp <> r var
R74566:74568 LF.Imp <> st' var
R74535:74537 Coq.Init.Logic <> ::type_scope:x_'='_x not
R74525:74529 LF.Imp <> beval def
R74534:74534 LF.Imp <> b var
R74531:74532 LF.Imp <> st var
R74538:74542 Coq.Init.Datatypes <> false constr
R74683:74692 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R74695:74698 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74715:74719 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74722:74724 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74699:74704 LF.Imp BreakImp :::'WHILE'_x_'DO'_x_'END' not
R74706:74709 LF.Imp BreakImp :::'WHILE'_x_'DO'_x_'END' not
R74711:74714 LF.Imp BreakImp :::'WHILE'_x_'DO'_x_'END' not
R74705:74705 LF.Imp <> b var
R74710:74710 LF.Imp <> c var
R74693:74694 LF.Imp <> st var
R74725:74733 LF.Imp BreakImp SContinue constr
R74720:74721 LF.Imp <> st var
R74675:74677 Coq.Init.Logic <> ::type_scope:x_'='_x not
R74665:74669 LF.Imp <> beval def
R74674:74674 LF.Imp <> b var
R74671:74672 LF.Imp <> st var
R74678:74682 Coq.Init.Datatypes <> false constr
R74795:74804 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R74828:74837 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R74840:74843 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74860:74864 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74868:74870 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74844:74849 LF.Imp BreakImp :::'WHILE'_x_'DO'_x_'END' not
R74851:74854 LF.Imp BreakImp :::'WHILE'_x_'DO'_x_'END' not
R74856:74859 LF.Imp BreakImp :::'WHILE'_x_'DO'_x_'END' not
R74850:74850 LF.Imp <> b var
R74855:74855 LF.Imp <> c var
R74838:74839 LF.Imp <> st var
R74871:74879 LF.Imp BreakImp SContinue constr
R74865:74867 LF.Imp <> st' var
R74807:74810 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74812:74815 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74819:74821 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74811:74811 LF.Imp <> c var
R74805:74806 LF.Imp <> st var
R74822:74827 LF.Imp BreakImp SBreak constr
R74816:74818 LF.Imp <> st' var
R74788:74790 Coq.Init.Logic <> ::type_scope:x_'='_x not
R74778:74782 LF.Imp <> beval def
R74787:74787 LF.Imp <> b var
R74784:74785 LF.Imp <> st var
R74791:74794 Coq.Init.Datatypes <> true constr
R74946:74955 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R74982:74991 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R75034:75043 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R75046:75049 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R75066:75070 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R75074:75076 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R75050:75055 LF.Imp BreakImp :::'WHILE'_x_'DO'_x_'END' not
R75057:75060 LF.Imp BreakImp :::'WHILE'_x_'DO'_x_'END' not
R75062:75065 LF.Imp BreakImp :::'WHILE'_x_'DO'_x_'END' not
R75056:75056 LF.Imp <> b var
R75061:75061 LF.Imp <> c var
R75044:75045 LF.Imp <> st var
R75077:75085 LF.Imp BreakImp SContinue constr
R75071:75073 LF.Imp <> st' var
R74995:74997 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R75014:75018 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R75023:75024 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74998:75003 LF.Imp BreakImp :::'WHILE'_x_'DO'_x_'END' not
R75005:75008 LF.Imp BreakImp :::'WHILE'_x_'DO'_x_'END' not
R75010:75013 LF.Imp BreakImp :::'WHILE'_x_'DO'_x_'END' not
R75004:75004 LF.Imp <> b var
R75009:75009 LF.Imp <> c var
R74992:74994 LF.Imp <> st' var
R75025:75033 LF.Imp BreakImp SContinue constr
R75019:75022 LF.Imp <> st'' var
R74958:74961 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74963:74966 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74970:74972 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R74962:74962 LF.Imp <> c var
R74956:74957 LF.Imp <> st var
R74973:74981 LF.Imp BreakImp SContinue constr
R74967:74969 LF.Imp <> st' var
R74939:74941 Coq.Init.Logic <> ::type_scope:x_'='_x not
R74929:74933 LF.Imp <> beval def
R74938:74938 LF.Imp <> b var
R74935:74936 LF.Imp <> st var
R74942:74945 Coq.Init.Datatypes <> true constr
R75127:75131 LF.Imp BreakImp ceval ind
not 75095:75095 BreakImp :::x_'=['_x_']=>'_x_'/'_x
prf 75229:75240 BreakImp break_ignore
R75295:75303 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R75306:75308 Coq.Init.Logic <> ::type_scope:x_'='_x not
R75304:75305 LF.Imp <> st var
R75309:75311 LF.Imp <> st' var
R75270:75273 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R75283:75287 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R75291:75293 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R75279:75281 LF.Imp BreakImp :::x_';;'_x not
R75274:75278 LF.Imp BreakImp :::'BREAK' not
R75282:75282 LF.Imp <> c var
R75268:75269 LF.Imp <> st var
R75294:75294 LF.Imp <> s var
R75288:75290 LF.Imp <> st' var
prf 75424:75437 BreakImp while_continue
R75498:75503 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R75505:75507 Coq.Init.Logic <> ::type_scope:x_'='_x not
R75504:75504 LF.Imp <> s var
R75508:75516 LF.Imp BreakImp SContinue constr
R75466:75469 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R75486:75490 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R75494:75496 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R75470:75475 LF.Imp BreakImp :::'WHILE'_x_'DO'_x_'END' not
R75477:75480 LF.Imp BreakImp :::'WHILE'_x_'DO'_x_'END' not
R75482:75485 LF.Imp BreakImp :::'WHILE'_x_'DO'_x_'END' not
R75476:75476 LF.Imp <> b var
R75481:75481 LF.Imp <> c var
R75464:75465 LF.Imp <> st var
R75497:75497 LF.Imp <> s var
R75491:75493 LF.Imp <> st' var
prf 75587:75606 BreakImp while_stops_on_break
R75648:75653 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R75678:75683 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R75686:75689 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R75706:75710 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R75714:75716 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R75690:75695 LF.Imp BreakImp :::'WHILE'_x_'DO'_x_'END' not
R75697:75700 LF.Imp BreakImp :::'WHILE'_x_'DO'_x_'END' not
R75702:75705 LF.Imp BreakImp :::'WHILE'_x_'DO'_x_'END' not
R75696:75696 LF.Imp <> b var
R75701:75701 LF.Imp <> c var
R75684:75685 LF.Imp <> st var
R75717:75725 LF.Imp BreakImp SContinue constr
R75711:75713 LF.Imp <> st' var
R75656:75659 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R75661:75665 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R75669:75671 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R75660:75660 LF.Imp <> c var
R75654:75655 LF.Imp <> st var
R75672:75677 LF.Imp BreakImp SBreak constr
R75666:75668 LF.Imp <> st' var
R75641:75643 Coq.Init.Logic <> ::type_scope:x_'='_x not
R75631:75635 LF.Imp <> beval def
R75640:75640 LF.Imp <> b var
R75637:75638 LF.Imp <> st var
R75644:75647 Coq.Init.Datatypes <> true constr
R75753:75764 LF.Imp BreakImp E_WhileTrueB constr
R75753:75764 LF.Imp BreakImp E_WhileTrueB constr
prf 75888:75903 BreakImp while_break_true
R75970:75975 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R75994:75999 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R76000:76006 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R76011:76012 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R76017:76020 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R76022:76026 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R76030:76032 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R76021:76021 LF.Imp <> c var
R76013:76016 LF.Imp <> st'' var
R76033:76038 LF.Imp BreakImp SBreak constr
R76027:76029 LF.Imp <> st' var
R75987:75989 Coq.Init.Logic <> ::type_scope:x_'='_x not
R75976:75980 LF.Imp <> beval def
R75986:75986 LF.Imp <> b var
R75982:75984 LF.Imp <> st' var
R75990:75993 Coq.Init.Datatypes <> true constr
R75930:75933 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R75950:75954 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R75958:75960 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R75934:75939 LF.Imp BreakImp :::'WHILE'_x_'DO'_x_'END' not
R75941:75944 LF.Imp BreakImp :::'WHILE'_x_'DO'_x_'END' not
R75946:75949 LF.Imp BreakImp :::'WHILE'_x_'DO'_x_'END' not
R75940:75940 LF.Imp <> b var
R75945:75945 LF.Imp <> c var
R75928:75929 LF.Imp <> st var
R75961:75969 LF.Imp BreakImp SContinue constr
R75955:75957 LF.Imp <> st' var
R76087:76092 LF.Imp BreakImp :::'WHILE'_x_'DO'_x_'END' not
R76094:76097 LF.Imp BreakImp :::'WHILE'_x_'DO'_x_'END' not
R76099:76102 LF.Imp BreakImp :::'WHILE'_x_'DO'_x_'END' not
R76087:76092 LF.Imp BreakImp :::'WHILE'_x_'DO'_x_'END' not
R76094:76097 LF.Imp BreakImp :::'WHILE'_x_'DO'_x_'END' not
R76099:76102 LF.Imp BreakImp :::'WHILE'_x_'DO'_x_'END' not
prf 76323:76341 BreakImp ceval_deterministic
R76354:76356 LF.Imp BreakImp com ind
R76402:76410 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R76431:76439 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R76449:76452 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R76443:76445 Coq.Init.Logic <> ::type_scope:x_'='_x not
R76440:76442 LF.Imp <> st1 var
R76446:76448 LF.Imp <> st2 var
R76455:76457 Coq.Init.Logic <> ::type_scope:x_'='_x not
R76453:76454 LF.Imp <> s1 var
R76458:76459 LF.Imp <> s2 var
R76413:76416 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R76418:76422 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R76426:76428 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R76417:76417 LF.Imp <> c var
R76411:76412 LF.Imp <> st var
R76429:76430 LF.Imp <> s2 var
R76423:76425 LF.Imp <> st2 var
R76384:76387 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R76389:76393 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R76397:76399 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R76388:76388 LF.Imp <> c var
R76382:76383 LF.Imp <> st var
R76400:76401 LF.Imp <> s1 var
R76394:76396 LF.Imp <> st1 var
R77336:77343 LF.Imp BreakImp <> mod
